<mxfile host="Electron" modified="2024-12-11T09:17:47.430Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="yofmsdF59BDHrMMAOXI9" version="21.6.5" type="device">
  <diagram name="第 1 页" id="V49HLDRSxaHuVmoNU_-M">
    <mxGraphModel dx="3915" dy="879" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-9" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;rounded=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-6" target="zvJbzN1AgG9XMS87pQ7Y-8" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-970" y="1000" />
              <mxPoint x="-970" y="680" />
              <mxPoint x="-1460" y="680" />
              <mxPoint x="-1460" y="960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-1" value="&lt;h1 style=&quot;font-size: 16px;&quot;&gt;Mybatis 插件工作原理&amp;nbsp;&lt;span style=&quot;font-weight: normal&quot;&gt;（3.5.9）&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;这里只分析插件实现原理（以PageHelper 5.3.3为例），其他相关内容结合主流程图看。&lt;br&gt;&lt;/p&gt;&lt;p&gt;测试Demo: SpringBoot-Labs/mybatis/mybatis-plugin。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="440" height="90" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-6" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;Configuration&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 插件的拦截器链(就是个List)，插件都实现 Interceptor 接口&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final InterceptorChain &lt;b&gt;interceptorChain&lt;/b&gt; = new InterceptorChain();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 往interceptorChain中注册插件&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void addInterceptor(Interceptor interceptor)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="120" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-11" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-7" target="3cpkV8E3IRdtKVc3-a5e-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-24" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-7" target="3cpkV8E3IRdtKVc3-a5e-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-7" value="&lt;b style=&quot;font-size: 10px;&quot;&gt;创建SqlSession工厂阶段&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;注册插件&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-14" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-10" target="3cpkV8E3IRdtKVc3-a5e-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-22" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-10" target="3cpkV8E3IRdtKVc3-a5e-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-10" value="&lt;b&gt;插件注册时机&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-12" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;插件注册到 Configuration.&lt;b&gt;interceptorChain&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="270" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-16" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-13" target="3cpkV8E3IRdtKVc3-a5e-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-13" value="&lt;b&gt;XMLConfigBuilder.parseConfiguration()&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;XML配置文件解析成 Configuration对象时&lt;br&gt;解析 &amp;lt;plugins&amp;gt; 元素节点，创建插件实例并注册&lt;br&gt;&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="520" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-18" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-15" target="3cpkV8E3IRdtKVc3-a5e-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-15" value="&lt;font style=&quot;&quot;&gt;&lt;b&gt;pluginElement&lt;/b&gt;(root.evalNode(&quot;&lt;b&gt;plugins&lt;/b&gt;&quot;));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;内部遍历所有子元素节点（每个子元素是一个插件配置），读取 interceptor 属性，反射创建插件 Interceptor 实例&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="760" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-85" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-17" target="3cpkV8E3IRdtKVc3-a5e-86" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1480" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-21" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-19" target="3cpkV8E3IRdtKVc3-a5e-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-19" value="&lt;b&gt;SqlSessionFactoryBean&lt;br&gt;.buildSqlSessionFactory()&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;mybatis-spring 中创建 SqlSession工厂B时将工厂Bean中的 plugins 注册到插件拦截器链&lt;/font&gt;&lt;br&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="520" y="400" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-20" value="&lt;div style=&quot;&quot;&gt;if (!isEmpty(this.plugins)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Stream.of(this.&lt;b&gt;plugins&lt;/b&gt;).forEach(plugin -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; targetConfiguration.&lt;b&gt;addInterceptor&lt;/b&gt;(plugin);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="760" y="400" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-30" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-23" target="3cpkV8E3IRdtKVc3-a5e-29" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-36" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-23" target="3cpkV8E3IRdtKVc3-a5e-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-37" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-23" target="3cpkV8E3IRdtKVc3-a5e-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-38" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-23" target="3cpkV8E3IRdtKVc3-a5e-35" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-15" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-23" target="zvJbzN1AgG9XMS87pQ7Y-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-23" value="&lt;b&gt;&amp;nbsp;插件增强了什么&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-25" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Interceptor (I)&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;插件的基本接口&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 插件的增强逻辑， Invocation 是原始的调用（包括类实例、方法、参数）&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Object &lt;b&gt;intercept&lt;/b&gt;(Invocation invocation) throws Throwable;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 增强方式实现，默认 Plugin.wrap()&amp;nbsp; 是使用 JDK动态代理增强&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;default Object &lt;b&gt;plugin&lt;/b&gt;(Object target)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 属性设置，这里是指给 Interceptor 实现类设置属性，比如设置数据库方言&lt;/font&gt;&lt;br&gt;&lt;/b&gt;default void &lt;b&gt;setProperties&lt;/b&gt;(Properties properties)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-480" y="280" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-28" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-27" target="3cpkV8E3IRdtKVc3-a5e-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-5" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-27" target="3cpkV8E3IRdtKVc3-a5e-72" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-27" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PageInterceptor&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;PageHelper中的插件之一，用于拦截 Executor 两个 query 方法&lt;/b&gt;&lt;br&gt;Executor#query(MappedStatement.class, Object.class, RowBound.class, ResultHandler.class&lt;/font&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;)&lt;br&gt;Executor#query(MappedStatement.class, Object.class, RowBound.class, ResultHandler.class, CacheKey.class, BoundSql.class)&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static boolean &lt;b&gt;debug&lt;/b&gt; = false;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 默认是加载 GuavaCache，但是如果没有引入 Guava 依赖, 则会转而使用 SimpleCache&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected Cache&amp;lt;String, MappedStatement&amp;gt; &lt;b&gt;msCountMap&lt;/b&gt; = null;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 用于生成 MappedStatement count 计数的缓存 Key，默认使用 MappedStatement.id + countSuffix 作为Key&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected CountMsIdGen &lt;b&gt;countMsIdGen&lt;/b&gt; = CountMsIdGen.DEFAULT;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 使用的数据库实现&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Dialect &lt;b&gt;dialect&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这个是&amp;nbsp;MappedStatement count 计数缓存Key的后缀&lt;/font&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private String &lt;b&gt;countSuffix&lt;/b&gt; = &quot;_COUNT&quot;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 如果没有配置数据库方言，使用默认的&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String default_dialect_class = &quot;com.github.pagehelper.PageHelper&quot;;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;重要方法：&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 从Properties中解析 msCountCache、dialect、countSuffix additionalParameters 设置到PageInterceptor 本地&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void setProperties(Properties properties)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="480" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-32" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-29" target="3cpkV8E3IRdtKVc3-a5e-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-29" value="创建会话时&lt;br&gt;增强 &lt;b&gt;Executor&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="280" y="640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-40" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-31" target="3cpkV8E3IRdtKVc3-a5e-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-31" value="Configuration#&lt;b&gt;newExecutor&lt;/b&gt;(Transaction transaction, ExecutorType executorType)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-60" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-33" target="3cpkV8E3IRdtKVc3-a5e-59" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-33" value="增强 &lt;b&gt;StatementHandler&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="280" y="880" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-62" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-34" target="3cpkV8E3IRdtKVc3-a5e-61" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-34" value="增强 &lt;b&gt;ParameterHandler&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="280" y="980" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-64" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-35" target="3cpkV8E3IRdtKVc3-a5e-63" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-35" value="增强 &lt;b&gt;ResultSetHandler&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="280" y="1080" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-42" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-39" target="3cpkV8E3IRdtKVc3-a5e-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-39" value="&lt;div&gt;public Executor newExecutor(Transaction transaction, ExecutorType executorType) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; executorType = executorType == null ? defaultExecutorType : executorType;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; executorType = executorType == null ? ExecutorType.SIMPLE : executorType;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Executor &lt;b&gt;executor&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (ExecutorType.BATCH == executorType) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executor = new BatchExecutor(this, transaction);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else if (ExecutorType.REUSE == executorType) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executor = new ReuseExecutor(this, transaction);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executor = new SimpleExecutor(this, transaction);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (cacheEnabled) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executor = new CachingExecutor(executor);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 为 Executor 创建JDK代理类, 增强所有匹配插件@Interceptor中指定的Executor方法&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; executor = (Executor) &lt;b&gt;interceptorChain.pluginAll(executor)&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return executor;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="760" y="640" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-44" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-41" target="3cpkV8E3IRdtKVc3-a5e-43" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-41" value="&lt;div&gt;public Object pluginAll(Object target) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (Interceptor interceptor : interceptors) {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//多个Interceptor的话会动态代理层层封装&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; target = interceptor.&lt;b&gt;plugin&lt;/b&gt;(target);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return target;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=5;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
          <mxGeometry x="1240.5" y="640" width="199.5" height="100" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-46" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-43" target="3cpkV8E3IRdtKVc3-a5e-45" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1720" y="690" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-43" value="&lt;font color=&quot;#007fff&quot;&gt;// target 要增强的目标类&lt;br&gt;&lt;/font&gt;return Plugin.wrap(target, this);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1480" y="660" width="199.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-45" value="&lt;div&gt;public static Object wrap(Object target, Interceptor interceptor) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 解析插件 Interceptor 类中 @Intercepts 注解，获取要拦截哪些类的哪些方法&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Map&amp;lt;Class&amp;lt;?&amp;gt;, Set&amp;lt;Method&amp;gt;&amp;gt; signatureMap = &lt;b&gt;getSignatureMap&lt;/b&gt;(interceptor);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;// 获取适合当前要增强的类的所有插件类&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; type = target.getClass();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt;[] interfaces = getAllInterfaces(type, signatureMap);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (interfaces.length &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // JDK 动态代理获取经过所有插件类增强之后的代理类&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return Proxy.newProxyInstance(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; type.getClassLoader(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; interfaces,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new &lt;b&gt;Plugin&lt;/b&gt;(target, interceptor, signatureMap));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return target;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1720" y="590" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-47" value="以 PageInterceptor 为例" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1504.75" y="630" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-48" value="Plugin" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1910" y="440" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-51" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-49" target="3cpkV8E3IRdtKVc3-a5e-52" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2200" y="900" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-66" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-49" target="3cpkV8E3IRdtKVc3-a5e-65" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-49" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 增强逻辑 Plugin#invoke()&lt;/font&gt;&lt;/div&gt;&lt;div&gt;public Object &lt;b&gt;invoke&lt;/b&gt;(Object proxy, Method method, Object[] args) throws Throwable {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set&amp;lt;Method&amp;gt; methods = signatureMap.get(method.getDeclaringClass());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (methods != null &amp;amp;&amp;amp; methods.contains(method)) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 增强逻辑是插件类中的 intercept() 方法&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b&gt;interceptor.intercept(new Invocation(target, method, args));&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return method.&lt;b&gt;invoke&lt;/b&gt;(target, args);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw ExceptionUtil.unwrapThrowable(e);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
          <mxGeometry x="1720" y="820" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-54" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-52" target="3cpkV8E3IRdtKVc3-a5e-53" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-52" value="&lt;b&gt;PageInterceptor&lt;/b&gt;#intercept(...)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;增强 Executor的两个query方法&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="2200" y="870" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-32" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-53" target="zvJbzN1AgG9XMS87pQ7Y-30" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2890" y="940" />
              <mxPoint x="2890" y="740" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-38" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-32" vertex="1" connectable="0">
          <mxGeometry x="0.8713" y="3" relative="1" as="geometry">
            <mxPoint x="-4" y="3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-37" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-53" target="zvJbzN1AgG9XMS87pQ7Y-36" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2890" y="940" />
              <mxPoint x="2890" y="1040" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-39" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-37" vertex="1" connectable="0">
          <mxGeometry x="0.2945" y="1" relative="1" as="geometry">
            <mxPoint x="9" y="19" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-43" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-53" target="zvJbzN1AgG9XMS87pQ7Y-42" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2890" y="940" />
              <mxPoint x="2890" y="1310" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-44" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-43" vertex="1" connectable="0">
          <mxGeometry x="0.9066" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-50" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-53" target="zvJbzN1AgG9XMS87pQ7Y-49" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2890" y="940" />
              <mxPoint x="2890" y="1560" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-51" value="5" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-50" vertex="1" connectable="0">
          <mxGeometry x="0.9424" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-53" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Object[] args = invocation.getArgs();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; MappedStatement ms = (MappedStatement) args[0];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Object parameter = args[1];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; RowBounds rowBounds = (RowBounds) args[2];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ResultHandler resultHandler = (ResultHandler) args[3];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Executor executor = (Executor) invocation.getTarget();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; CacheKey cacheKey;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; BoundSql boundSql;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; //由于逻辑关系，只会进入一次&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if(args.length == 4){&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //4 个参数时&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boundSql = ms.getBoundSql(parameter);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cacheKey = executor.createCacheKey(ms, parameter, rowBounds, boundSql);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //6 个参数时&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cacheKey = (CacheKey) args[4];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boundSql = (BoundSql) args[5];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; checkDialectExists();&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //对 boundSql 的拦截处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (dialect instanceof &lt;b&gt;BoundSqlInterceptor.Chain&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;// 1 此案例中调用 PageHelper doBoundSql() , 对 SQL进行改造&lt;/b&gt;，此测试中没有用到&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boundSql = ((BoundSqlInterceptor.Chain) dialect)&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;doBoundSql&lt;/b&gt;(BoundSqlInterceptor.Type.ORIGINAL, boundSql, cacheKey);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; List resultList;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 2 判断是否需要进行分页，如果不需要，直接返回结果&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!dialect.&lt;b&gt;skip&lt;/b&gt;(ms, parameter, rowBounds)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; //开启debug时，输出触发当前分页执行时的PageHelper调用堆栈&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //如果和当前调用堆栈不一致，说明在启用分页后没有消费，当前线程再次执行时消费，&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //调用堆栈显示的方法使用不安全&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; debugStackTraceLog();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 3 判断是否需要进行 count 查询， Page 对象 orderByOnly == false &amp;amp;&amp;amp; count == true&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (dialect.beforeCount(ms, parameter, rowBounds)) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 4 创建并执行查询总数的 SQL，&lt;/b&gt;生成的sql比如： SELECT count(0) FROM users;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Long count = &lt;b&gt;count&lt;/b&gt;(executor, ms, parameter, rowBounds, null, boundSql);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //处理查询总数，返回 true 时继续分页查询，false 时直接返回&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!dialect.afterCount(count, parameter, rowBounds)) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //当查询总数为 0 时，直接返回空的结果&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return dialect.afterPage(new ArrayList(), parameter, rowBounds);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 5 生成并执行分页查询 SQL #######&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resultList = ExecutorUtil.&lt;b&gt;pageQuery&lt;/b&gt;(dialect, executor,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ms, parameter, rowBounds, resultHandler, boundSql, cacheKey);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //rowBounds用参数值，不使用分页插件处理时，仍然支持默认的内存分页&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resultList = executor.query(ms, parameter, rowBounds, resultHandler, cacheKey, boundSql);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return dialect.afterPage(resultList, parameter, rowBounds);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (dialect != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dialect.afterAll();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="2440" y="600" width="440" height="680" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-55" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Invocation&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;原始的调用&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Object target;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Method method;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Object[] args;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;重要方法：&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 调用原始的调用&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public Object &lt;b&gt;proceed&lt;/b&gt;() throws InvocationTargetException, IllegalAccessException&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-960" y="280" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-56" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Plugin&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;implements InvocationHandler&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;使用 JDK 动态代理增强目标类（target）&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Object target;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 增强逻辑，即插件类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Interceptor interceptor;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 插件类中要增强的目标类型和方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Class&amp;lt;?&amp;gt;, Set&amp;lt;Method&amp;gt;&amp;gt; signatureMap;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;重要方法：&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 生成JDK动态代理类的方式封装插件逻辑&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static Object &lt;b&gt;wrap&lt;/b&gt;(Object target, Interceptor interceptor)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 动态代理类方法调用入口&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public Object &lt;b&gt;invoke&lt;/b&gt;(Object proxy, Method method, Object[] args) throws Throwable&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="280" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-58" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;dashed=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-57" target="3cpkV8E3IRdtKVc3-a5e-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-57" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;QueryInterceptor&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;PageHelper中的插件之一，用于拦截 Executor 两个 query 方法&lt;/b&gt;&lt;br&gt;Executor#query(MappedStatement.class, Object.class, RowBound.class, ResultHandler.class&lt;/font&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;)&lt;br&gt;Executor#query(MappedStatement.class, Object.class, RowBound.class, ResultHandler.class, CacheKey.class, BoundSql.class)&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;这个拦截器仅仅是一个模板&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-960" y="480" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-59" value="Configuration#&lt;b&gt;newStatementHandler&lt;/b&gt;(Executor executor, MappedStatement mappedStatement, Object parameterObject, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="880" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-61" value="Configuration#&lt;b&gt;newParameterHandler&lt;/b&gt;(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="980" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-63" value="&lt;div&gt;Configuration#&lt;b&gt;newResultSetHandler&lt;/b&gt;(Executor executor, MappedStatement mappedStatement, RowBounds rowBounds, ParameterHandler parameterHandler,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ResultHandler resultHandler, BoundSql boundSql)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="1080" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-65" value="&lt;b&gt;QueryInterceptor&lt;/b&gt;#intercept(...)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;增强 Executor的两个query方法，&lt;br&gt;&lt;b&gt;这个仅仅是一个模板&lt;/b&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="2200" y="980" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-70" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-69" target="3cpkV8E3IRdtKVc3-a5e-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-69" value="调用动态代理对象的方法&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;会执行动态代理对象 InvocationHandler#invoke()方法&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=9;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="1480" y="870" width="199.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-71" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;PageHelper 插件中只用到对 Executor query 方法的增强&amp;nbsp;&lt;br&gt;PageHelper 做两件事：分页查询 limit ?, ? 和 count 总条数统计&lt;br&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-480" y="810" width="370" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-72" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Dialect (I)&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;数据库方言接口，不同数据库有一些略微的差异&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;重要方法：&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 判断是否需要跳过count和分页查询&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean &lt;b&gt;skip&lt;/b&gt;(MappedStatement ms, Object parameterObject, RowBounds rowBounds);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 判断是否需要进行 count查询&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean beforeCount(MappedStatement ms, Object parameterObject, RowBounds rowBounds);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 生成 count 查询 sql&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String &lt;b&gt;getCountSql&lt;/b&gt;(MappedStatement ms, BoundSql boundSql, Object parameterObject, RowBounds rowBounds, CacheKey countKey);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 判断是否继续分页查询&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean afterCount(long count, Object parameterObject, RowBounds rowBounds);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 处理查询参数对象&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Object processParameterObject(MappedStatement ms, Object parameterObject, BoundSql boundSql, CacheKey pageKey);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 判断是否进行分页查询&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean beforePage(MappedStatement ms, Object parameterObject, RowBounds rowBounds);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 生成分页查询 sql&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String &lt;b&gt;getPageSql&lt;/b&gt;(MappedStatement ms, BoundSql boundSql, Object parameterObject, RowBounds rowBounds, CacheKey pageKey);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 分页查询后处理分页结果&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Object afterPage(List pageList, Object parameterObject, RowBounds rowBounds);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 分页查询后的处理&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void afterAll();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void setProperties(Properties properties);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="700" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-74" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;endArrow=block;endFill=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-73" target="3cpkV8E3IRdtKVc3-a5e-72" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-73" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractDialect&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;提供 getCountSql 方法的默认实现&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;// 用于生成 count SQL，内部依赖 JSqlParser&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected CountSqlParser &lt;b&gt;countSqlParser&lt;/b&gt; = new CountSqlParser();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// jsqlparser 框架的类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected JSqlParser &lt;b&gt;jSqlParser&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="1100" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-76" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-75" target="3cpkV8E3IRdtKVc3-a5e-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-75" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractHelperDialect&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;提供数据库方言中方法的默认实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="1260" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-78" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-77" target="3cpkV8E3IRdtKVc3-a5e-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-77" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractRowBoundsDialect&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;提供数据库方言中方法的默认实现，基于 RowBounds 实现分页&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="1260" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-80" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-79" target="3cpkV8E3IRdtKVc3-a5e-75" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-79" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MySqlDialect&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="1380" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-82" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-81" target="3cpkV8E3IRdtKVc3-a5e-77" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-81" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MySqlRowBoundsDialect&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="1380" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-83" value="&lt;font color=&quot;#007fff&quot;&gt;PageHelper 还支持 Db2 HsqlDB Informix Oracle SqlServer 等等数据库&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-960" y="900" width="400" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-88" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-86" target="3cpkV8E3IRdtKVc3-a5e-87" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1720" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-86" value="&lt;div&gt;PageInterceptor#setProperties(...)&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;PageInterceptor 初始化&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=9;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1480" y="260" width="199.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-34" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="3cpkV8E3IRdtKVc3-a5e-87" target="zvJbzN1AgG9XMS87pQ7Y-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-87" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1 创建并初始化缓存 count ms 的缓存实例，默认会创建 Guava 缓存实例&lt;/font&gt;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;// msCountCache 指定要使用的缓存实现类型，properties 中还存储有用于初始化缓存实例的配置属性&lt;/font&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;b&gt;msCountMap&lt;/b&gt; = CacheFactory.&lt;b&gt;createCache&lt;/b&gt;(properties.getProperty(&quot;&lt;b&gt;msCountCache&lt;/b&gt;&quot;), &quot;ms&quot;, properties);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 2 获取使用的数据库方言实现&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;String dialectClass = properties.getProperty(&quot;&lt;b&gt;dialect&lt;/b&gt;&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;if (StringUtil.isEmpty(dialectClass)) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; dialectClass = default_dialect_class;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 默认是 PageHelper&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;try {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; aClass = Class.forName(dialectClass);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; dialect = (Dialect) aClass.newInstance();&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;} catch (Exception e) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; throw new PageException(e);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 这里会对 Dialect 类对象进行初始化，比如执行 PageHelper#setPropertes&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;dialect.&lt;b&gt;setProperties&lt;/b&gt;(&lt;b&gt;properties&lt;/b&gt;);&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 3 count 后缀设置，用于生成 msCount 缓存 Key&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;String countSuffix = properties.getProperty(&quot;&lt;b&gt;countSuffix&lt;/b&gt;&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;if (StringUtil.isNotEmpty(countSuffix)) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.countSuffix = countSuffix;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// debug模式，用于排查不安全分页调用&lt;/font&gt;&lt;/div&gt;&lt;div&gt;debug = Boolean.parseBoolean(properties.getProperty(&quot;&lt;b&gt;debug&lt;/b&gt;&quot;));&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 通过 countMsId 配置自定义类&lt;/font&gt;&lt;/div&gt;&lt;div&gt;String countMsIdGenClass = properties.getProperty(&quot;&lt;b&gt;countMsIdGen&lt;/b&gt;&quot;);&lt;/div&gt;&lt;div&gt;if (StringUtil.isNotEmpty(countMsIdGenClass)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; aClass = Class.forName(countMsIdGenClass);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; countMsIdGen = (CountMsIdGen) aClass.newInstance();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (countMsIdGen instanceof PageProperties) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((PageProperties) countMsIdGen).setProperties(properties);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new PageException(e);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=9;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1720" y="160" width="440" height="400" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-89" value="&lt;b&gt;下面流程需要结合主流程看&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="40" y="160" width="170" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-90" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;这些属性都解析自 xml 文件&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1720" y="130" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-1" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;通过 Spring 配置插件的原理参考&lt;br style=&quot;font-size: 10px;&quot;&gt;pagehelper-spring-boot-starter&amp;nbsp;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="460" width="170" height="40" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-2" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;通过XML配置插件&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;border-color: var(--border-color); color: rgb(0, 127, 255); font-size: 10px;&quot;&gt;的方法，&lt;/b&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;官方文档说的并不详细，&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;但是好在源码比较简单从源码（setProperties方法）反推即可&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md&lt;br style=&quot;font-size: 10px;&quot;&gt;#5-%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E5%8F%82%E6%95%B0%E4%BB%8B%E7%BB%8D&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="270" width="550" height="70" as="geometry" />
        </mxCell>
        <mxCell id="3cpkV8E3IRdtKVc3-a5e-17" value="&lt;font style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;private void pluginElement(XNode parent) throws Exception {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (parent != null) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; for (XNode child : parent.getChildren()) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String interceptor = child.getStringAttribute(&quot;&lt;b&gt;interceptor&lt;/b&gt;&quot;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Properties properties = child.getChildrenAsProperties();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Interceptor interceptorInstance = (Interceptor) resolveClass(interceptor)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .getDeclaredConstructor().newInstance();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 初始化 Interceptor 实例，比如 初始化 PageInterceptor&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; interceptorInstance.&lt;b&gt;setProperties&lt;/b&gt;(properties);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 解析并实例化的插件实例注册到 interceptorChain&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; configuration.&lt;b&gt;addInterceptor&lt;/b&gt;(interceptorInstance);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
          <mxGeometry x="1000" y="200" width="440" height="180" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-4" value="&lt;font color=&quot;#007fff&quot;&gt;官方文档对插件配置细节说的不详细但是可以通过这个方法反推&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1000" y="160" width="360" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-6" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PageMethod&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 分页数据存储到线程本地&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected static final &lt;b&gt;ThreadLocal&amp;lt;Page&amp;gt; LOCAL_PAGE &lt;/b&gt;= new ThreadLocal&amp;lt;Page&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected static boolean DEFAULT_COUNT = true;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-960" y="940" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-7" target="zvJbzN1AgG9XMS87pQ7Y-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;dashed=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-7" target="3cpkV8E3IRdtKVc3-a5e-72" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-370" y="1090" />
              <mxPoint x="-1220" y="1090" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=0;exitDx=0;exitDy=0;dashed=1;endArrow=block;endFill=1;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-7" target="zvJbzN1AgG9XMS87pQ7Y-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-41" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-7" target="3cpkV8E3IRdtKVc3-a5e-79" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-980" y="1170" />
              <mxPoint x="-980" y="1420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-7" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PageHelper&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;默认使用的数据库方言&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private PageParams &lt;b&gt;pageParams&lt;/b&gt;;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// PageHelper 只是 Dialect 的代理，具体的语句执行还是需要靠具体的实现，比如 MySQLDialect&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 这个字段用于自动根据当前 Mybatis 配置检测具体的 Dialect 实现类型&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private PageAutoDialect &lt;b&gt;autoDialect&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// PageHelper中设置的默认BoundSql拦截器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private PageBoundSqlInterceptors &lt;b&gt;pageBoundSqlInterceptors&lt;/b&gt;;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1100" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-8" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Page&amp;lt;E&amp;gt; &lt;/b&gt;extends ArrayList&amp;lt;E&amp;gt;&amp;nbsp;implements Closeable&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;分页数据对象&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 记录当前堆栈,可查找到page在何处创建 需开启pagehelper.debug&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final String &lt;b&gt;stackTrace&lt;/b&gt; = PageInterceptor.isDebug() ? StackTraceUtil.current() : null;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 页码，从1开始&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;pageNum&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 页面大小&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;pageSize&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 起始行&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private long &lt;b&gt;startRow&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 末行&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private long &lt;b&gt;endRow&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 总数&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private long &lt;b&gt;total&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 总页数&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;pages&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 包含count查询, 默认是true, 即默认会执行 count数量查询&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean &lt;b&gt;count&lt;/b&gt; = true;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 分页合理化&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Boolean &lt;b&gt;reasonable&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 当设置为true的时候，如果pagesize设置为0（或RowBounds的limit=0），就不执行分页，返回全部结果&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Boolean &lt;b&gt;pageSizeZero&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 进行count查询的列名&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;countColumn&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 用于排序的列名&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;orderBy&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 只增加排序&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean &lt;b&gt;orderByOnly&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// sql拦截处理，可以设置这两个字段来修改 BoundSql&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private BoundSqlInterceptor &lt;b&gt;boundSqlInterceptor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// Page 中可以设置多个 BoundSqlInterceptor 来对 SQL进行拦截修改&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private transient &lt;b&gt;BoundSqlInterceptor&lt;/b&gt;.Chain &lt;b&gt;chain&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 分页实现类，可以使用 {@link com.github.pagehelper.page.PageAutoDialect} 类中注册的别名，例如 &quot;mysql&quot;, &quot;oracle&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;dialectClass&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 转换count查询时保留查询的 order by 排序&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Boolean &lt;b&gt;keepOrderBy&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;// 转换count查询时保留子查询的 order by 排序&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Boolean &lt;b&gt;keepSubSelectOrderBy&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="700" width="440" height="520" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-12" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;BoundSqlInterceptor.&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;Chain (I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Chain &lt;b&gt;DO_NOTHING&lt;/b&gt; = new Chain() {&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; @Override&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; public BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey) {&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return boundSql;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;};&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey);&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-480" y="900" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-14" target="zvJbzN1AgG9XMS87pQ7Y-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-14" value="&lt;b&gt;SQL执行过程中执行插件逻辑&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="1200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-19" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-16" target="zvJbzN1AgG9XMS87pQ7Y-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-16" value="&lt;b&gt;PageHelper 为例&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-18" target="zvJbzN1AgG9XMS87pQ7Y-20" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="970" y="1250" />
              <mxPoint x="970" y="1230" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-28" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-21" vertex="1" connectable="0">
          <mxGeometry x="0.3857" y="-2" relative="1" as="geometry">
            <mxPoint y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-18" target="zvJbzN1AgG9XMS87pQ7Y-25" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="970" y="1250" />
              <mxPoint x="970" y="1310" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-27" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-26" vertex="1" connectable="0">
          <mxGeometry x="0.6886" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-18" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1 线程本地记录分页数据对象&lt;/font&gt;&lt;/b&gt;&lt;br&gt;PageHelper.&lt;b&gt;startPage&lt;/b&gt;(1, 2);&amp;nbsp;&lt;br&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//PageHelper.startPage(1, 2, false);&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//这里 false 表示不查询总数 ，默认为true&lt;/font&gt;&lt;/div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 2 执行 SQL 查询&lt;/font&gt;&lt;br&gt;&lt;/b&gt;List&amp;lt;UserDO&amp;gt; users1 = userMapper.&lt;b&gt;selectAll&lt;/b&gt;();&lt;br&gt;&lt;div&gt;PageInfo&amp;lt;UserDO&amp;gt; page1 = new PageInfo&amp;lt;&amp;gt;(users1);&lt;/div&gt;&lt;div&gt;assertEquals(2, users1.size());&lt;/div&gt;&lt;div&gt;assertEquals(5, page1.getTotal());&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="520" y="1200" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-24" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-20" target="zvJbzN1AgG9XMS87pQ7Y-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-20" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 内部创建 Page 分页数据对象，并缓存到线程本地 ThreadLocal&lt;/font&gt;&lt;/div&gt;&lt;div&gt;public static &amp;lt;E&amp;gt; Page&amp;lt;E&amp;gt; startPage(int pageNum, int pageSize) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return startPage(pageNum, pageSize, DEFAULT_COUNT);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1200" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-22" value="PageMethod" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1175" y="1170" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-23" value="&lt;div&gt;public static &amp;lt;E&amp;gt; Page&amp;lt;E&amp;gt; startPage(int pageNum, int pageSize, boolean count, Boolean reasonable, Boolean pageSizeZero) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Page&amp;lt;E&amp;gt; page = new &lt;b&gt;Page&lt;/b&gt;&amp;lt;E&amp;gt;(pageNum, pageSize, count);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; page.&lt;b&gt;setReasonable&lt;/b&gt;(reasonable);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; page.&lt;b&gt;setPageSizeZero&lt;/b&gt;(pageSizeZero);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //当已经执行过orderBy的时候&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Page&amp;lt;E&amp;gt; oldPage = getLocalPage();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (oldPage != null &amp;amp;&amp;amp; oldPage.isOrderByOnly()) {&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; page.&lt;b&gt;setOrderBy&lt;/b&gt;(oldPage.getOrderBy());&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; // 继承旧的 Page orderby 属性&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;setLocalPage&lt;/b&gt;(page); &lt;font color=&quot;#007fff&quot;&gt;// 存储到 ThreadLocal&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return page;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1480" y="1200" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-29" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-25" target="3cpkV8E3IRdtKVc3-a5e-69" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1450" y="1310" />
              <mxPoint x="1450" y="900" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-25" value="触发调用 Plugin#invoke(...)" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-30" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 优先使用通过 Page.setChain() 指定 BoundSqlInterceptor.Chain 修改 SQL; &lt;br&gt;// 没有就整合 PageHelper 中默认设置的&amp;nbsp;pageBoundSqlInterceptors 和 通过 Page.setBoundSqlInterceptor() 设置的拦截器，对 SQL 进行修改&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;public BoundSql &lt;b&gt;doBoundSql&lt;/b&gt;(BoundSqlInterceptor.Type type, BoundSql boundSql, CacheKey cacheKey) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Page&amp;lt;Object&amp;gt; localPage = &lt;b&gt;getLocalPage&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; BoundSqlInterceptor.Chain chain = localPage != null ? localPage.&lt;b&gt;getChain&lt;/b&gt;() : null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (chain == null) { &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 没有通过 Page 设置过 BoundSqlInterceptor.chain&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BoundSqlInterceptor &lt;b&gt;boundSqlInterceptor&lt;/b&gt; = localPage != null ? localPage.&lt;b&gt;getBoundSqlInterceptor&lt;/b&gt;() : null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BoundSqlInterceptor.Chain &lt;b&gt;defaultChain&lt;/b&gt; = &lt;b&gt;pageBoundSqlInterceptors&lt;/b&gt; != null ? pageBoundSqlInterceptors.getChain() : null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (boundSqlInterceptor != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; chain = new &lt;b&gt;BoundSqlInterceptorChain&lt;/b&gt;(&lt;b&gt;defaultChain&lt;/b&gt;, Arrays.asList(&lt;b&gt;boundSqlInterceptor&lt;/b&gt;)); &lt;font color=&quot;#007fff&quot;&gt;// 整合成新的 Chain&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else if (defaultChain != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; chain = defaultChain;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (chain == null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; chain = &lt;b&gt;DO_NOTHING&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (localPage != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; localPage.&lt;b&gt;setChain&lt;/b&gt;(chain);&lt;font color=&quot;#007fff&quot;&gt; // 将 chain 存储到 Page 对象&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 1 修改 SQL&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return chain.&lt;b&gt;doBoundSql&lt;/b&gt;(type, boundSql, cacheKey);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2920" y="600" width="680" height="280" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-31" value="PageHelper" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3215" y="570" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-33" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;div&gt;public void &lt;b&gt;setProperties&lt;/b&gt;(Properties properties) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; setStaticProperties(properties);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;pageParams&lt;/b&gt; = new &lt;b&gt;PageParams&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;autoDialect&lt;/b&gt; = new &lt;b&gt;PageAutoDialect&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 修改BoundSql 的拦截器&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;pageBoundSqlInterceptors&lt;/b&gt; = new &lt;b&gt;PageBoundSqlInterceptors&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pageParams.&lt;b&gt;setProperties&lt;/b&gt;(properties);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; autoDialect.&lt;b&gt;setProperties&lt;/b&gt;(properties);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pageBoundSqlInterceptors.&lt;b&gt;setProperties&lt;/b&gt;(properties);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 20180902新增 aggregateFunctions, 允许手动添加聚合函数（影响行数）&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; CountSqlParser.addAggregateFunctions(properties.getProperty(&quot;aggregateFunctions&quot;));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=9;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2200" y="160" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-35" value="PageHelper" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2375" y="130" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-36" value="&lt;font color=&quot;#007fff&quot;&gt;判断线程本地的Page对象是否存在、不存在再看是否有设置 RowBounds 参数、没有再看参数是否是 IPage 类型，条件都不符合则不分页&lt;/font&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;public boolean &lt;b&gt;skip&lt;/b&gt;(MappedStatement ms, Object parameterObject, RowBounds rowBounds) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Page page = pageParams.getPage(parameterObject, rowBounds);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (page == null) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return true;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //设置默认的 count 列&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (StringUtil.isEmpty(page.getCountColumn())) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; page.setCountColumn(pageParams.getCountColumn());&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;// 设置实际的数据库方言， PageHelper 不过是个代理，真正对 SQL进行修改还是得靠具体的数据库方言实现，比如 MySQLDialect，默认情况下是从 Mybatis Configuration DataSource 对象中自动探测 &lt;/b&gt;(比如：&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;jdbc:mysql://localhost:13306/test？useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; autoDialect.&lt;b&gt;initDelegateDialect&lt;/b&gt;(ms, page.getDialectClass());&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return false;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2920" y="920" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-40" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;urlDialectMap = {ConcurrentHashMap@7387}&amp;nbsp; size = 1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp;&quot;jdbc:mysql://localhost:13306/test?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&quot; -&amp;gt; {MySqlDialect@7422}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; key = &quot;jdbc:mysql://localhost:13306/test?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; value = {MySqlDialect@7422}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3370" y="1100" width="570" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-46" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-42" target="zvJbzN1AgG9XMS87pQ7Y-45" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-42" value="&lt;font color=&quot;#007fff&quot;&gt;//这个方法省略一些细节，只看 count sql 的生成原理&lt;br&gt;&lt;b&gt;// 生成 count sql 的 MappedStatement 对象, 内部借助 Mybatis MappedStatement.Builder 和原 ms 对象创建&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;div&gt;countMs = MSUtils.&lt;b&gt;newCountMappedStatement&lt;/b&gt;(ms, countMsId);&lt;/div&gt;&lt;div&gt;if (msCountMap != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msCountMap.put(countMsId, countMs);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这里生成 count sql&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;count = ExecutorUtil.&lt;b&gt;executeAutoCount&lt;/b&gt;(this.dialect, executor, countMs, parameter, boundSql, rowBounds, resultHandler);&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2920" y="1230" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-45" target="zvJbzN1AgG9XMS87pQ7Y-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-45" value="&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//调用方言获取 count sql&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;String countSql = dialect.&lt;b&gt;getCountSql&lt;/b&gt;(countMs, boundSql, parameter, rowBounds, countKey);&lt;/div&gt;&lt;div&gt;//countKey.update(countSql);&lt;/div&gt;&lt;div&gt;BoundSql countBoundSql = new BoundSql(countMs.getConfiguration(), countSql, boundSql.getParameterMappings(), parameter);&lt;/div&gt;&lt;div&gt;//当使用动态 SQL 时，可能会产生临时的参数，这些参数需要手动设置到新的 BoundSql 中&lt;/div&gt;&lt;div&gt;for (String key : additionalParameters.keySet()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; countBoundSql.setAdditionalParameter(key, additionalParameters.get(key));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;//对 boundSql 的拦截处理&lt;/div&gt;&lt;div&gt;if (dialect instanceof BoundSqlInterceptor.Chain) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; countBoundSql = ((BoundSqlInterceptor.Chain) dialect).doBoundSql(BoundSqlInterceptor.Type.COUNT_SQL, countBoundSql, countKey);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//执行 count 查询&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;Object countResultList = &lt;b&gt;executor.query&lt;/b&gt;(countMs, parameter, RowBounds.DEFAULT, resultHandler, countKey, countBoundSql);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3400" y="1200" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-47" value="&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 借助 jsqlparser 框架实现&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;if (StringUtil.isNotEmpty(countColumn)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;countSqlParser&lt;/b&gt;.&lt;b&gt;getSmartCountSql&lt;/b&gt;(boundSql.getSql(), countColumn);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;return &lt;b&gt;countSqlParser&lt;/b&gt;.&lt;b&gt;getSmartCountSql&lt;/b&gt;(boundSql.getSql());&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3880" y="1270" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-53" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-49" target="zvJbzN1AgG9XMS87pQ7Y-54" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="3410" y="1560" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-55" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-53" vertex="1" connectable="0">
          <mxGeometry x="0.0786" y="-3" relative="1" as="geometry">
            <mxPoint x="9" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-49" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;...&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//1 调用方言获取分页 sql&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;String pageSql = dialect.&lt;b&gt;getPageSql&lt;/b&gt;(ms, boundSql, parameter, rowBounds, pageKey);&lt;/div&gt;&lt;div&gt;BoundSql pageBoundSql = new BoundSql(ms.getConfiguration(), pageSql, boundSql.getParameterMappings(), parameter);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Map&amp;lt;String, Object&amp;gt; additionalParameters = getAdditionalParameter(boundSql);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//设置动态参数&lt;/font&gt;&lt;/div&gt;&lt;div&gt;for (String key : additionalParameters.keySet()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pageBoundSql.&lt;b&gt;setAdditionalParameter&lt;/b&gt;(key, additionalParameters.get(key));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//对 boundSql 的拦截处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;if (dialect instanceof BoundSqlInterceptor.Chain) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pageBoundSql = ((BoundSqlInterceptor.Chain) dialect)&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;.doBoundSql(BoundSqlInterceptor.Type.PAGE_SQL, pageBoundSql, pageKey);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//执行分页查询, 回归到 Mybatis query&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;return executor.&lt;b&gt;query&lt;/b&gt;(ms, parameter, RowBounds.DEFAULT, resultHandler, pageKey, pageBoundSql);&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="2920" y="1440" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-59" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="zvJbzN1AgG9XMS87pQ7Y-54" target="zvJbzN1AgG9XMS87pQ7Y-58" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-62" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="zvJbzN1AgG9XMS87pQ7Y-59" vertex="1" connectable="0">
          <mxGeometry x="0.2278" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-54" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;String sql = boundSql.getSql();&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Page page = getLocalPage();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//支持 order by&lt;/font&gt;&lt;/div&gt;&lt;div&gt;String orderBy = page.getOrderBy();&lt;/div&gt;&lt;div&gt;if (StringUtil.isNotEmpty(orderBy)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pageKey.update(orderBy);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;&lt;b&gt; &amp;nbsp; // 1 如果原sql已经包含 order by ? 则抛出异常，否则&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // return&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;sql + &quot; order by &quot; + orderBy;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sql = OrderByParser.&lt;b&gt;converToOrderBySql&lt;/b&gt;(sql, orderBy, jSqlParser);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;if (page.isOrderByOnly()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return sql;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 2 这个sql创建比较简单，就是直接在后面拼接 LIMIT&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;return &lt;b&gt;getPageSql&lt;/b&gt;(sql, page, pageKey);&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3400" y="1470" width="440" height="180" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-56" value="ExecutorUtil" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3100" y="1410" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-57" value="AbstractHelperDialect" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3550" y="1169" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-58" value="&lt;div&gt;public String getPageSql(String &lt;b&gt;sql&lt;/b&gt;, Page page, CacheKey pageKey) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; StringBuilder sqlBuilder = new StringBuilder(sql.length() + 14);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sqlBuilder.append(sql);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (page.&lt;b&gt;getStartRow&lt;/b&gt;() == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlBuilder.&lt;b&gt;append&lt;/b&gt;(&quot;\n LIMIT ? &quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlBuilder.&lt;b&gt;append&lt;/b&gt;(&quot;\n LIMIT ?, ? &quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return sqlBuilder.toString();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3880" y="1500" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-60" value="&lt;font color=&quot;#007fff&quot;&gt;生成类似下面SQL&lt;br style=&quot;font-size: 10px;&quot;&gt;SELECT count(0) FROM users;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3880" y="1350" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="zvJbzN1AgG9XMS87pQ7Y-61" value="1. 插件原理简述：&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;通过 JDK 动态代理将插件通过 Interceptor 接口定义的拓展逻辑封装到Mybatis SQL执行的组件中，可以&lt;br&gt;插入到 Exuecutor StatementHandler ParameterHandler ResultSetHandler 组件中；&lt;/font&gt;&lt;/div&gt;2. 由于 PageHelper 基于 LIMIT ?, ? 实现，这种分页方式有深度分页问题，PageHelper 使用的并不多，只适合小数据量的表" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="600" y="20" width="680" height="70" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

<mxfile host="Electron" modified="2025-02-02T16:33:37.460Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="EWutM77zi32Ox2_etz4U" version="21.6.5" type="device">
  <diagram name="第 1 页" id="ZFve2wCEuiYx_qfAgZ4s">
    <mxGraphModel dx="3163" dy="925" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-1" value="&lt;h1 style=&quot;font-size: 16px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Quarkus CDI 工作原理 （3.17.6）&lt;/font&gt;&lt;/h1&gt;&lt;p style=&quot;&quot;&gt;拷贝了redisson-quarkus拓展的部分源码用于调试，相比调试一个Web项目这样足够简单，参考 quarkus-lab/quarkus-extension-redisson。&lt;br&gt;注意先使用 quarkus-maven-plugin generate-code 生成增强类字节码jar包并关联到 IDEA。&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="800" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-3" target="ZUVD8g9Vt0uHQ-vdNfgZ-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-6" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ZUVD8g9Vt0uHQ-vdNfgZ-5" vertex="1" connectable="0">
          <mxGeometry x="0.05" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-3" value="&lt;b&gt;启动 @QuarkusTest &lt;br&gt;注释的单元测试&lt;br&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-4" target="_CBz49triD0ayYJjN2Io-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-4" value="Quarkus 拓展了 JUnit 可以识别@QuarkusTest 注释的类并以Quarkus应用方式启动" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="280" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="_CBz49triD0ayYJjN2Io-5" target="ZUVD8g9Vt0uHQ-vdNfgZ-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1930" y="440" />
              <mxPoint x="1930" y="190" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-24" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ZUVD8g9Vt0uHQ-vdNfgZ-12" vertex="1" connectable="0">
          <mxGeometry x="0.8828" y="-4" relative="1" as="geometry">
            <mxPoint x="-3" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-7" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;private QuarkusTestExtensionState ensureStarted(ExtensionContext extensionContext) {&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; state = this.&lt;b&gt;doJavaStart&lt;/b&gt;(extensionContext, selectedProfile);&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1000" y="120" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-9" value="&lt;font color=&quot;#007fff&quot;&gt;Quarkus Test 是怎么实现的先不管，&lt;br&gt;只需要知道会启动 Quarkus 应用&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="280" y="180" width="220" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-10" value="QuarkusTestExtension" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="670" y="90" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-14" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-16" target="ZUVD8g9Vt0uHQ-vdNfgZ-13" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2890" y="720" />
              <mxPoint x="2890" y="770" />
              <mxPoint x="260" y="770" />
              <mxPoint x="260" y="1200" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="_CBz49triD0ayYJjN2Io-7" target="ZUVD8g9Vt0uHQ-vdNfgZ-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-18" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ZUVD8g9Vt0uHQ-vdNfgZ-17" vertex="1" connectable="0">
          <mxGeometry x="-0.05" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-11" target="_CBz49triD0ayYJjN2Io-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-11" value="...&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 执行增强&lt;/font&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/b&gt;BuildResult result = &lt;b&gt;runAugment&lt;/b&gt;(true, Collections.emptySet(), null, classLoader, NON_NORMAL_MODE_OUTPUTS);&lt;br style=&quot;font-size: 10px;&quot;&gt;return new StartupActionImpl(curatedApplication, result);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" parent="1" vertex="1">
          <mxGeometry x="1960" y="150" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-13" target="fklc3Oj6NEKNKxh2kduH-24">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="970" y="1200" />
              <mxPoint x="970" y="830" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-26" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fklc3Oj6NEKNKxh2kduH-25">
          <mxGeometry x="0.8927" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-13" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;protected final void &lt;b&gt;doStart&lt;/b&gt;(String[] var1) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; System.setProperty(&quot;java.util.logging.manager&quot;, &quot;org.jboss.logmanager.LogManager&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; System.setProperty(&quot;java.util.concurrent.ForkJoinPool.common.threadFactory&quot;, &lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&quot;io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; System.setProperty(&quot;logging.initial-configurator.min-level&quot;, &quot;500&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; NativeImageRuntimePropertiesRecorder.doRuntime();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ExecutionModeManager.runtimeInit();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Timing.mainStarted();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; StartupContext var2 = STARTUP_CONTEXT;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; var2.setCommandLineArguments(var1);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; StepTiming.configureEnabled();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.configureStart();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 这些代码借助一些 MainBytecodeRecorderBuildItem 生成&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new RuntimeConfigSetup())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new &lt;b&gt;QuarkusExtensionRedissonProcessor&lt;/b&gt;.build620656674())).&lt;b&gt;deploy&lt;/b&gt;(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ConfigGenerationBuildStep.releaseConfigOnShutdown561040398())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ConfigGenerationBuildStep.checkForBuildTimeConfigChange1532146938())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new BannerProcessor.recordBanner921118789())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ThreadPoolSetup.createExecutor2117483448())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ArcProcessor.setupExecutor1831044820())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ConfigGenerationBuildStep.unknownConfigFiles604069353())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new LoggingResourceProcessor.setupLoggingRuntimeInit1041640541())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ShutdownListenerBuildStep.setupShutdown1533204416())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new SyntheticBeansProcessor.initRuntime975230615())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new InitializationTaskProcessor.startApplicationInitializer180820092())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ConfigBuildStep.validateRuntimeConfigProperty1282080724())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new ConfigBuildStep.registerConfigClasses1377682816())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((StartupTask)(new LifecycleEventsBuildStep.startupEvent1144526294())).deploy(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StepTiming.printStepTime(var2);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ExecutionModeManager.running();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List var3 = ConfigUtils.getProfiles();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Timing.printStartupTime(&quot;quarkus-extension-redisson-integration-tests&quot;, &quot;1.0-SNAPSHOT&quot;, &quot;3.17.6&quot;, &quot;cdi, redisson&quot;, var3, false, false);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QuarkusConsole.start();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (PreventFurtherStepsException var8) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var2.close();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (Throwable var9) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QuarkusDelayedHandler var6 = InitialConfigurator.DELAYED_HANDLER;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!var6.isActivated()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Handler[] var4 = new Handler[1];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ConsoleHandler var5 = new ConsoleHandler();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var4[0] = (Handler)var5;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var6.setHandlers(var4);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var2.close();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw (Throwable)(new RuntimeException(&quot;Failed to start quarkus&quot;, var9));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="280" y="800" width="680" height="800" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-16" value="&lt;font color=&quot;#330033&quot;&gt;先加载&amp;nbsp;io.quarkus.runner.&lt;b&gt;ApplicationImpl&lt;/b&gt;.class 然后反射调用 &lt;br&gt;ApplicationImpl#start() 方法, start() 方法内部会调用生成的 doStart() 方法&lt;br&gt;最后返回 &lt;b&gt;RunningQuarkusApplicationImpl&lt;/b&gt; 实例&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;align=center;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="2440" y="680" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZUVD8g9Vt0uHQ-vdNfgZ-20" value="ApplicationImpl (生成的类)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="540" y="770" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="_CBz49triD0ayYJjN2Io-1" target="ZUVD8g9Vt0uHQ-vdNfgZ-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="980" y="290" as="targetPoint" />
            <Array as="points">
              <mxPoint x="970" y="280" />
              <mxPoint x="970" y="160" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-1" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="_CBz49triD0ayYJjN2Io-4">
          <mxGeometry x="0.775" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;public void beforeAll(ExtensionContext context) throws Exception {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 即 @QuarkusTest 注释的类&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; &lt;b&gt;requiredTestClass&lt;/b&gt; = context.getRequiredTestClass();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; GroovyClassValue.disable();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; currentTestClassStack.push(requiredTestClass);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; LaunchMode.set(LaunchMode.TEST);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!this.isNativeOrIntegrationTest(requiredTestClass)) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resetHangTimeout();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1&amp;nbsp;&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;ensureStarted&lt;/b&gt;(context);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (runningQuarkusApplication != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.pushMockContext();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ClassLoader old = Thread.currentThread().getContextClassLoader();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Thread.currentThread().setContextClassLoader(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; runningQuarkusApplication.getClassLoader());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;invokeBeforeClassCallbacks&lt;/b&gt;(Class.class, runningQuarkusApplication&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .getClassLoader().loadClass(requiredTestClass.getName()));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Thread.currentThread().setContextClassLoader(old);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.invokeBeforeClassCallbacks(Class.class, requiredTestClass);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="520" y="120" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ZUVD8g9Vt0uHQ-vdNfgZ-7" target="_CBz49triD0ayYJjN2Io-5" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1440" y="160" as="sourcePoint" />
            <mxPoint x="1960" y="160" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="_CBz49triD0ayYJjN2Io-5" target="_CBz49triD0ayYJjN2Io-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1930" y="440" />
              <mxPoint x="1930" y="720" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-25" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="_CBz49triD0ayYJjN2Io-8" vertex="1" connectable="0">
          <mxGeometry x="0.775" y="1" relative="1" as="geometry">
            <mxPoint x="9" y="6" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-5" value="&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;private ExtensionState doJavaStart(ExtensionContext context, Class&amp;lt;? extends QuarkusTestProfile&amp;gt; profile) throws Throwable {&lt;/span&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 这个线程池用于检测挂起任务超时，默认超时时间10分钟&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; hangDetectionExecutor = Executors.newSingleThreadScheduledExecutor(...);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 单元测试是测试类一个一个地执行的，获取当前的测试类&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final Class&amp;lt;?&amp;gt; requiredTestClass = context.getRequiredTestClass();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Closeable testResourceManager = null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ExtensionState var16;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final LinkedBlockingDeque&amp;lt;Runnable&amp;gt; shutdownTasks = new LinkedBlockingDeque();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AbstractJvmQuarkusTestExtension.PrepareResult result = this.&lt;b&gt;createAugmentor&lt;/b&gt;(context, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; profile, shutdownTasks);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AugmentAction augmentAction = result.augmentAction;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; QuarkusTestProfile profileInstance = result.profileInstance;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testHttpEndpointProviders = TestHttpEndpointProvider.load();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1 执行引导阶段（包括增强）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StartupAction &lt;b&gt;startupAction&lt;/b&gt; = augmentAction.&lt;b&gt;createInitialRuntimeApplication&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Thread.currentThread().setContextClassLoader(startupAction.getClassLoader());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.populateDeepCloneField(startupAction);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; testResourceManagerClass = startupAction.getClassLoader()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .loadClass(TestResourceManager.class.getName());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testResourceManager = TestResourceManagerReflections&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .createReflectively(testResourceManagerClass, requiredTestClass, profile, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; TestResourceManagerReflections.copyEntriesFromProfile(profileInstance, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startupAction.getClassLoader()), profileInstance != null &amp;amp;&amp;amp; profileInstance&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .disableGlobalTestResources(), startupAction.getDevServicesProperties(), &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; Optional.empty(), result.testClassLocation);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TestResourceManagerReflections.initReflectively(testResourceManager, profile);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Map&amp;lt;String, String&amp;gt; properties = TestResourceManagerReflections&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .startReflectively(testResourceManager);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startupAction.overrideConfig(properties);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startupAction.addRuntimeCloseTask(testResourceManager);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; quarkusTestMethodContextClass = null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;populateCallbacks&lt;/b&gt;(startupAction.getClassLoader());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;populateTestMethodInvokers&lt;/b&gt;(startupAction.getClassLoader());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (profileInstance != null &amp;amp;&amp;amp; profileInstance.runMainMethod()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runningQuarkusApplication = startupAction.&lt;b&gt;runMainClass&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; profileInstance.commandLineParameters());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 2 启动 ApplicationImpl 实例&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runningQuarkusApplication = startupAction.&lt;b&gt;run&lt;/b&gt;(profileInstance == null ? new String[0] : profileInstance.commandLineParameters());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (Throwable var22) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return var16;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="1480" y="120" width="440" height="640" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-7" value="&lt;font color=&quot;#007fff&quot;&gt;// &lt;b&gt;StartupActionImpl&lt;/b&gt;&lt;/font&gt;&lt;br&gt;runningQuarkusApplication = &lt;b&gt;startupAction&lt;/b&gt;.run(profileInstance == null ? new String[0] : profileInstance.commandLineParameters());" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;" parent="1" vertex="1">
          <mxGeometry x="1960" y="680" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="_CBz49triD0ayYJjN2Io-9" target="_CBz49triD0ayYJjN2Io-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-9" value="&lt;div&gt;QuarkusAugmentor.Builder builder = QuarkusAugmentor.builder()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setRoot(quarkusBootstrap.getApplicationRoot())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setClassLoader(classLoader)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setTargetDir(quarkusBootstrap.getTargetDirectory())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setDeploymentClassLoader(deploymentClassLoader)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setBuildSystemProperties(quarkusBootstrap.getBuildSystemProperties())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setRuntimeProperties(quarkusBootstrap.getRuntimeProperties())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setEffectiveModel(curatedApplication.getApplicationModel())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .setDependencyInfoProvider(quarkusBootstrap.getDependencyInfoProvider());&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;builder.&lt;b&gt;build&lt;/b&gt;().&lt;b&gt;run&lt;/b&gt;();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="2440" y="120" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="_CBz49triD0ayYJjN2Io-11" target="_CBz49triD0ayYJjN2Io-13" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3620" y="600" />
              <mxPoint x="3620" y="480" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-16" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="_CBz49triD0ayYJjN2Io-14" vertex="1" connectable="0">
          <mxGeometry x="0.0848" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-23" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="_CBz49triD0ayYJjN2Io-14" vertex="1" connectable="0">
          <mxGeometry x="0.9273" relative="1" as="geometry">
            <mxPoint x="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="_CBz49triD0ayYJjN2Io-11" target="fklc3Oj6NEKNKxh2kduH-7">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3610" y="600" />
              <mxPoint x="3610" y="190" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-11" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fklc3Oj6NEKNKxh2kduH-10">
          <mxGeometry x="0.9148" y="-3" relative="1" as="geometry">
            <mxPoint y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-11" value="&lt;div&gt;public BuildResult run() throws Exception {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 加载所有 BuildItem 创建 BuildChain&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final BuildChainBuilder &lt;b&gt;chainBuilder&lt;/b&gt; = BuildChain.builder();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; chainBuilder.setClassLoader(deploymentClassLoader);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;先注册 BuildStep 执行后生成 BuildItem 实例，存储在 BuildContext .execution，&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;ItemId -&amp;gt; BuildItem&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ExtensionLoader.&lt;b&gt;loadStepsFrom&lt;/b&gt;(deploymentClassLoader,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buildSystemProperties == null ? new Properties() : buildSystemProperties,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; runtimeProperties == null ? new Properties() : runtimeProperties,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; effectiveModel, launchMode, devModeType)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .accept(chainBuilder);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Thread.currentThread().setContextClassLoader(classLoader);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; chainBuilder.&lt;b&gt;loadProviders&lt;/b&gt;(classLoader);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; chainBuilder&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .&lt;b&gt;addInitial&lt;/b&gt;(QuarkusBuildCloseablesBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(ArchiveRootBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(ShutdownContextBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(RawCommandLineArgumentsBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(LaunchModeBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(LiveReloadBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(AdditionalApplicationArchiveBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(CuratedApplicationShutdownBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(BuildSystemTargetBuildItem.class)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addInitial(AppModelProviderBuildItem.class);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (Class&amp;lt;? extends BuildItem&amp;gt; i : &lt;b&gt;finalResults&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; chainBuilder.addFinal(i);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (Consumer&amp;lt;BuildChainBuilder&amp;gt; i : &lt;b&gt;buildChainCustomizers&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; i.accept(chainBuilder);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (launchMode.isDevOrTest()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; chainBuilder.addFinal(RuntimeApplicationShutdownBuildItem.class);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final ArchiveRootBuildItem.Builder rootBuilder = ArchiveRootBuildItem.builder();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (root != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rootBuilder.addArchiveRoots(root);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rootBuilder.setExcludedFromIndexing(excludedFromIndexing);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;//&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; BuildChain &lt;b&gt;chain&lt;/b&gt; = chainBuilder.&lt;b&gt;build&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; BuildExecutionBuilder &lt;b&gt;execBuilder&lt;/b&gt; = chain.createExecutionBuilder(baseName)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(buildCloseables)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(liveReloadBuildItem)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(rootBuilder.build(buildCloseables))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new ShutdownContextBuildItem())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new RawCommandLineArgumentsBuildItem())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new CuratedApplicationShutdownBuildItem((QuarkusClassLoader) deploymentClassLoader.getParent(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; !liveReloadBuildItem.isLiveReload()))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new LaunchModeBuildItem(launchMode,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; devModeType == null ? Optional.empty() : Optional.of(devModeType), auxiliaryApplication,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; auxiliaryDevModeType, test))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new BuildSystemTargetBuildItem(targetDir, baseName, originalBaseName, rebuild,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buildSystemProperties == null ? new Properties() : buildSystemProperties))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .produce(new AppModelProviderBuildItem(effectiveModel, depInfoProvider));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (PathCollection i : additionalApplicationArchives) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; execBuilder.produce(new AdditionalApplicationArchiveBuildItem(i));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;// 2 执行另一部分 BuildStep 任务&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; BuildResult &lt;b&gt;buildResult&lt;/b&gt; = &lt;b&gt;execBuilder&lt;/b&gt;.&lt;b&gt;execute&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String message = &quot;Quarkus augmentation completed in &quot; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - start)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; + &quot;ms&quot;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (launchMode == LaunchMode.NORMAL) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; log.info(message);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Boolean.parseBoolean(System.getProperty(&quot;quarkus.debug.dump-build-metrics&quot;))) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buildResult.getMetrics().dumpTo(targetDir.resolve(&quot;build-metrics.json&quot;));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //test and dev mode already report the total startup time, no need to add noise to the logs&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; log.debug(message);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Dump the metrics in the dev mode but not remote-dev (as it could cause issues with container permissions)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if ((launchMode == LaunchMode.DEVELOPMENT) &amp;amp;&amp;amp; !LaunchMode.isRemoteDev()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buildResult.getMetrics().dumpTo(targetDir.resolve(&quot;build-metrics.json&quot;));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return buildResult;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="2920" y="120" width="680" height="960" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="_CBz49triD0ayYJjN2Io-13" target="fklc3Oj6NEKNKxh2kduH-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-5" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fklc3Oj6NEKNKxh2kduH-4">
          <mxGeometry x="-0.3" y="-3" relative="1" as="geometry">
            <mxPoint x="6" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-13" value="&lt;div&gt;BuildResult run() throws BuildException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final List&amp;lt;StepInfo&amp;gt; startSteps = chain.getStartSteps();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (StepInfo startStep : &lt;b&gt;startSteps&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 执行增强任务（BuildStep），通过 executor 线程池中 build-x 线程执行&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // execute() 内部将 BuildContext#run() 任务封装了，不过最终还是要执行到这个run方法的&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; executor.&lt;b&gt;execute&lt;/b&gt;(getBuildContext(startStep)::run);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; //主线程阻塞等待所有构建线程执行完毕&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; executor.shutdown();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3640" y="380" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-15" value="QuarkusAugmentor" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3195" y="90" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-17" value="Execution" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3820" y="350" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_CBz49triD0ayYJjN2Io-22" value="&lt;div&gt;关键问题：&lt;/div&gt;&lt;div&gt;1. BuildItem 生成 ApplicationImpl 等类以及 StartupTask 的原理？&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ApplicationImpl 是在 MainClassBuildStep 中生成的， StartupTask 是借助一些&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MainBytecodeRecorderBuildItem 生成；&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#cc0066&quot;&gt;&amp;nbsp; &amp;nbsp; MainBytecodeRecorderBuildItem 又是哪里来的？&lt;/font&gt;&lt;/div&gt;&lt;div&gt;2. Bean 创建流程、存储位置？&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 依赖注入原理？@Inject 是如何处理的？&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="240" width="440" height="130" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-2" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;QuarkusTestExtension&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private static boolean failedBoot;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static Class&amp;lt;?&amp;gt; actualTestClass;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static Object actualTestInstance;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private static final Deque&amp;lt;Object&amp;gt; outerInstances = new ArrayDeque&amp;lt;&amp;gt;(1);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static &lt;b&gt;RunningQuarkusApplication&lt;/b&gt; &lt;b&gt;runningQuarkusApplication&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static Throwable firstException;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static Class&amp;lt;?&amp;gt; quarkusTestMethodContextClass;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static List&amp;lt;Function&amp;lt;Class&amp;lt;?&amp;gt;, String&amp;gt;&amp;gt; testHttpEndpointProviders;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static List&amp;lt;Object&amp;gt; testMethodInvokers;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static DeepClone deepClone;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static volatile ScheduledExecutorService hangDetectionExecutor;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static volatile Duration hangTimeout;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static volatile ScheduledFuture&amp;lt;?&amp;gt; hangTaskKey;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final Runnable hangDetectionTask = new Runnable() { ... };&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-520" y="120" width="480" height="320" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-14" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-3" target="fklc3Oj6NEKNKxh2kduH-7">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4580" y="480" />
              <mxPoint x="4580" y="280" />
              <mxPoint x="4100" y="280" />
              <mxPoint x="4100" y="225" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-3" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// build-x 线程中执行&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;void run() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final Execution execution = this.execution;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final StepInfo stepInfo = this.stepInfo;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final BuildStep buildStep = stepInfo.getBuildStep();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; log.tracef(&quot;Starting step \&quot;%s\&quot;&quot;, buildStep);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!execution.isErrorReported()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buildStep.&lt;b&gt;execute&lt;/b&gt;(this);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; execution.removeBuildContext(stepInfo, this);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final Set&amp;lt;StepInfo&amp;gt; dependents = stepInfo.getDependents();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!dependents.isEmpty()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (StepInfo info : dependents) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 如果这个构建步骤依赖其他构建步骤，则加载依赖的步骤&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; execution.getBuildContext(info).depFinished();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; execution.depFinished();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="4120" y="310" width="440" height="340" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-6" value="BuildContext" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="4295" y="280" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-18" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-7" target="fklc3Oj6NEKNKxh2kduH-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-7" value="&lt;font color=&quot;#007fff&quot;&gt;// loadStepsFrom()&lt;br&gt;// loadStepsFromClass()&lt;br&gt;&lt;/font&gt;&lt;br&gt;...&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 通过 MethodHandle 调用 @BuildStep 方法&lt;/font&gt;&lt;br&gt;&lt;/b&gt;result = methodHandle.bindTo(instance).&lt;b&gt;invokeWithArguments&lt;/b&gt;(methodArgs);&lt;br&gt;...&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;// 有些 @BuildStep 方法会返回 BuildItem 实例，存储到 BuildContext .execution&lt;br&gt;&lt;/font&gt;resultConsumer.accept(bc, result);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;verticalAlign=top;" vertex="1" parent="1">
          <mxGeometry x="4120" y="120" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-9" value="ExtensionLoader" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="4285" y="90" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-12" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;BuildChain&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="120" width="480" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-13" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Execution&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="240" width="480" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-20" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-17" target="fklc3Oj6NEKNKxh2kduH-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-17" value="一些重要BuildStep" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="4600" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-22" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-19" target="fklc3Oj6NEKNKxh2kduH-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-23" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fklc3Oj6NEKNKxh2kduH-22">
          <mxGeometry x="-0.0375" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-19" value="&lt;b&gt;MainClassBuildStep&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;通过&amp;nbsp;Gizmo&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;生成 ApplicationImpl.class&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="4840" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-21" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// bytes 是生成的 class 字节码，最终重新生成了 GeneratedClassBuildItem&lt;/font&gt;&lt;/div&gt;&lt;div&gt;generatedClasses.produce(&lt;span style=&quot;background-color: initial;&quot;&gt;new &lt;b&gt;GeneratedClassBuildItem&lt;/b&gt;(&lt;br&gt;applicationClassPredicate.test(className), className, &lt;b&gt;bytes&lt;/b&gt;, source));&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="5080" y="160" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-29" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-24" target="fklc3Oj6NEKNKxh2kduH-28">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-24" value="&lt;span style=&quot;background-color: initial;&quot;&gt;public void createProducer() {&lt;br&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //&amp;nbsp;获取 RedissonClientProducer 类的实例&amp;nbsp;&lt;br&gt;&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Arc.container().instance(&lt;b&gt;RedissonClientProducer&lt;/b&gt;.class).get();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" vertex="1" parent="1">
          <mxGeometry x="1000" y="800" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-35" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-27" target="fklc3Oj6NEKNKxh2kduH-34">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-27" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Arc&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final AtomicReference&amp;lt;ArcContainerImpl&amp;gt; &lt;b&gt;INSTANCE&lt;/b&gt; = new AtomicReference();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-520" y="480" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fklc3Oj6NEKNKxh2kduH-28" target="fklc3Oj6NEKNKxh2kduH-31">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-28" value="&lt;div&gt;public &amp;lt;T&amp;gt; InstanceHandle&amp;lt;T&amp;gt; instance(Class&amp;lt;T&amp;gt; type, Annotation... qualifiers) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return this.&lt;b&gt;instanceHandle&lt;/b&gt;(type, qualifiers);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" vertex="1" parent="1">
          <mxGeometry x="1480" y="800" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-30" value="&lt;div&gt;public &amp;lt;T&amp;gt; InstanceHandle&amp;lt;T&amp;gt; instance(Class&amp;lt;T&amp;gt; type, Annotation... qualifiers) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return this.&lt;b&gt;instanceHandle&lt;/b&gt;(type, qualifiers);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" vertex="1" parent="1">
          <mxGeometry x="1480" y="880" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-31" value="&lt;div&gt;private &amp;lt;T&amp;gt; InstanceHandle&amp;lt;T&amp;gt; instanceHandle(Type type, Annotation... qualifiers) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return beanInstanceHandle(this.&lt;b&gt;getBean&lt;/b&gt;(type, qualifiers), (CreationalContextImpl)null);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1960" y="800" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-33" value="ArcContainerImpl" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1640" y="770" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fklc3Oj6NEKNKxh2kduH-34" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ArcContainerImpl&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final AtomicInteger ID_GENERATOR = new AtomicInteger();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final String id;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicBoolean running;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;InjectableBean&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;beans&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;String, List&amp;lt;InjectableBean&amp;lt;?&amp;gt;&amp;gt;&amp;gt; beansByRawType;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final LazyValue&amp;lt;List&amp;lt;RemovedBean&amp;gt;&amp;gt; removedBeans;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;InjectableInterceptor&amp;lt;?&amp;gt;&amp;gt; interceptors;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;InjectableDecorator&amp;lt;?&amp;gt;&amp;gt; decorators;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;InjectableObserverMethod&amp;lt;?&amp;gt;&amp;gt; observers;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Contexts contexts;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ComputingCache&amp;lt;Resolvable, Set&amp;lt;InjectableBean&amp;lt;?&amp;gt;&amp;gt;&amp;gt; resolved;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ComputingCache&amp;lt;String, InjectableBean&amp;lt;?&amp;gt;&amp;gt; beansById;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ComputingCache&amp;lt;String, Set&amp;lt;InjectableBean&amp;lt;?&amp;gt;&amp;gt;&amp;gt; beansByName;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ArrayList&amp;lt;ResourceReferenceProvider&amp;gt; resourceProviders;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;final InstanceImpl&amp;lt;Object&amp;gt; instance;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;final Qualifiers registeredQualifiers;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;final InterceptorBindings registeredInterceptorBindings;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private volatile ExecutorService executorService;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CurrentContextFactory currentContextFactory;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final boolean strictMode;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="480" width="480" height="360" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

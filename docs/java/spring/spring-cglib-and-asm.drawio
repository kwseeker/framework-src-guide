<mxfile host="Electron" modified="2024-11-03T08:36:17.883Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="uxTZ1cgjiutveAd0507l" version="21.6.5" type="device">
  <diagram name="第 1 页" id="Au8LBIZ9-3zIQxEieEoI">
    <mxGraphModel dx="3935" dy="879" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="VISHqFL7TcA8I7J5W86J-1" value="&lt;h1 style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Spring CgLib + ASM 工作原理&lt;/font&gt;&lt;font style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;（spring-core:5.3.27）&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;Spring 实现 AOP 动态代理没有引入 CgLib 库，而是将 CgLib 库部分源码打包到了 spring-core，由于 CgLib 依赖 ASM，Spring 也将依赖的 ASM 部门源码打包到了 spring-core。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 12px; font-weight: normal;&quot;&gt;由于只是打包了部分代码 org.springframework.asm&amp;nbsp;org.springframework.cglib 下的代码比 ASM Cglib 框架源码要少。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;细节太多了，先暂停下，TODO&lt;/div&gt;&lt;div&gt;&lt;b&gt;基础：&lt;/b&gt;&lt;/div&gt;&lt;div&gt;1. Java 字节码文件结构&lt;/div&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="760" height="140" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=11;" parent="1" source="VISHqFL7TcA8I7J5W86J-2" target="VISHqFL7TcA8I7J5W86J-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-2" value="DefaultGeneratorStrategy#generate(&lt;br style=&quot;font-size: 11px;&quot;&gt;ClassGenerator cg)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="170" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-3" value="&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;Spring CgLib 借助 GeneratorStrategy&lt;br&gt;#generate()生成代理类的字节码&lt;br&gt;比如：DefaultGeneratorStrategy&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="40" y="235" width="210" height="50" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" parent="1" source="VISHqFL7TcA8I7J5W86J-5" target="VISHqFL7TcA8I7J5W86J-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-9" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=11;" parent="VISHqFL7TcA8I7J5W86J-8" vertex="1" connectable="0">
          <mxGeometry x="0.15" y="-2" relative="1" as="geometry">
            <mxPoint x="8" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="VISHqFL7TcA8I7J5W86J-5" target="VISHqFL7TcA8I7J5W86J-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-15" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="VISHqFL7TcA8I7J5W86J-13" vertex="1" connectable="0">
          <mxGeometry x="0.8143" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-14" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="VISHqFL7TcA8I7J5W86J-5" target="VISHqFL7TcA8I7J5W86J-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-16" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="VISHqFL7TcA8I7J5W86J-14" vertex="1" connectable="0">
          <mxGeometry x="0.8696" y="-3" relative="1" as="geometry">
            <mxPoint x="3" y="81" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-5" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 1&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;DebuggingClassWriter cw = this.&lt;b&gt;getClassVisitor&lt;/b&gt;();&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 2&lt;/b&gt; 这里 transform() 没有做任何转换参数原样返回，这里 cg 是 Enhancer 实例引用&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/font&gt;this.transform(cg).&lt;b&gt;generateClass&lt;/b&gt;(cw);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 3&lt;/b&gt; 以 Byte 数组形式输出 ClassWriter 中字节码&lt;/font&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;return this.transform(cw.&lt;b&gt;toByteArray&lt;/b&gt;());" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="280" y="160" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="VISHqFL7TcA8I7J5W86J-7" target="VISHqFL7TcA8I7J5W86J-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-7" value="return new &lt;b&gt;DebuggingClassWriter&lt;/b&gt;(2);" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="VISHqFL7TcA8I7J5W86J-10" target="FzdVbH49xBQuPaiEanxh-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-10" value="&lt;b&gt;Enhancer&lt;/b&gt;#&lt;b&gt;generateClass&lt;/b&gt;(cw)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;内部通过ClassEmitter生成类各部分的字节码并写入 ClassWriter 对象&lt;/b&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="VISHqFL7TcA8I7J5W86J-12" target="10TpCgqnUDmNamHutM36-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-12" value="ClassWriter#&lt;b&gt;toByteArray&lt;/b&gt;()&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;还支持输出 .class .asm 文件&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="1800" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-17" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClassVisitor&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;提供了一组 visit 方法用于构建 Class 字节码&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// ASM API 版本，默认 ASM9&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final int api;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 装饰器模式&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected &lt;b&gt;ClassVisitor&lt;/b&gt; cv;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="80" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="VISHqFL7TcA8I7J5W86J-18" target="VISHqFL7TcA8I7J5W86J-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-18" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DebuggingClassWriter&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;这个是 Spring CgLib 中的类&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final String DEBUG_LOCATION_PROPERTY = &lt;br&gt;&amp;nbsp; &amp;nbsp; &quot;cglib.debugLocation&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static String &lt;b&gt;debugLocation&lt;/b&gt; =&lt;br&gt;&amp;nbsp; &amp;nbsp; System.getProperty(&quot;&lt;b&gt;cglib.debugLocation&lt;/b&gt;&quot;);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static Constructor traceCtor;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 生成代理类的全限定名&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;className&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 被增强的类的全限定名&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;superName&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="320" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-20" value="super(Constants.ASM_API, new &lt;b&gt;ClassWriter&lt;/b&gt;(flags));" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="VISHqFL7TcA8I7J5W86J-22" target="VISHqFL7TcA8I7J5W86J-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-57" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="VISHqFL7TcA8I7J5W86J-22" target="FzdVbH49xBQuPaiEanxh-56" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="VISHqFL7TcA8I7J5W86J-22" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClassWriter&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;对应 Class 字节码结构, Class中各个部分的字节码最终都是要以byte形式写到这个类中&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final int COMPUTE_MAXS = 1;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final int COMPUTE_FRAMES = 2;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final int &lt;b&gt;flags&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 版本号，低16位是主版本号，高16位是次版本号&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;version&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 符号表&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final SymbolTable &lt;b&gt;symbolTable&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Class 的访问描述符，比如：ACC_PUBLIC&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;accessFlags&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// classname 在常量池中的索引&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;thisClass&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 父类名在常量池中的索引&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;superClass&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;interfaceCount&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int[] &lt;b&gt;interfaces&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 后面的对象，基本都包含 symbolTable, 以及在symbolTable 中的索引&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private FieldWriter &lt;b&gt;firstField&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private FieldWriter &lt;b&gt;lastField&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private MethodWriter &lt;b&gt;firstMethod&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private MethodWriter &lt;b&gt;lastMethod&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int numberOfInnerClasses;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector &lt;b&gt;innerClasses&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int enclosingClassIndex;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int enclosingMethodIndex;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int signatureIndex;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int sourceFileIndex;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector debugExtension;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private AnnotationWriter lastRuntimeVisibleAnnotation;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private AnnotationWriter lastRuntimeInvisibleAnnotation;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private AnnotationWriter lastRuntimeVisibleTypeAnnotation;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private AnnotationWriter lastRuntimeInvisibleTypeAnnotation;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ModuleWriter moduleWriter;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int nestHostClassIndex;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int numberOfNestMemberClasses;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector nestMemberClasses;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int numberOfPermittedSubclasses;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector permittedSubclasses;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private RecordComponentWriter firstRecordComponent;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private RecordComponentWriter lastRecordComponent;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Attribute firstAttribute;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int compute;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-880" y="320" width="400" height="640" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-51" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.001;exitY=0.372;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="FzdVbH49xBQuPaiEanxh-1" target="FzdVbH49xBQuPaiEanxh-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-63" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="FzdVbH49xBQuPaiEanxh-51" vertex="1" connectable="0">
          <mxGeometry x="0.7206" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-61" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.001;exitY=0.592;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="FzdVbH49xBQuPaiEanxh-1" target="FzdVbH49xBQuPaiEanxh-60" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-67" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="FzdVbH49xBQuPaiEanxh-61" vertex="1" connectable="0">
          <mxGeometry x="0.7069" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-65" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.998;exitY=0.768;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="FzdVbH49xBQuPaiEanxh-1" target="FzdVbH49xBQuPaiEanxh-64" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-66" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="FzdVbH49xBQuPaiEanxh-65" vertex="1" connectable="0">
          <mxGeometry x="0.3732" relative="1" as="geometry">
            <mxPoint x="10" y="31" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public void generateClass(ClassVisitor v) throws Exception {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // &lt;b&gt;被代理增强的目标类型&lt;/b&gt;为null就增强Object类型&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Class sc = (superclass == null) ? Object.class : superclass;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // &lt;b&gt;不能增强 final 修饰的类&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (TypeUtils.&lt;b&gt;isFinal&lt;/b&gt;(sc.getModifiers()))&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new IllegalArgumentException(&quot;Cannot subclass final class &quot; + sc.getName());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// &lt;b&gt;获取目标类型所有构造方法，然后过滤出 public protected (protectedOk=true) default (samePackageOk=true) 的构造器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; List constructors = new ArrayList(Arrays.asList(sc.getDeclaredConstructors()));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; filterConstructors(sc, constructors);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; List actualMethods = new ArrayList();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; List interfaceMethods = new ArrayList();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final Set forcePublic = new HashSet();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //依次并递归从目标类型、目标类型实现的接口类型中提取所有方法（用的getDeclaredMethods()&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;）存储到 actualMethods&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //依次并递归从 interfaces 类型中提取所有方法存储到 interfaceMethods 并添加到 actualMethods, 如果 forcePublic !=null, 为 interfaceMethods 中每个方法类型创建 Method 实例存储到 forcePublic&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //最后还需要过滤掉 actualMethods 中带有 static 、final 修饰符以及重复的方法类型&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //内部代码比较简单不展开了&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;getMethods&lt;/b&gt;(sc, interfaces, actualMethods, interfaceMethods, forcePublic);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 将 actualMethods 进行转换，转换规则：将 abstract native synchronized 方法标记为非抽象、非本地、非同步方法，然后再标记为 final 方法，最后返回 MethodInfo&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; List &lt;b&gt;methods&lt;/b&gt; = CollectionUtils.transform(actualMethods, new Transformer() { &lt;font color=&quot;#007fff&quot;&gt;// methods 中存储的是 MethodInfo&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public Object transform(Object value) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Method method = (Method) value;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int modifiers = &lt;b&gt;Constants.ACC_FINAL&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | (method.getModifiers()&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;amp; ~Constants.ACC_ABSTRACT&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;amp; ~Constants.ACC_NATIVE&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;amp; ~Constants.ACC_SYNCHRONIZED&lt;/b&gt;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 如果有设置 forcePublic 将方法从 protected 重新标记为 public&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (forcePublic.contains(MethodWrapper.create(method))) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; modifiers = (modifiers &amp;amp; ~Constants.ACC_PROTECTED) | Constants.ACC_PUBLIC;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return ReflectUtils.getMethodInfo(method, modifiers);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 后面开始构造代理类字节码主体&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ClassEmitter &lt;b&gt;e&lt;/b&gt; = new &lt;b&gt;ClassEmitter&lt;/b&gt;(v);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if (currentData == null) {&lt;/span&gt;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1 代理类类型基本信息写入ClassWriter&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.&lt;b&gt;begin_class&lt;/b&gt;(Constants.V1_8,&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;//主版本号&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Constants.ACC_PUBLIC, &lt;font color=&quot;#007fff&quot;&gt;//类型修饰符，也称Class的访问标记&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; getClassName(),&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Type.getType(sc), &lt;font color=&quot;#007fff&quot;&gt;// 父类类型描述&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (useFactory ?&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TypeUtils.&lt;b&gt;add&lt;/b&gt;(TypeUtils.getTypes(interfaces), FACTORY) : &lt;font color=&quot;#007fff&quot;&gt;//额外添加要实现的接口&amp;nbsp;org.springframework.cglib.proxy.&lt;b&gt;Factory&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TypeUtils.&lt;b&gt;getTypes&lt;/b&gt;(interfaces)),&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Constants.SOURCE_FILE);&lt;font color=&quot;#007fff&quot;&gt; //&amp;nbsp;&amp;lt;generated&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.begin_class(Constants.V1_8,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Constants.ACC_PUBLIC,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; getClassName(),&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; null,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Type[]{FACTORY},&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Constants.SOURCE_FILE);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 用于获取 sc 构造方法的方法信息 MethodInfo (包括方法签名、ClassInfo、方法修饰符、返回异常类型)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; List &lt;b&gt;constructorInfo&lt;/b&gt; = CollectionUtils.transform(constructors, MethodInfoTransformer.getInstance());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 定义 private boolean&amp;nbsp;CGLIB$BOUND;&amp;nbsp; 不过在 class 文件中并不是表示为这样&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.declare_field(Constants.ACC_PRIVATE, BOUND_FIELD, Type.BOOLEAN_TYPE, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 定义 public static Object&amp;nbsp;CGLIB$FACTORY_DATA;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.declare_field(Constants.ACC_PUBLIC | Constants.ACC_STATIC, FACTORY_DATA_FIELD, OBJECT_TYPE, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!interceptDuringConstruction) { &lt;font color=&quot;#007fff&quot;&gt;//是否拦截构造方法？&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.declare_field(Constants.ACC_PRIVATE, CONSTRUCTED_FIELD, Type.BOOLEAN_TYPE, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 定义 private final static ThreadLocal&amp;nbsp;CGLIB$THREAD_CALLBACKS&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.declare_field(Constants.PRIVATE_FINAL_STATIC, THREAD_CALLBACKS_FIELD, THREAD_LOCAL, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 定义 &lt;b&gt;private final static&amp;nbsp;Callback[]&amp;nbsp;CGLIB$STATIC_CALLBACKS&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.declare_field(Constants.PRIVATE_FINAL_STATIC, STATIC_CALLBACKS_FIELD, CALLBACK_ARRAY, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (serialVersionUID != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.declare_field(Constants.PRIVATE_FINAL_STATIC, Constants.SUID_FIELD_NAME, Type.LONG_TYPE, serialVersionUID);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &lt;b&gt;// 2 为代理方法增强类型（MethodInterceptor Dispatcher）创建字段, 比如&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // private&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;MethodInterceptor CGLIB#CALLBACK_0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; for (int i = 0; i &amp;lt; callbackTypes.length; i++) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.&lt;b&gt;declare_field&lt;/b&gt;(Constants.ACC_PRIVATE, getCallbackField(i), &lt;b&gt;callbackTypes&lt;/b&gt;[i], null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // private static Object&amp;nbsp;CGLIB$CALLBACK_FILTER&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.declare_field(Constants.ACC_PRIVATE | Constants.ACC_STATIC, CALLBACK_FILTER_FIELD, OBJECT_TYPE, null);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (currentData == null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;// 3 创建代理方法，遍历所有要创建的方法（结合MethodInfo Method信息）&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;emitMethods&lt;/b&gt;(e, methods, actualMethods);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;//创建构造方法&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;emitConstructors&lt;/b&gt;(e, constructorInfo);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;//创建默认构造方法&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitDefaultConstructor(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; //&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; emitSetThreadCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; emitSetStaticCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; emitBindCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (useFactory || currentData != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int[] keys = getCallbackKeys();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitNewInstanceCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitNewInstanceCallback(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitNewInstanceMultiarg(e, constructorInfo);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitGetCallback(e, keys);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitSetCallback(e, keys);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitGetCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; emitSetCallbacks(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; e.end_class();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="1000" y="260" width="560" height="1380" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-3" target="FzdVbH49xBQuPaiEanxh-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-3" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Enhancer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;可以将 Enhancer 理解为代理类生成配置&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private &lt;b&gt;EnhancerFactoryData&lt;/b&gt; &lt;b&gt;currentData&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Object currentKey;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class[] interfaces;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 用于判断目标方法应该使用哪种方式增强，比如 CglibAopProxy 中提供了7种方式，分别对应一种 callbackType&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; private static final int &lt;b&gt;AOP_PROXY&lt;/b&gt; = 0;&amp;nbsp; // AOP_PROXY 使用 MethodInteceptor&lt;span style=&quot;&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;private static final int INVOKE_TARGET = 1;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;private static final int NO_OVERRIDE = 2;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;private static final int DISPATCH_TARGET = 3;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;private static final int DISPATCH_ADVISED = 4;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;private static final int INVOKE_EQUALS = 5;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;private static final int INVOKE_HASHCODE = 6;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private CallbackFilter &lt;b&gt;filter&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Callback[] callbacks;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 增强逻辑类型，比如 MethodInterceptor Dispatcher&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Type[] &lt;b&gt;callbackTypes&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean validateCallbackTypes;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean classOnly;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 被代理增强的目标类型（比如测试中的 TransferService），此字段为null则以 Object 作为目标类型&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class &lt;b&gt;superclass&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 参数类型&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class[] argumentTypes;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 参数列表&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Object[] arguments;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 代理类是否应该实现 Factory 接口，即&lt;/font&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;org.springframework.cglib.proxy.&lt;b&gt;Factory&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean &lt;b&gt;useFactory&lt;/b&gt; = true;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Long serialVersionUID;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean interceptDuringConstruction = true;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="440" width="400" height="600" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-4" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractClassGenerator&amp;lt;T&amp;gt;&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;implements ClassGenerator&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private GeneratorStrategy strategy = DefaultGeneratorStrategy.INSTANCE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private NamingPolicy namingPolicy = DefaultNamingPolicy.INSTANCE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Source source;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ClassLoader classLoader;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class contextClass;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String namePrefix;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Object key;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean useCache = DEFAULT_USE_CACHE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 要生成的代理类的类名&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;className&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean attemptLoad;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="40" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-6" value="Enhancer" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1245" y="230" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-7" value="final" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="480" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-8" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;synch&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;ronized&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=9;" parent="1" vertex="1">
          <mxGeometry x="440" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-9" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;bridge&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="400" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-10" value="varargs" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="360" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-11" value="public" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="640" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-12" value="private" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="600" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-13" value="protected" style="rounded=0;whiteSpace=wrap;html=1;fontSize=9;" parent="1" vertex="1">
          <mxGeometry x="560" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-14" value="static" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-31" value="synthetic" style="rounded=0;whiteSpace=wrap;html=1;fontSize=9;" parent="1" vertex="1">
          <mxGeometry x="160" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-32" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="120" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-33" value="&lt;font style=&quot;font-size: 8px;&quot;&gt;mandated&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="80" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-34" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-35" value="native" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="320" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-36" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-37" value="abstract" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="240" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-38" value="strict" style="rounded=0;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="200" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-39" value="方法 (Method) 的修饰符 (Modifier)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="280" y="480" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-41" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;bridge:&amp;nbsp;桥接方法是由编译器自动生成的方法，主要用于实现泛型类型的类型擦除。这些方法通常用于确保类型安全的多态调用。&lt;br style=&quot;&quot;&gt;&lt;/font&gt;varargs:&amp;nbsp;表示该方法接受可变数量的参数&lt;br style=&quot;&quot;&gt;strict:&amp;nbsp;表示该方法在浮点计算中遵循 IEEE 754 标准，确保浮点运算的精度和行为一致&lt;br&gt;synthetic: 标记合成元素, 表示该元素是由编译器自动生成的，而不是由源代码直接定义的。这些元素通常用于支持内部类、匿名类等特性。&lt;br&gt;&lt;/font&gt;mandated:&amp;nbsp;标记强制生成的元素,&lt;/font&gt;表示该元素是由编译器根据语言规范强制生成的，而不是由用户显式定义的。例如，桥接方法和合成方法通常也是强制生成的。&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="40" y="570" width="730" height="70" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-44" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-42" target="VISHqFL7TcA8I7J5W86J-17" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-240" y="620" />
              <mxPoint x="-20" y="620" />
              <mxPoint x="-20" y="300" />
              <mxPoint x="-140" y="300" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-42" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClassTransformer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//设置目标ClassVisitor, 对于 ClassEmitter 是设置输出工具(ClassWriter)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;public abstract void &lt;b&gt;setTarget&lt;/b&gt;(ClassVisitor var1);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1000" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-45" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-43" target="FzdVbH49xBQuPaiEanxh-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-49" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-43" target="FzdVbH49xBQuPaiEanxh-48" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-71" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="FzdVbH49xBQuPaiEanxh-43" target="FzdVbH49xBQuPaiEanxh-70" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-43" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClassEmitter&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Class 发射器&lt;/b&gt;，应该是想表达输出Class的意思, &lt;b&gt;其 emit_xxx方法最终是将字节码片段写入到 ClassWriter&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//类字节码信息，这个类没有字段只是提供了几个方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private &lt;b&gt;ClassInfo&lt;/b&gt; classInfo;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Map fieldInfo;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static int hookCounter;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private MethodVisitor rawStaticInit;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private CodeEmitter staticInit;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private CodeEmitter staticHook;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Signature staticHookSig;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1240" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-48" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClassInfo&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 获取Class类型信息，这里是代理类类型信息&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public abstract Type getType();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 获取父类信息，这里是被代理的类类型信息&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;public abstract Type getSuperType();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 类要实现的接口类型信息&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public abstract Type[] getInterfaces();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 类的修饰符&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;public abstract int getModifiers();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1000" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-53" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-50" target="FzdVbH49xBQuPaiEanxh-52" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-59" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="FzdVbH49xBQuPaiEanxh-50" target="FzdVbH49xBQuPaiEanxh-58" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-50" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这里 cv 是 DebuggingClassWriter&lt;/font&gt;&lt;/div&gt;&lt;div&gt;this.cv.&lt;b&gt;visit&lt;/b&gt;(version, access, this.classInfo.getType().getInternalName(), (String)null, this.classInfo.getSuperType().getInternalName(), TypeUtils.toInternalNames(interfaces));&lt;/div&gt;&lt;div&gt;if (source != null) { &lt;font color=&quot;#007fff&quot;&gt;// 这个测试中是代理类，source 值是 “&amp;lt;generated&amp;gt;”&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.cv.&lt;b&gt;visitSource&lt;/b&gt;(source, (String)null);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1600" y="720" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-55" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-52" target="FzdVbH49xBQuPaiEanxh-54" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-52" value="&lt;div&gt;this.className = name.replace(&#39;/&#39;, &#39;.&#39;);&lt;/div&gt;&lt;div&gt;this.superName = superName.replace(&#39;/&#39;, &#39;.&#39;);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 调用父类(ClassVisitor)的visit方法, 内部调用ClassWriter将这些数据最终写到 ClassWriter&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;super.visit(version, access, name, signature, superName, interfaces);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="2080" y="720" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-54" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 写class头部信息&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;public final void &lt;b&gt;visit&lt;/b&gt;(&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final int version,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final int access,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final String name,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final String signature,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final String superName,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; final String[] interfaces) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;version&lt;/b&gt; = version;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;accessFlags&lt;/b&gt; = access;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.thisClass = &lt;b&gt;symbolTable&lt;/b&gt;.&lt;b&gt;setMajorVersionAndClassName&lt;/b&gt;(version &amp;amp; 0xFFFF, name);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (signature != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.signatureIndex = &lt;b&gt;symbolTable&lt;/b&gt;.addConstantUtf8(signature);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; this.superClass = superName == null ? 0 : &lt;b&gt;symbolTable&lt;/b&gt;.addConstantClass(superName).index;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (interfaces != null &amp;amp;&amp;amp; interfaces.length &amp;gt; 0) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; interfaceCount = interfaces.length;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.interfaces = new int[interfaceCount];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (int i = 0; i &amp;lt; interfaceCount; ++i) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.interfaces[i] = &lt;b&gt;symbolTable&lt;/b&gt;.addConstantClass(interfaces[i]).index;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (compute == MethodWriter.COMPUTE_MAX_STACK_AND_LOCAL &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;amp;&amp;amp; (version &amp;amp; 0xFFFF) &amp;gt;= Opcodes.V1_7) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; compute = MethodWriter.COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="2560" y="440" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-56" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SymbolTable&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;符号表，The constant pool entries, the BootstrapMethods attribute entries and the (ASM specific) type table entries of a class.&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;final ClassWriter classWriter;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ClassReader sourceClassReader;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 主版本号&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int majorVersion;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 类名&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String className;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int entryCount;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Entry[] entries;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 常量池中元素数量&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int constantPoolCount;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 常量池，ByteVector 就是 byte数组&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector &lt;b&gt;constantPool&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int bootstrapMethodCount;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ByteVector &lt;b&gt;bootstrapMethods&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int typeCount;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Entry[] &lt;b&gt;typeTable&lt;/b&gt;;&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="320" width="400" height="480" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-58" value="&lt;div&gt;if (file != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sourceFileIndex = &lt;b&gt;symbolTable&lt;/b&gt;.addConstantUtf8(file);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;if (debug != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; debugExtension = new ByteVector().encodeUtf8(debug, 0, Integer.MAX_VALUE);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="2080" y="820" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-60" value="&lt;div&gt;this.fieldInfo.put(name, info);&lt;/div&gt;&lt;div&gt;this.cv.&lt;b&gt;visitField&lt;/b&gt;(access, name, type.getDescriptor(), (String)null, value);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1600" y="1000" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-62" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;callbackTypes = {Type[7]@6791}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;0 = {Type@7266} &quot;Lorg/springframework/cglib/proxy/&lt;b&gt;MethodInterceptor&lt;/b&gt;;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;1 = {Type@7266} &quot;Lorg/springframework/cglib/proxy/MethodInterceptor;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;2 = {Type@7267} &quot;Lorg/springframework/cglib/proxy/NoOp;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;3 = {Type@7268} &quot;Lorg/springframework/cglib/proxy/Dispatcher;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;4 = {Type@7268} &quot;Lorg/springframework/cglib/proxy/Dispatcher;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;5 = {Type@7266} &quot;Lorg/springframework/cglib/proxy/MethodInterceptor;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;6 = {Type@7266} &quot;Lorg/springframework/cglib/proxy/MethodInterceptor;&quot;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="-2160" y="560" width="390" height="120" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-69" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-64" target="FzdVbH49xBQuPaiEanxh-68" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-64" value="CallbackGenerator[] generators = CallbackInfo.getGenerators(callbackTypes);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;// CallbackGenerator -&amp;gt; List&amp;lt;MethodInfo&amp;gt;&lt;/font&gt;&lt;br&gt;Map groups = new HashMap();&lt;br&gt;...&lt;br&gt;&lt;div&gt;Iterator it1 = methods.iterator();&lt;/div&gt;&lt;div&gt;Iterator it2 = (actualMethods != null) ? actualMethods.iterator() : null;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 先判断每个方法适合使用哪种 callbackType 增强，进行分组存储到 groups&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;while&lt;/b&gt; (it1.hasNext()) {&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&amp;nbsp; &amp;nbsp; MethodInfo method = (MethodInfo) it1.next();&lt;br&gt;&amp;nbsp; &amp;nbsp; Method actualMethod = (it2 != null) ? (Method) it2.next() : null;&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 根据 CallbackFilter 判断 actualMethod 应该使用哪种 callbackType 增强&lt;/font&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; int index = filter.&lt;b&gt;accept&lt;/b&gt;(actualMethod);&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;originalModifiers.put(method, (actualMethod != null ? actualMethod.getModifiers() : method.getModifiers()));&lt;div&gt;&amp;nbsp; &amp;nbsp; indexes.put(method, index);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; List group = (List) groups.get(generators[index]);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (group == null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; groups.put(generators[index], group = new ArrayList(methods.size()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;group.add(method);&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// CodeEmitter 用于将方法的字节码片段输出到 ClassWriter&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;CodeEmitter se = ce.getStaticHook();&lt;br&gt;&lt;/div&gt;&lt;div&gt;CallbackGenerator.Context context = new CallbackGenerator.Context() {...}&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 执行每一组方法的代理增强重写&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;for (int i = 0; i &amp;lt; callbackTypes.length; i++) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; CallbackGenerator gen = generators[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!seenGen.contains(gen)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; seenGen.add(gen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final List &lt;b&gt;fmethods&lt;/b&gt; = (List) groups.get(gen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (fmethods != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; gen.&lt;b&gt;generate&lt;/b&gt;(ce, context, fmethods);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 2&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; gen.&lt;b&gt;generateStatic&lt;/b&gt;(se, context, fmethods);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (RuntimeException x) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw x;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (Exception x) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new CodeGenerationException(x);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;se.return_value();&lt;/div&gt;&lt;div&gt;se.end_method();&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1600" y="1120" width="440" height="660" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-68" value="&lt;div&gt;Map &lt;b&gt;sigMap&lt;/b&gt; = new HashMap();&lt;/div&gt;&lt;div&gt;Iterator it = methods.iterator();&lt;/div&gt;&lt;div&gt;while(it.hasNext()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; MethodInfo method = (MethodInfo)it.next();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Signature sig = method.getSignature();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Signature impl = context.getImplSignature(method);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String methodField = this.getMethodField(impl);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String methodProxyField = this.getMethodProxyField(impl);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sigMap.put(sig.toString(), methodProxyField);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ce.declare_field(26, methodField, METHOD, (Object)null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ce.declare_field(26, methodProxyField, METHOD_PROXY, (Object)null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ce.declare_field(26, &quot;CGLIB$emptyArgs&quot;, Constants.TYPE_OBJECT_ARRAY, (Object)null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;CodeEmitter&lt;/b&gt; &lt;b&gt;e&lt;/b&gt; = ce.begin_method(16, impl, method.getExceptionTypes());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; superHelper(e, method, context);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.return_value();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.end_method();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e = context.&lt;b&gt;beginMethod&lt;/b&gt;(ce, method);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Label nullInterceptor = e.make_label();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; context.emitCallback(e, context.getIndex(method));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.dup();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.ifnull(nullInterceptor);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.load_this();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.getfield(methodField);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (sig.getArgumentTypes().length == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.getfield(&quot;CGLIB$emptyArgs&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e.create_arg_array();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.getfield(methodProxyField);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.&lt;b&gt;invoke_interface&lt;/b&gt;(METHOD_INTERCEPTOR, INTERCEPT);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.unbox_or_zero(sig.getReturnType());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.return_value();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.mark(nullInterceptor);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; superHelper(e, method, context);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.return_value();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; e.end_method();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;this.&lt;b&gt;generateFindProxy&lt;/b&gt;(ce, sigMap);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2080" y="1120" width="440" height="560" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-73" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="FzdVbH49xBQuPaiEanxh-70" target="FzdVbH49xBQuPaiEanxh-72" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-70" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;CodeEmitter&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Code 发射器，其 emit_xxx 方法用于将方法的字节码片段最终输出到 ClassWriter&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private ClassEmitter ce;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private State state;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1240" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="FzdVbH49xBQuPaiEanxh-72" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;LocalVariablesSorter&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;extends MethodVisitor&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final int firstLocal;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final State state;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1040" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-1" value="&lt;div&gt;&lt;b&gt;代理类生成后，ClassWriter 内部数据结构：&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;cw = {&lt;b&gt;DebuggingClassWriter&lt;/b&gt;@7008}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;className = &quot;top.kwseeker.labs.spring.transaction.service.TransferService$$EnhancerBySpringCGLIB$$d125a991&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;superName = &quot;top.kwseeker.labs.spring.transaction.service.TransferService&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;api = 589824&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;cv = {&lt;b&gt;ClassWriter&lt;/b&gt;@7027}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; flags = 2&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; version = 52&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;symbolTable&lt;/b&gt; = {SymbolTable@7031}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; accessFlags = 1&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; thisClass = 2&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; superClass = 4&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; interfaceCount = 3&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;interfaces&lt;/b&gt; = {int[3]@7087} [6, 8, 10]&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;firstField&lt;/b&gt; = {FieldWriter@7088}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;lastField&lt;/b&gt; = {FieldWriter@7089}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;firstMethod&lt;/b&gt; = {MethodWriter@7090}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;lastMethod&lt;/b&gt; = {MethodWriter@7091}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; numberOfInnerClasses = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;innerClasses&lt;/b&gt; = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; enclosingClassIndex = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; enclosingMethodIndex = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; signatureIndex = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; sourceFileIndex = 11&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; debugExtension = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;lastRuntimeVisibleAnnotation&lt;/b&gt; = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;lastRuntimeInvisibleAnnotation&lt;/b&gt; = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; lastRuntimeVisibleTypeAnnotation = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; lastRuntimeInvisibleTypeAnnotation = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; moduleWriter = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; nestHostClassIndex = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; numberOfNestMemberClasses = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;nestMemberClasses&lt;/b&gt; = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; numberOfPermittedSubclasses = 0&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; permittedSubclasses = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; firstRecordComponent = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; lastRecordComponent = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; firstAttribute = null&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; compute = 4&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; api = 589824&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; cv = null&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="40" y="660" width="650" height="620" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-2" value="&lt;div&gt;return (byte[])((byte[])AccessController.doPrivileged(new PrivilegedAction() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public Object run() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] b = ((ClassWriter)DebuggingClassWriter.access$001(DebuggingClassWriter.this)).toByteArray();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // debugLocation 不为 null 就在 debugLocation 指定的路径下打印 .class 文件&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (DebuggingClassWriter.debugLocation != null) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 类的全限定名路径&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String dirs = DebuggingClassWriter.this.className.replace(&#39;.&#39;, File.separatorChar);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 文件路径： debugLocaltion + 全限定名路径 + .class&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (new File(DebuggingClassWriter.debugLocation + File.separatorChar + dirs)).getParentFile().mkdirs();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; File file = new File(new File(DebuggingClassWriter.debugLocation), dirs + &quot;.class&quot;);&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; OutputStream out = new BufferedOutputStream(new FileOutputStream(file));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.write(b);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.close();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;        &amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 还支持打印 .asm&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;DebuggingClassWriter.traceCtor &lt;/b&gt;!= null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b style=&quot;background-color: initial; border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 文件路径： debugLocaltion + 全限定名路径 + .asm&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; file = new File(new File(DebuggingClassWriter.debugLocation), dirs + &quot;.asm&quot;);&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out = new BufferedOutputStream(new FileOutputStream(file));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ClassReader cr = new ClassReader(b);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PrintWriter pw = new PrintWriter(new OutputStreamWriter(out));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ClassVisitor tcv = (ClassVisitor)DebuggingClassWriter.traceCtor.newInstance(null, pw);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cr.accept(tcv, 0);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pw.flush();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.close();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Exception var17) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new CodeGenerationException(var17);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return b;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}));&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;arcSize=1;" vertex="1" parent="1">
          <mxGeometry x="1000" y="1800" width="560" height="560" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-4" value="&lt;b&gt;注意&lt;/b&gt;：&lt;br&gt;1 Spring 官方已经支持&lt;b&gt;查看生成的动态代理 .class 文件&lt;/b&gt;，只需要设置系统属性 &quot;&lt;b&gt;cglib.debugLocation&lt;/b&gt;&quot;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;比如： &quot;-Dcglib.debugLocation=/tmp/spring-cglib&quot;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="840" y="10" width="560" height="130" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-6" value="&lt;font color=&quot;#007fff&quot;&gt;对 Class 内部还包括一些 FieldVisitor MethodVisitor 等，&lt;br&gt;分别用于构建字段、方法的字节码&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-760" y="80" width="320" height="40" as="geometry" />
        </mxCell>
        <mxCell id="10TpCgqnUDmNamHutM36-7" value="&lt;div&gt;/tmp/spring-cglib&lt;/div&gt;&lt;div&gt;└── top&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; └── kwseeker&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── labs&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── spring&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── transaction&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ├── service&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ├── TransferService$$EnhancerBySpringCGLIB$$bc002a25$$FastClassBySpringCGLIB$$344f828.class&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ├── &lt;b&gt;TransferService$$EnhancerBySpringCGLIB$$bc002a25.class&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── TransferService$$FastClassBySpringCGLIB$$1b385304.class&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;上面两个 &lt;b&gt;Fast&lt;/b&gt; 代理类是经过 CgLib 优化的代理类，使用索引而不是反射来调用方法提升性能。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;但是调试可以发现默认基本还是使用的非 Fast 代理类。TODO why?&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1580" y="1820" width="670" height="200" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

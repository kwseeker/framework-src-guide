<mxfile host="Electron" modified="2024-05-16T12:46:53.888Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="VzOSeL7ugwU1zWIOePUC" version="21.6.5" type="device" pages="3">
  <diagram name="RedissonLock" id="BnpH6MyAiMC-jk9W1z5V">
    <mxGraphModel dx="3915" dy="879" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.001;entryY=0.565;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;entryPerimeter=0;" edge="1" parent="1" source="LtS7gfKAsIHDJF8mLO0w-1" target="dYNV18oPOYucMmK5HlVg-50">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3070" y="1910" />
              <mxPoint x="3070" y="904" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-86" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-83" target="dYNV18oPOYucMmK5HlVg-46" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2840" y="1730" as="targetPoint" />
            <Array as="points">
              <mxPoint x="3050" y="1730" />
              <mxPoint x="3050" y="685" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-94" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-86" vertex="1" connectable="0">
          <mxGeometry x="-0.9752" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-75" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1.002;entryY=0.838;entryDx=0;entryDy=0;entryPerimeter=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="dYNV18oPOYucMmK5HlVg-64" target="dYNV18oPOYucMmK5HlVg-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-76" value="唤醒" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-75" vertex="1" connectable="0">
          <mxGeometry x="-0.9524" y="-3" relative="1" as="geometry">
            <mxPoint y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dfN3vujWDwPQzVs5uhvx-1" value="&lt;h1 style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Redisson 分布式锁工作原理流程&lt;/font&gt;&lt;/h1&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;源码版本：3.29.0&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;测试DEMO: SpringBoot-Labs/redis/redisson/redisson-exampl&lt;span style=&quot;background-color: initial;&quot;&gt;e&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;RedissonLock的实现依赖&lt;b&gt;Redis发布订阅&lt;/b&gt;，所以研究分布式锁的源码前最好先看下Redisson发布订阅的实现。&lt;/span&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="680" height="110" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-1" target="IO7cbxsnxIBy7bkgTzKg-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-1" value="RedissonLock" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="40" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-2" target="IO7cbxsnxIBy7bkgTzKg-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-2" value="RedissonLockTest#&lt;br style=&quot;font-size: 11px;&quot;&gt;testSubscriptionsPerConnection()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-4" target="IO7cbxsnxIBy7bkgTzKg-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-4" target="IO7cbxsnxIBy7bkgTzKg-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-4" value="先创建连接配置" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-6" target="IO7cbxsnxIBy7bkgTzKg-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-6" target="IO7cbxsnxIBy7bkgTzKg-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-6" value="根据连接配置创建客户端连接" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-8" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建最基本的连接配置（RESP2协议、服务器地址redis://127.0.0.1:6379）&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;Config config = createConfig();&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;config.useSingleServer()&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionConnectionPoolSize(1) &lt;font color=&quot;#007fff&quot;&gt;//订阅连接池的大小&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionConnectionMinimumIdleSize(1)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionsPerConnection(1) &lt;font color=&quot;#007fff&quot;&gt;//每个连接限制订阅的数量&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setAddress(redisson.getConfig().useSingleServer().getAddress());&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;" parent="1" vertex="1">
          <mxGeometry x="760" y="140" width="360" height="100" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-12" value="RedissonClient redisson&amp;nbsp; = Redisson.&lt;b&gt;create&lt;/b&gt;(config);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;这个看发布订阅流程图中的分析，主要是创建连接和线程池&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-14" target="IO7cbxsnxIBy7bkgTzKg-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-14" value="ExecutorService e = Executors.newFixedThreadPool(32);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;创建了包含32个线程的线程池，模拟并发请求&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-16" target="IO7cbxsnxIBy7bkgTzKg-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-16" value="for 循环5000次，向线程池中提交分布锁同步的任务，每个任务随机睡眠0-20ms模拟业务处理耗时" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-22" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1160" y="470" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-27" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-21" vertex="1" connectable="0">
          <mxGeometry x="0.75" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-28" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-25" vertex="1" connectable="0">
          <mxGeometry x="0.35" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-24" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1140" y="470" />
              <mxPoint x="1140" y="1630" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-29" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-26" vertex="1" connectable="0">
          <mxGeometry x="0.8" y="-2" relative="1" as="geometry">
            <mxPoint x="2" y="100" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-18" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; String lockKey = &quot;lock-1&quot;;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; RLock lock = redisson.&lt;b&gt;getLock&lt;/b&gt;(lockKey); &lt;font color=&quot;#007fff&quot;&gt;//1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; lock.&lt;b&gt;lock&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//2&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Thread.sleep(ThreadLocalRandom.current().nextInt(20));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; counter++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; lock.&lt;b&gt;unlock&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//3&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ops.incrementAndGet();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} catch (Exception exception) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; exception.printStackTrace();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if(exception instanceof RedisTimeoutException){&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; errors.incrementAndGet();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="760" y="380" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-33" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-22" target="IO7cbxsnxIBy7bkgTzKg-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-22" value="&lt;div&gt;RLock lock = redisson.getLock(lockKey);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1160" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-29" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-23" target="dYNV18oPOYucMmK5HlVg-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-23" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; lock.lock();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1160" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-78" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-24" target="dYNV18oPOYucMmK5HlVg-77" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-24" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; lock.un&lt;span style=&quot;background-color: initial;&quot;&gt;lock();&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1160" y="1600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-32" target="dYNV18oPOYucMmK5HlVg-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-32" value="&lt;div&gt;return new &lt;b&gt;RedissonLock&lt;/b&gt;(&lt;br&gt;this.commandExecutor, name);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-24" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-34" target="IO7cbxsnxIBy7bkgTzKg-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;dashed=1;endArrow=block;endFill=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-34" target="dYNV18oPOYucMmK5HlVg-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-63" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.002;exitY=0.646;exitDx=0;exitDy=0;entryX=1;entryY=0.286;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;endArrow=open;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-34" target="dYNV18oPOYucMmK5HlVg-20" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-460" y="1141" />
              <mxPoint x="-460" y="1300" />
              <mxPoint x="-900" y="1300" />
              <mxPoint x="-900" y="1526" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-34" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonBaseLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;锁相关对象的基本抽象类，锁相关的大部分类都继承此抽象类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final ConcurrentMap&amp;lt;String, ExpirationEntry&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;EXPIRATION_RENEWAL_MAP&lt;/b&gt; = new ConcurrentHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//默认30s&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b&gt;internalLockLeaseTime&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对应的ServiceManager id (是UUID), 可能后面逻辑哪里可能需要获取ServiceManager&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;id&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//id + &quot;:&quot; + name&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;entryName&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自Redisson commandExecutor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final RedisCommand&amp;lt;Integer&amp;gt; &lt;b&gt;HGET&lt;/b&gt; = new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;RedisCommand(&quot;HGET&quot;, new MapValueDecoder(), new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;IntegerReplayConvertor(0));&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="960" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-35" target="IO7cbxsnxIBy7bkgTzKg-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-17" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=1;entryY=0.801;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=open;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-35" target="dYNV18oPOYucMmK5HlVg-16" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-460" y="1400" />
              <mxPoint x="-460" y="1705" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-35" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;基本的可重入锁实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//默认30s&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b style=&quot;background-color: initial;&quot;&gt;internalLockLeaseTime&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自PublishSubscribeService lockPubSub&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;LockPubSub&lt;/b&gt; &lt;b&gt;pubSub&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1280" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-36" target="IO7cbxsnxIBy7bkgTzKg-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;dashed=1;fontSize=11;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-36" target="IO7cbxsnxIBy7bkgTzKg-42" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-340" y="780" />
              <mxPoint x="-620" y="780" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-36" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonExpirable (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;拓展超时方法实现，由于Redisson大部分对象都需要支持超时方法，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;Redisson大部分对象类都继承此类&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="800" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;dashed=1;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-37" target="IO7cbxsnxIBy7bkgTzKg-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-37" target="UIfJx8McfHb-EtYyFKPk-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-460" y="640" />
              <mxPoint x="-460" y="280" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-37" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonObject (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//命令异步执行器，其实封装了&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;CommandAsyncExecutor&lt;/b&gt; &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象名字&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected String &lt;b&gt;name&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象使用的编解码器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final Codec &lt;b&gt;codec&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-440" y="600" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-39" target="IO7cbxsnxIBy7bkgTzKg-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-39" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RObject (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;定义Redisson对象的基本方法（这里定义同步方法），Redisson对象的核心接口，Redisson所有对象都实现此接口&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//获取对象空闲时间（s），即从上次读写到现在的秒数&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Long getIdleTime();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//更新对象最后访问时间&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean touch();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象在Redis中占用内存大小（按bytes计算）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long sizeInMemory();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//Redisson对象的一些序列化和反序列化方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void restore(byte[] state);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;byte[] dump();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象迁移、复制&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void migrate(String host, int port, int database, long timeout);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void copy(String host, int port, int database, long timeout);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean move(int database);&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象基本操作方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String getName();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean delete();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean unlink();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void rename(String newName);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean renamenx(String newName);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isExists();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Codec getCodec();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象监听器相关，具体参考各种监听器实现类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int addListener(ObjectListener listener);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void removeListener(int listenerId);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-440" y="160" width="400" height="400" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-40" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RObjectAsync (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;拓展 RObject&amp;nbsp;&lt;b&gt;异步&lt;/b&gt;接口方法，返回 RFuture&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="40" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-1" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-41" target="IO7cbxsnxIBy7bkgTzKg-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-41" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RExpirableAsync (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;拓展 RExpirable 异步接口方法，返回 RFuture&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-760" y="160" width="280" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-42" target="IO7cbxsnxIBy7bkgTzKg-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-42" target="IO7cbxsnxIBy7bkgTzKg-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-42" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RExpirable (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;为对象定义超时方法（TTL）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expire(Instant time);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expireIfSet(Instant time);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expire(Duration duration);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean clearExpire();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long remainTimeToLive();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getExpireTime();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-760" y="600" width="280" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-9" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;CommandAsyncExecutor&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis命令异步执行器，Redisson提供了异步、批量异步、响应式（基于Reactor、RxJava）多种实现&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1120" y="240" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="UIfJx8McfHb-EtYyFKPk-20" target="UIfJx8McfHb-EtYyFKPk-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1000" y="360" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.001;exitY=0.439;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-20" target="dYNV18oPOYucMmK5HlVg-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1240" y="450" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-20" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;CommandAsyncService&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;异步执行器实现，其他几种执行器全都继承这个类，说明所有执行器都是异步的&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final Codec codec;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;//连接管理器，就是保存连接的容器类对象&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;ConnectionManager&lt;/b&gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;connectionManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final RedissonObjectBuilder objectBuilder;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final RedissonObjectBuilder.ReferenceType referenceType;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryAttempts;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryInterval;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int responseTimeout;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final boolean trackChanges;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1200" y="360" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-22" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-21" target="UIfJx8McfHb-EtYyFKPk-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-21" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;CommandBatchService&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;批量执行器实现（也是异步的）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicInteger index = new AtomicInteger();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;NodeSource, Entry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;commands&lt;/b&gt;&amp;nbsp;= new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private Map&amp;lt;MasterSlaveEntry, Entry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;aggregatedCommands&lt;/b&gt;&amp;nbsp;= Collections.emptyMap();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;MasterSlaveEntry, ConnectionEntry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;connections&lt;/b&gt;&amp;nbsp;= new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final BatchOptions options;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;CompletableFuture&amp;lt;?&amp;gt;, List&amp;lt;CommandBatchService&amp;gt;&amp;gt; nestedServices = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicBoolean executed = new AtomicBoolean();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final long retryInterval;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryAttempts;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1200" y="600" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-29" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-28" target="dYNV18oPOYucMmK5HlVg-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1440" y="1040" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-28" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SingleConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis单机模式连接管理器&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1640" y="1080" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-11" target="dYNV18oPOYucMmK5HlVg-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1880" y="1080" as="sourcePoint" />
            <mxPoint x="-1470" y="1050" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1880" y="1061" />
              <mxPoint x="-1440" y="1061" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-1" value="Redisson" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1465" y="330" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-3" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="-910" y="1090" width="20" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-5" target="dYNV18oPOYucMmK5HlVg-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-5" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b&gt;Redisson&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Redisson客户端实现类&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//过期任务调度，间接借助ConnectionManager中的线程执行过期任务&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final EvictionScheduler &lt;b&gt;evictionScheduler&lt;/b&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;//同样间接借助ConnectionManager中的线程执行任务，任务会存储到名为tasks的Map&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private final WriteBehindService &lt;b&gt;writeBehindService&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionManager &lt;b&gt;connectionManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//命令异步执行器，是CommandAsyncService实例，借助 ConnectionManager中的线程池和连接实现命令异步发送&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;liveObjectClassCache&lt;/b&gt; = new ConcurrentHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Config &lt;b&gt;config&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1200" y="1040" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-6" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;RedissonClient&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;包括创建连接、关闭连接、获取服务节点信息，以及获取各种&lt;b&gt;Redisson对象&lt;/b&gt;的方法。&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1120" y="920" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-7" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ConnectionManager&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//部分关键接口方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//其实是启动Netty客户端&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void &lt;b&gt;connect&lt;/b&gt;();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void shutdown();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//获取发布订阅服务&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;PublishSubscribeService getSubscribeService();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//集群模式计算槽位&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int calcSlot(String key);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//主从服务节点Entry集合&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Collection&amp;lt;MasterSlaveEntry&amp;gt; getEntrySet();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建Redis连接（RedisClient）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RedisClient &lt;b&gt;createClient&lt;/b&gt;(NodeType type, InetSocketAddress address, RedisURI uri, String sslHostname);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RedisClient &lt;b&gt;createClient&lt;/b&gt;(NodeType type, RedisURI address, String sslHostname);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;b&gt;ServiceManager&lt;/b&gt;(Netty客户端 + ExecutorService + Redis Server 配置)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;ServiceManager&lt;/b&gt; getServiceManager();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建命令执行器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;CommandAsyncExecutor &lt;b&gt;createCommandExecutor&lt;/b&gt;(RedissonObjectBuilder objectBuilder,&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;RedissonObjectBuilder.ReferenceType referenceType);&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1640" y="360" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-9" target="dYNV18oPOYucMmK5HlVg-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-9" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MasterSlaveConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;连接管理器基本实现，其他实现类都继承此实现，包括单机、主从复制&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;、哨兵、集群4种实现&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected DNSMonitor dnsMonitor;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected MasterSlaveServersConfig &lt;b&gt;config&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//连接到Redis服务节点的对象，里面保存连接到某个节点的所有连接对象&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private MasterSlaveEntry &lt;b&gt;masterSlaveEntry&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//发布订阅服务&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final PublishSubscribeService &lt;b&gt;subscribeService&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//Netty服务器配置等&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final ServiceManager &lt;b&gt;serviceManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisURI, RedisConnection&amp;gt; &lt;b&gt;nodeConnections&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final AtomicReference&amp;lt;CompletableFuture&amp;lt;Void&amp;gt;&amp;gt; lazyConnectLatch = new AtomicReference&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private boolean lastAttempt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1640" y="760" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-11" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClusterConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis集群模式连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Integer, ClusterPartition&amp;gt; lastPartitions = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisURI, ClusterPartition&amp;gt; lastUri2Partition = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private volatile Timeout monitorFuture;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private volatile RedisURI lastClusterNode;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private RedisStrictCommand&amp;lt;List&amp;lt;ClusterNodeInfo&amp;gt;&amp;gt; clusterNodesCommand;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private String configEndpointHostName;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//slot对应的服务节点&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicReferenceArray&amp;lt;MasterSlaveEntry&amp;gt; slot2entry = new AtomicReferenceArray&amp;lt;&amp;gt;(MAX_SLOT);&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//服务节点也是多个&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisClient, MasterSlaveEntry&amp;gt; &lt;b&gt;client2entry&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private ClusterServersConfig cfg;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final long seed = ThreadLocalRandom.current().nextLong();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2080" y="1080" width="400" height="320" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-12" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;RLock&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I) &lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;extends Lock, RLockAsync&lt;/span&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Lock 接口是JUC的接口，RLockAsync是Redisson拓展的&lt;br&gt;异步接口&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;RLock 中额外拓展了一些加锁超时方法。&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-760" y="800" width="280" height="120" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-14" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;super(commandExecutor, name);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;commandExecutor&lt;/b&gt; = commandExecutor;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;internalLockLeaseTime&lt;/b&gt; = getServiceManager().getCfg().getLockWatchdogTimeout();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//PublishSubscribeService 实例化时 new LockPubSub(this);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;pubSub&lt;/b&gt; = commandExecutor.getConnectionManager()&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;.getSubscribeService().getLockPubSub();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" parent="1" vertex="1">
          <mxGeometry x="1640" y="350" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-68" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.003;exitY=0.796;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-16" target="dYNV18oPOYucMmK5HlVg-60" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-16" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PublishSubscribeService&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;类似 MasterSlaveEntry 保存了一组用于发布订阅的连接, 通过 Map 存储连接，只不过KEY是发布订阅相关的&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionManager connectionManager;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final MasterSlaveServersConfig config;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AsyncSemaphore[] locks = new AsyncSemaphore[50];&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AsyncSemaphore freePubSubLock = new AsyncSemaphore(1);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//主题名 -&amp;gt; 连接集合&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;&lt;b&gt;ChannelName&lt;/b&gt;, Collection&amp;lt;&lt;b&gt;PubSubConnectionEntry&lt;/b&gt;&amp;gt;&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;name2entry&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//PubSubKey -&amp;gt; 连接集合&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//PubSubKey 是 &quot;主题名 + MasterSlaveEntry&quot;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;&lt;b&gt;PubSubKey&lt;/b&gt;, PubSubConnectionEntry&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;name2PubSubConnection&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//MasterSlaveEntry -&amp;gt;&amp;nbsp;PubSubEntry&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;MasterSlaveEntry, &lt;b&gt;PubSubEntry&lt;/b&gt;&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;entry2PubSubConnection&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;&lt;b&gt;PubSubClientKey&lt;/b&gt;, PubSubConnectionEntry&amp;gt;&amp;nbsp;&lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; key2connection&lt;/b&gt; =&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final SemaphorePubSub semaphorePubSub = new SemaphorePubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CountDownLatchPubSub countDownLatchPubSub = new CountDownLatchPubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//同一个Redisson实例内部只有一个 PublishSubscribeService 也只有一个 LockPubSub实例&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final &lt;b&gt;LockPubSub&lt;/b&gt; &lt;b&gt;lockPubSub&lt;/b&gt; = new LockPubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Set&amp;lt;PubSubConnectionEntry&amp;gt; trackedEntries = Collections.newSetFromMap(new ConcurrentHashMap&amp;lt;&amp;gt;());&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean shardingSupported = false;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1320" width="400" height="480" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-19" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;结合 JUC 锁实现基本原理对比 Redisson分布式锁实现(&lt;span style=&quot;background-color: initial;&quot;&gt;下面省略很多细节)：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;JUC锁&lt;/b&gt;：&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;对 volatile int字段执行CAS操作加锁，同时只有一个加锁成功，未加锁成功的到队列中排队，锁释放后从队列头部唤醒等待的线程重新竞争加锁；&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;Redisson分布式锁&lt;/b&gt;：&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;加锁是借助Hash数据类型通过发送lua脚本执行 hincrby pexpire 实现，同时只有一个线程加锁成功（成功返回nil），未加锁成功的线程先订阅主题&amp;nbsp;&amp;nbsp;redisson_lock__channel:{&amp;lt;lockName&amp;gt;}，再尝试获取信号量（RedissonLockEntry.latch，初始为0）只有成功获取信号量的才可以继续尝试获取锁，获取锁的线程执行完同步代码释放锁会发布释放锁的消息进而给latch++, 这样就可以推动其他等待的线程继续尝试获取锁，从而实现线程同步&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;看门狗机制&lt;/b&gt;：&lt;/div&gt;&lt;div style=&quot;&quot;&gt;成功加锁后，会调用 scheduleExpirationRenewal(threadId) 通过 ServiceManager 中的线程池注册一个用于自动续约的超时任务（一次性任务），延迟 internalLockLeaseTime / 3 ms（默认是10s）后执行，每次执行会向Redis Server 发送Lua脚本修改超时时间，修改完超时时间还会调用自己再注册一个超时任务，这样就可以一直续约下去；解锁时会取消续约。&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="40" y="240" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-24" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.005;exitY=0.287;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-20" target="dYNV18oPOYucMmK5HlVg-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-20" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PublishSubscribe&amp;lt;E extends PubSubEntry&amp;lt;E&amp;gt;&amp;gt; (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;发布订阅逻辑封装，包含 PubSubEntry 集合&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//这个其实是待注册的订阅节点容器&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//entryName （&lt;b&gt;ServiceManagerID:锁名&lt;/b&gt;） -&amp;gt; PubSubEntry实现类实例&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;String, E&amp;gt; &lt;b&gt;entries&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//所属发布订阅服务&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final PublishSubscribeService &lt;b&gt;service&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void unsubscribe(E entry, String entryName, String channelName)&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void timeout(CompletableFuture&amp;lt;?&amp;gt; promise)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void timeout(CompletableFuture&amp;lt;?&amp;gt; promise, long timeout)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public CompletableFuture&amp;lt;E&amp;gt; subscribe(String entryName, String channelName)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected abstract E createEntry(CompletableFuture&amp;lt;E&amp;gt; newPromise);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//用于自定义订阅回调&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected abstract void onMessage(E value, Long message);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//将子类的onMessage重新封装成RedisPubSubListener注册到连接中的监听器队列&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private RedisPubSubListener&amp;lt;Object&amp;gt; createListener(String channelName, E value)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1440" width="400" height="300" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-21" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;PubSubEntry&amp;lt;E&amp;gt; (I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;订阅监听节点&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void acquire();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int release();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;CompletableFuture&amp;lt;E&amp;gt; getPromise();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1440" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-25" target="dYNV18oPOYucMmK5HlVg-21" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1540" y="1600" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-25" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RedissonLockEntry&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;等待锁的订阅监听节点&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//订阅时++， 取消订阅时--&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private volatile int &lt;b&gt;counter&lt;/b&gt;;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//初始permits == 0 的 JUC 信号量，用于&lt;b&gt;阻塞竞争锁失败的线程&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//解锁时会执行 latch.release()方法，收到监听回调时也会 release()&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Semaphore &lt;b&gt;latch&lt;/b&gt;;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//注册订阅成功后通过这个字段返回 RedissonLockEntry 实例&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CompletableFuture&amp;lt;RedissonLockEntry&amp;gt; &lt;b&gt;promise&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//异步加锁时有注册，监听回调时会调用&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final ConcurrentLinkedQueue&amp;lt;Runnable&amp;gt; &lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;listeners&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; = new &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;ConcurrentLinkedQueue&amp;lt;Runnable&amp;gt;();&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public void addListener(Runnable listener);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1600" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-32" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-26" target="dYNV18oPOYucMmK5HlVg-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-33" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-32" vertex="1" connectable="0">
          <mxGeometry x="0.8967" y="-4" relative="1" as="geometry">
            <mxPoint y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-54" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-26" target="dYNV18oPOYucMmK5HlVg-53" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-55" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-54" vertex="1" connectable="0">
          <mxGeometry x="0.2674" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-71" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-26" target="dYNV18oPOYucMmK5HlVg-70" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-72" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-71" vertex="1" connectable="0">
          <mxGeometry x="0.9694" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-26" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;long threadId = Thread.currentThread().getId();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;//1 即异步尝试获取锁&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;Long ttl = &lt;b style=&quot;font-size: 10px;&quot;&gt;tryAcquire&lt;/b&gt;(-1, leaseTime, unit, threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;if (ttl == null) {&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//后面逻辑可知成功获取到ttl会返回null,失败会返回其他线程锁占用超时时间&lt;/font&gt;&lt;/span&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return; &lt;font color=&quot;#007fff&quot;&gt;//获取锁成功退出&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//2 即尝试获取锁失败（锁被其他线程占用），通过发布订阅实现“JUC锁获取失败入对等待唤醒”类似的逻辑&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletableFuture&amp;lt;RedissonLockEntry&amp;gt; future = &lt;b style=&quot;font-size: 10px;&quot;&gt;subscribe&lt;/b&gt;(threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//注册一个超时任务当订阅超时还未订阅成功就异常结束，超时前订阅成功则删除此超时任务&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;pubSub&lt;/b&gt;.&lt;b style=&quot;font-size: 10px;&quot;&gt;timeout&lt;/b&gt;(future);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;RedissonLockEntry entry;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;//t同步等待CompletableFuture&amp;lt;RedissonLockEntry&amp;gt;完成&lt;/font&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;if (interruptibly) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; entry = commandExecutor.&lt;b&gt;getInterrupted&lt;/b&gt;(future);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;//3 同步等待订阅成功&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; entry = commandExecutor.&lt;b&gt;get&lt;/b&gt;(future);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; while (true) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//订阅成功后先再执行一次尝试获取锁，这里绝对参考了JDK源码实现&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ttl = &lt;b style=&quot;font-size: 10px;&quot;&gt;tryAcquire&lt;/b&gt;(-1, leaseTime, unit, threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // lock acquired&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (ttl == null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//还是获取锁失败&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (ttl &amp;gt;= 0) {&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//自旋重试&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//4 RedissonLockEntry latch 起作用了，尝试获取JUC信号量，像RedissonLock只有其他线程解锁时这个信号量才会++，这里才会成功获取信号量&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.getLatch().&lt;b&gt;tryAcquire&lt;/b&gt;(ttl, TimeUnit.MILLISECONDS);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (InterruptedException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (interruptibly) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.getLatch().&lt;b&gt;tryAcquire&lt;/b&gt;(ttl, TimeUnit.MILLISECONDS);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//阻塞（ttl超时还没释放锁，就直接阻塞）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (interruptibly) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.getLatch().&lt;b&gt;acquire&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.getLatch().&lt;b&gt;acquireUninterruptibly&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} finally {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; unsubscribe(entry, threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1640" y="440" width="440" height="640" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-30" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-28" target="dYNV18oPOYucMmK5HlVg-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-28" value="&lt;div&gt;lock(-1, null, false);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;-1表示没有设置看门狗超时时间，会使用默认的超时时间30s，超时后会自动续约;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;不可中断；&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-35" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-31" target="dYNV18oPOYucMmK5HlVg-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-31" value="&lt;div&gt;return &lt;b&gt;get&lt;/b&gt;(&lt;b&gt;tryAcquireAsync0&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;waitTime, leaseTime, unit, threadId));&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;tryAcquireAsync0 返回的是RFuture, get()是&lt;b&gt;同步等待&lt;/b&gt;锁获取成功&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="2120" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-37" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-34" target="dYNV18oPOYucMmK5HlVg-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-34" value="return getServiceManager().&lt;b&gt;execute&lt;/b&gt;(&lt;br&gt;() -&amp;gt; &lt;b&gt;tryAcquireAsync&lt;/b&gt;(waitTime, leaseTime, unit, threadId));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;用的ServiceManager的线程池异步执行&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="2360" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-39" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-36" target="dYNV18oPOYucMmK5HlVg-38" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-48" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-39" vertex="1" connectable="0">
          <mxGeometry x="0.33" y="-2" relative="1" as="geometry">
            <mxPoint y="-27" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-47" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-36" target="dYNV18oPOYucMmK5HlVg-46" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-49" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-47" vertex="1" connectable="0">
          <mxGeometry x="0.9021" y="1" relative="1" as="geometry">
            <mxPoint x="-2" y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-51" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-36" target="dYNV18oPOYucMmK5HlVg-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-52" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-51" vertex="1" connectable="0">
          <mxGeometry x="0.9259" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-36" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;RFuture&amp;lt;&lt;b&gt;Long&lt;/b&gt;&amp;gt; ttlRemainingFuture;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;if (leaseTime &amp;gt; 0) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; //1 通过 evalWriteSyncedAsync 发送并执行Lua脚本&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ttlRemainingFuture = &lt;b&gt;tryLockInnerAsync&lt;/b&gt;(waitTime, &lt;b&gt;leaseTime&lt;/b&gt;, unit, threadId, RedisCommands.EVAL_LONG);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;//1&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ttlRemainingFuture = &lt;b&gt;tryLockInnerAsync&lt;/b&gt;(waitTime, &lt;b&gt;internalLockLeaseTime&lt;/b&gt;,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TimeUnit.MILLISECONDS, threadId, RedisCommands.EVAL_LONG);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//2&lt;/b&gt; 这个方法内部通过 CompletionStage handle() &lt;b&gt;注册了异常处理逻辑&lt;/b&gt;，如果上面逻辑执行&lt;b&gt;抛出异常&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;&lt;b&gt;就执行 unlockInnerAsync() 执行解锁操作&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletionStage&amp;lt;Long&amp;gt; s = &lt;b&gt;handleNoSync&lt;/b&gt;(threadId, ttlRemainingFuture);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;ttlRemainingFuture = new CompletableFutureWrapper&amp;lt;&amp;gt;(s);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//成功获取到锁之后执行&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletionStage&amp;lt;Long&amp;gt; f = ttlRemainingFuture.thenApply(ttlRemaining -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if (ttlRemaining == null) { &lt;font color=&quot;#007fff&quot;&gt;//前面逻辑看到加锁成功正常返回null&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (leaseTime &amp;gt; 0) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; internalLockLeaseTime = unit.toMillis(leaseTime);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //3 未设置 leaseTime&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;添加到期自动续约任务&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;scheduleExpirationRenewal&lt;/b&gt;(threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return ttlRemaining;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;});&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;return new CompletableFutureWrapper&amp;lt;&amp;gt;(f);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2600" y="300" width="440" height="340" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-41" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-38" target="dYNV18oPOYucMmK5HlVg-42" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="3560" y="365" as="targetPoint" />
            <Array as="points">
              <mxPoint x="3530" y="370" />
              <mxPoint x="3530" y="250" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-38" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;return &lt;b&gt;evalWriteSyncedAsync&lt;/b&gt;(getRawName(), LongCodec.INSTANCE, command,&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&quot;if ((redis.call(&#39;exists&#39;, KEYS[1]) == 0) &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;or (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]) == 1)) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil; &quot; +&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//加锁成功是&lt;b&gt;返回nil&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;return redis.call(&#39;pttl&#39;, KEYS[1]);&quot;,&lt;/font&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//已经存在锁但是是被其他线程占用，就&lt;b&gt;返回过期时间&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;Collections.singletonList(getRawName()), unit.toMillis(leaseTime), getLockName(threadId));&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;这里可以看到 RedissonLock 内部是用的 exists hexists hincrby pexpire 命令实现，先判断此名字的&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;锁是否存在，不存在或者存在但是是当前线程占用的，就hincrby(&amp;gt;1即重入)，并设置超时时间&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=6;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="3080" y="300" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-44" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-42" target="dYNV18oPOYucMmK5HlVg-43" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-42" value="return &lt;b&gt;commandExecutor&lt;/b&gt;.&lt;b&gt;syncedEval&lt;/b&gt;(key, codec, evalCommandType, script, keys, params);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="3560" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-43" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;NodeSource source = getNodeSource(key);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;return &lt;b&gt;evalAsync&lt;/b&gt;(source, false, codec, evalCommandType, script, keys, false, params);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" parent="1" vertex="1">
          <mxGeometry x="3800" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-45" value="CommandAsyncService" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3825" y="190" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-46" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;return &lt;b&gt;evalWriteSyncedAsync&lt;/b&gt;(getRawName(), LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;local val = redis.call(&#39;get&#39;, KEYS[3]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if val ~= false then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return tonumber(val);&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[3]) == 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local counter = redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[3], -1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (counter &amp;gt; 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[2]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[3], 0, &#39;px&#39;, ARGV[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 0; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;else &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;del&#39;, KEYS[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(ARGV[4], KEYS[2], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[3], 1, &#39;px&#39;, ARGV[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 1; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot;,&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Arrays.asList(getRawName(), getChannelName(), &lt;b&gt;getUnlockLatchName&lt;/b&gt;(requestId)), &lt;font color=&quot;#007fff&quot;&gt;//KEYS&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; LockPubSub.&lt;b&gt;UNLOCK_MESSAGE&lt;/b&gt;, &lt;b&gt;internalLockLeaseTime&lt;/b&gt;,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;getLockName&lt;/b&gt;(threadId), getSubscribeService().getPublishCommand(), timeout);&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//ARGVS&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="3080" y="460" width="440" height="300" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="dYNV18oPOYucMmK5HlVg-50" target="LtS7gfKAsIHDJF8mLO0w-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-11" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="LtS7gfKAsIHDJF8mLO0w-10">
          <mxGeometry x="-0.1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-50" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;ExpirationEntry entry = new ExpirationEntry();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;ExpirationEntry oldEntry = &lt;b&gt;EXPIRATION_RENEWAL_MAP&lt;/b&gt;.&lt;b&gt;putIfAbsent&lt;/b&gt;(getEntryName(), entry);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;if (&lt;b&gt;oldEntry != null&lt;/b&gt;) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; oldEntry.addThreadId(threadId);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;} else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; entry.addThreadId(threadId);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//1 内部通过 ServiceManager 注册一个自动续约的超时任务，延迟&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;internalLockLeaseTime / 3&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ms后执行，每次执行自动续约逻辑会调用自己再注册一个超时任务，这样就可以一直续约下去&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;解锁时会取消续约&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;renewExpiration&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (Thread.currentThread().isInterrupted()) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cancelExpirationRenewal(threadId, null); &lt;font color=&quot;#007fff&quot;&gt;//线程被中断就取消自动续约任务&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=6;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="3080" y="780" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-57" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-53" target="dYNV18oPOYucMmK5HlVg-56" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-53" value="&lt;div&gt;&lt;div&gt;return pubSub.&lt;b&gt;subscribe&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;getEntryName(), getChannelName());&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;entryName 是 ServiceManager的&lt;b&gt;id:lock-1&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;订阅的主题是 &lt;b&gt;redisson_lock__channel:{lock-1}&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="2120" y="710" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-65" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-56" target="dYNV18oPOYucMmK5HlVg-64" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-66" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-65" vertex="1" connectable="0">
          <mxGeometry x="0.8286" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-73" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.002;exitY=0.914;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitPerimeter=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="dYNV18oPOYucMmK5HlVg-56" target="dYNV18oPOYucMmK5HlVg-70" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-74" value="唤醒" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-73" vertex="1" connectable="0">
          <mxGeometry x="-0.5262" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-56" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//获取PublishSubscribeService locks 中的一个锁（令牌数量为1的信号量就是锁）&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;AsyncSemaphore &lt;b&gt;semaphore&lt;/b&gt; = service.getSemaphore(new ChannelName(channelName));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//这里E泛型是&amp;nbsp;RedissonLockEntry，通过这个CompletableFuture 实例将下面创建的 RedissonLockEntry 返回&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletableFuture&amp;lt;E&amp;gt; &lt;b&gt;newPromise&lt;/b&gt; = new CompletableFuture&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;semaphore.acquire().thenAccept(c -&amp;gt; {&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//同步订阅操作&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (newPromise.isDone()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; semaphore.release();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; E entry = &lt;b&gt;entries&lt;/b&gt;.get(entryName);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; if (entry != null) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.&lt;b&gt;acquire&lt;/b&gt;();&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; semaphore.release();&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry.getPromise().whenComplete((r, e) -&amp;gt; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e != null) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newPromise.completeExceptionally(e);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newPromise.&lt;b&gt;complete&lt;/b&gt;(r);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //创建&amp;nbsp;RedissonLockEntry&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; E value = &lt;b&gt;createEntry&lt;/b&gt;(newPromise);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; value.acquire();&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//将RedissonLockEntry&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;counter++&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; E oldValue = &lt;b&gt;entries&lt;/b&gt;.&lt;b&gt;putIfAbsent&lt;/b&gt;(entryName, value);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#3333ff&quot;&gt; if (oldValue != null) { //加了同步控制不太可能不为null吧&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; oldValue.acquire();&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; semaphore.release();&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; oldValue.getPromise().whenComplete((r, e) -&amp;gt; {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e != null) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newPromise.completeExceptionally(e);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newPromise.complete(r);&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#3333ff&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //1 创建发布订阅监听器并注册，订阅的主题是&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;redisson_lock__channel:{lock-1}&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; RedisPubSubListener&amp;lt;Object&amp;gt; listener = &lt;b&gt;createListener&lt;/b&gt;(&lt;b&gt;channelName&lt;/b&gt;, value);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; //订阅方法逻辑参考发布订阅分析&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; CompletableFuture&amp;lt;PubSubConnectionEntry&amp;gt; s = &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;service.&lt;b&gt;subscribeNoTimeout&lt;/b&gt;(LongCodec.INSTANCE, &lt;b&gt;channelName&lt;/b&gt;, semaphore, listener);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; newPromise.whenComplete((r, e) -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; s.completeExceptionally(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; s.whenComplete((r, e) -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entries.&lt;b&gt;remove&lt;/b&gt;(entryName);&lt;font color=&quot;#007fff&quot;&gt;//订阅成功后从entries中删除，说明entries就是一个待注册的监听器容器&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.getPromise().completeExceptionally(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.getPromise().&lt;b&gt;complete&lt;/b&gt;(value); &lt;font color=&quot;#007fff&quot;&gt;//订阅成功后返回 RedissonLockEntry&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;});&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;return &lt;b&gt;newPromise&lt;/b&gt;;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="2360" y="710" width="440" height="770" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-61" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-60" target="dYNV18oPOYucMmK5HlVg-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-60" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;LockPubSub &lt;/b&gt;extends PublishSubscribe&amp;lt;RedissonLockEntry&amp;gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;用于实现分布式锁的发布订阅逻辑封装&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;在 PublishSubscribe 基础上重写了 createEntry() onMessage() 这两个protected方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final Long UNLOCK_MESSAGE = 0L;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final Long READ_UNLOCK_MESSAGE = 1L;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;//用于自定义订阅回调&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected abstract void onMessage(E value, Long message);&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1760" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-62" value="LockPubSub" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2535" y="680" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-64" value="&lt;div&gt;&lt;font color=&quot;#3333ff&quot;&gt;//这里是左边注册的回调逻辑&lt;/font&gt;&lt;/div&gt;&lt;div&gt;protected void &lt;b&gt;onMessage&lt;/b&gt;(RedissonLockEntry value, Long message) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (message.equals(&lt;b&gt;UNLOCK_MESSAGE&lt;/b&gt;)) { &lt;font color=&quot;#3333ff&quot;&gt;//解锁消息&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#3333ff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;//从 RedissonLockEntry listeners 中 poll 一个执行 run()&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.&lt;b&gt;tryRunListener&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//RedissonLockEntry latch ++&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.&lt;b&gt;getLatch().release()&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else if (message.equals(&lt;b&gt;READ_UNLOCK_MESSAGE&lt;/b&gt;)) { &lt;font color=&quot;#3333ff&quot;&gt;//解读&lt;span style=&quot;background-color: initial;&quot;&gt;锁消息&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;//遍历 RedissonLockEntry listeners 中所有listener 执行 run()&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.&lt;b&gt;tryRunAllListeners&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value.&lt;b&gt;getLatch().release(value.getLatch().getQueueLength())&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;fillColor=#fff2cc;strokeColor=#d6b656;arcSize=6;" parent="1" vertex="1">
          <mxGeometry x="2840" y="1139" width="440" height="181" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-67" value="LockPubSub" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3015" y="1109" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-70" value="&lt;div&gt;&lt;div&gt;entry = commandExecutor.get(future);&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;内部调用 future.get()&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;阻塞等待CF完成&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="2120" y="1520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-80" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-77" target="dYNV18oPOYucMmK5HlVg-79" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-77" value="get(&lt;b&gt;unlockAsync&lt;/b&gt;(&lt;br&gt;Thread.currentThread().getId()));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;get() 是同步获取解锁结果&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-82" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-79" target="dYNV18oPOYucMmK5HlVg-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-79" value="return getServiceManager().execute(() -&amp;gt; &lt;b&gt;unlockAsync0&lt;/b&gt;(threadId));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;异步解锁&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1640" y="1600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-84" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="dYNV18oPOYucMmK5HlVg-81" target="dYNV18oPOYucMmK5HlVg-83" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-88" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-84" vertex="1" connectable="0">
          <mxGeometry x="0.6738" y="4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="dYNV18oPOYucMmK5HlVg-81" target="LtS7gfKAsIHDJF8mLO0w-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-3" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="LtS7gfKAsIHDJF8mLO0w-2">
          <mxGeometry x="0.9143" y="-3" relative="1" as="geometry">
            <mxPoint y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-81" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//1 执行Lua脚本和命令释放锁&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletionStage&amp;lt;Boolean&amp;gt; future = &lt;b style=&quot;font-size: 10px;&quot;&gt;unlockInnerAsync&lt;/b&gt;(threadId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletionStage&amp;lt;Void&amp;gt; f = future.&lt;b style=&quot;font-size: 10px;&quot;&gt;handle&lt;/b&gt;((res, e) -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//2 取消掉自动续约&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;cancelExpirationRenewal&lt;/b&gt;(threadId, res);&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;});&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;return new CompletableFutureWrapper&amp;lt;&amp;gt;(f);&lt;/div&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;异步解锁&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1880" y="1600" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-83" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;String id = getServiceManager().generateId();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;MasterSlaveServersConfig config = getServiceManager().getConfig();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;int timeout = (config.getTimeout() + config.getRetryInterval()) * config.getRetryAttempts();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;timeout = Math.max(timeout, 1);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//1 通过Lua脚本 &lt;b&gt;释放锁&lt;/b&gt;，并&lt;b&gt;发布解锁消息&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;RFuture&amp;lt;Boolean&amp;gt; r = &lt;b&gt;unlockInnerAsync&lt;/b&gt;(threadId, id, timeout); &lt;font color=&quot;#007fff&quot;&gt;//返回1解锁成功，0只是降低重入&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;CompletionStage&amp;lt;Boolean&amp;gt; ff = r.thenApply(v -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; CommandAsyncExecutor ce = commandExecutor;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (ce instanceof CommandBatchService) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ce = new CommandBatchService(commandExecutor);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //2 异步发送命令 “&lt;b&gt;del&amp;nbsp;redisson_unlock_latch:{lock-1:id}&lt;/b&gt;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ce.&lt;b&gt;writeAsync&lt;/b&gt;(getRawName(), LongCodec.INSTANCE, RedisCommands.DEL, &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;getUnlockLatchName(id));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (ce instanceof CommandBatchService) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((CommandBatchService) ce).executeAsync();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;v&lt;/b&gt;;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;});&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;return new CompletableFutureWrapper&amp;lt;&amp;gt;(ff);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="2360" y="1600" width="440" height="260" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-90" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.7;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;exitPerimeter=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-46" target="dYNV18oPOYucMmK5HlVg-64" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="3280" y="1802.5" as="sourcePoint" />
            <Array as="points">
              <mxPoint x="3530" y="670" />
              <mxPoint x="3530" y="1162" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-91" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;发布解锁消息，&lt;br&gt;解锁消息是Long型的0&lt;br&gt;&lt;/font&gt;" style="edgeLabel;html=1;align=left;verticalAlign=middle;resizable=0;points=[];" parent="dYNV18oPOYucMmK5HlVg-90" vertex="1" connectable="0">
          <mxGeometry x="-0.9479" y="-1" relative="1" as="geometry">
            <mxPoint x="1" y="31" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-87" value="RedissonBaseLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1675" y="1570" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-92" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;exists&amp;nbsp; lock-1&lt;br&gt;hexists lock-1 &amp;lt;threadId&amp;gt;&lt;br&gt;&lt;b&gt;hincrby&amp;nbsp;lock-1 &amp;lt;threadId&amp;gt; 1&lt;/b&gt;&lt;br&gt;&lt;b&gt;pexpire&amp;nbsp;lock-1 &amp;lt;leaseTime&amp;gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;pttl lock-1&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3540" y="300" width="240" height="140" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-93" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;get &amp;lt;requetId&amp;gt;&lt;/b&gt;&amp;nbsp; &amp;nbsp;//requestId 是用ServiceManager 生成的 UUID&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;hexists lock-1 &amp;lt;threadId&amp;gt;&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;hincrby lock-1&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;lt;threadId&amp;gt; -1&lt;/b&gt;&lt;br&gt;counter &amp;gt; 0 说明是多次重入（只是减少了一次重入计数，并不是真正释放锁）&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;pexpire lock-1 &amp;lt;internalLockLeaseTime&amp;gt;&lt;br&gt;set&amp;nbsp;redisson_unlock_latch:{lock-1:&amp;lt;&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;border-color: var(--border-color); color: rgb(0, 127, 255);&quot;&gt;requetId&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;gt;} 0 px &amp;lt;timeout&amp;gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;counter &amp;lt;= 0 解锁成功：&lt;br&gt;&lt;b&gt;del&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;lock-1&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;publish redisson_lock__channel:{lock-1} 0&amp;nbsp;&lt;/b&gt; //&amp;nbsp;0是解锁的意思，解锁回调会给 RedissonLockEntry.latch++&lt;br&gt;&lt;b&gt;set redisson_unlock_latch:{lock-1:&amp;lt;requetId&amp;gt;} 0 px &amp;lt;timeout&amp;gt;&amp;nbsp;&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3541" y="480" width="539" height="210" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-1" value="&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;cancelExpirationRenewal&lt;/b&gt;(&lt;br&gt;threadId, res);&amp;nbsp;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;取消自动续约&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="2360" y="1880" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="LtS7gfKAsIHDJF8mLO0w-5" target="LtS7gfKAsIHDJF8mLO0w-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-5" value="Timeout task = getServiceManager().newTimeout(new TimerTask() {&lt;br&gt;&amp;nbsp; &amp;nbsp; ...&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //发送Lua脚本执行续约&lt;/font&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;CompletionStage&amp;lt;Boolean&amp;gt; future = &lt;b&gt;renewExpirationAsync&lt;/b&gt;(threadId);&lt;br&gt;&amp;nbsp; &amp;nbsp; ...&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;" vertex="1" parent="1">
          <mxGeometry x="3560" y="850" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="LtS7gfKAsIHDJF8mLO0w-6" value="&lt;div&gt;return evalWriteSyncedAsync(getRawName(), LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt;&quot;if (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]) == 1) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 1; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 0;&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Collections.singletonList(getRawName()),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; internalLockLeaseTime, getLockName(threadId));&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="4000" y="820" width="400" height="140" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="eGQscOvwRYNp3SZoV_GP" name="RedissonReadWriteLock">
    <mxGraphModel dx="3088" dy="-290" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-2" target="nCa2Bj8YOzRUgJI6Qu_I-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-2" value="RedissonReadWriteLock" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="40" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-4" target="nCa2Bj8YOzRUgJI6Qu_I-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-4" value="RedissonReadWriteLockTest#&lt;br style=&quot;font-size: 11px;&quot;&gt;testRWLockUnlock()&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;创建两个线程，一个多次读（每次读加读锁），一个先读后写（读时加读锁，写时加写锁）&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="280" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-6" target="nCa2Bj8YOzRUgJI6Qu_I-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-19" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-6" target="nCa2Bj8YOzRUgJI6Qu_I-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-6" value="RReadWriteLock rwLock = redisson.getReadWriteLock(&quot;lock-rw&quot;);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="520" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-8" target="nCa2Bj8YOzRUgJI6Qu_I-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-8" target="Keo2UcvNxaGDYnBjSey5-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-8" value="RLock rLock = rwLock.readLock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="520" y="1360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-10" target="nCa2Bj8YOzRUgJI6Qu_I-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-10" target="Keo2UcvNxaGDYnBjSey5-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-10" value="RLock wLock = rwLock.writeLock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="520" y="1440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-12" target="nCa2Bj8YOzRUgJI6Qu_I-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-12" target="XMJwmoDdZTX_D4IhNOn0-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-12" value="rLock.unlock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="1640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-14" target="nCa2Bj8YOzRUgJI6Qu_I-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-14" target="1C8W97YoHMhPApq2HqQs-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-14" value="wLock.lock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="2660" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-15" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-16" target="nCa2Bj8YOzRUgJI6Qu_I-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-16" target="XMJwmoDdZTX_D4IhNOn0-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-16" value="rLock.lock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="1540" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="nCa2Bj8YOzRUgJI6Qu_I-17" target="1C8W97YoHMhPApq2HqQs-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-17" value="wLock.unlock();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="2760" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nCa2Bj8YOzRUgJI6Qu_I-18" value="return new &lt;b&gt;RedissonReadWriteLock&lt;/b&gt;(&lt;br&gt;commandExecutor, name);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="hoS6UmTI4-DL8qWvyoiX-1" target="CeLp3w2RrOelHFvfpKlE-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-580" y="1540" />
              <mxPoint x="-240" y="1540" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="hoS6UmTI4-DL8qWvyoiX-1" target="CeLp3w2RrOelHFvfpKlE-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hoS6UmTI4-DL8qWvyoiX-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RedissonReadWriteLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;内部依赖 RedissonReadLock RedissonWriteLock 实现&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//方法内创建 RedissonReadLock&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public RLock readLock()&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//方法内创建 RedissonWriteLock&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public RLock writeLock()&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1560" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="CeLp3w2RrOelHFvfpKlE-1" target="Keo2UcvNxaGDYnBjSey5-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonExpirable (A)&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;extends RedissonObject implements RExpirable&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;拓展超时方法实现，由于Redisson大部分对象都需要支持超时方法，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;Redisson大部分对象类都继承此类&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1400" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="CeLp3w2RrOelHFvfpKlE-3" target="CeLp3w2RrOelHFvfpKlE-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-3" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;RReadWriteLock&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RLock readLock();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RLock writeLock();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1440" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="CeLp3w2RrOelHFvfpKlE-5" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ReadWriteLock&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Lock readLock();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Lock writeLock();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1320" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonObject (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//命令异步执行器，其实封装了&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;CommandAsyncExecutor&lt;/b&gt; &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象名字&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected String &lt;b&gt;name&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象使用的编解码器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final Codec &lt;b&gt;codec&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1200" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-4" value="return new &lt;b&gt;RedissonReadLock&lt;/b&gt;(&lt;br&gt;commandExecutor, getName());" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="1360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-5" value="return new &lt;b&gt;RedissonWriteLock&lt;/b&gt;(&lt;br&gt;commandExecutor, getName());" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="1440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="Keo2UcvNxaGDYnBjSey5-8" target="Bzvi4axgJ0h4EuhYmm7J-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-8" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RedissonReadLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;依赖 RedissonLock 实现，仅仅重写了加锁解锁以及续约锁命名、订阅主题等的方法&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;String &lt;b&gt;getChannelName&lt;/b&gt;()&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;protected String &lt;b&gt;getLockName&lt;/b&gt;(long threadId)&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; RFuture&amp;lt;T&amp;gt; &lt;b&gt;tryLockInnerAsync&lt;/b&gt;(long waitTime, long leaseTime, TimeUnit unit, long threadId, RedisStrictCommand&amp;lt;T&amp;gt; command)&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;protected RFuture&amp;lt;Boolean&amp;gt; &lt;b&gt;unlockInnerAsync&lt;/b&gt;(long threadId, String requestId, int timeout)&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;protected CompletionStage&amp;lt;Boolean&amp;gt; &lt;b&gt;renewExpirationAsync&lt;/b&gt;(long threadId)&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;public RFuture&amp;lt;Boolean&amp;gt; &lt;b&gt;forceUnlockAsync&lt;/b&gt;()&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="2080" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="Keo2UcvNxaGDYnBjSey5-9" target="Bzvi4axgJ0h4EuhYmm7J-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Keo2UcvNxaGDYnBjSey5-9" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RedissonWriteLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;依赖 RedissonLock 实现，仅仅重写了加锁解锁以及续约锁命名、订阅主题等的方法&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String &lt;b style=&quot;&quot;&gt;getChannelName&lt;/b&gt;()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected String &lt;b&gt;getLockName&lt;/b&gt;(long threadId)&lt;br&gt;&amp;lt;T&amp;gt; RFuture&amp;lt;T&amp;gt; &lt;b&gt;tryLockInnerAsync&lt;/b&gt;(long waitTime, long leaseTime, TimeUnit unit, long threadId, RedisStrictCommand&amp;lt;T&amp;gt; command)&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected RFuture&amp;lt;Boolean&amp;gt; &lt;b&gt;unlockInnerAsync&lt;/b&gt;(long threadId, String requestId, int timeout)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected CompletionStage&amp;lt;Boolean&amp;gt; &lt;b&gt;renewExpirationAsync&lt;/b&gt;(long threadId)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public RFuture&amp;lt;Boolean&amp;gt; &lt;b&gt;forceUnlockAsync&lt;/b&gt;()&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-880" y="2080" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="Bzvi4axgJ0h4EuhYmm7J-1" target="CeLp3w2RrOelHFvfpKlE-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonBaseLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;锁相关对象的基本抽象类，锁相关的大部分类都继承此抽象类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final ConcurrentMap&amp;lt;String, ExpirationEntry&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;EXPIRATION_RENEWAL_MAP&lt;/b&gt; = new ConcurrentHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//默认30s&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b&gt;internalLockLeaseTime&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对应的ServiceManager id (是UUID), 可能后面逻辑哪里可能需要获取ServiceManager&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;id&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//id + &quot;:&quot; + name&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;entryName&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自Redisson commandExecutor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final RedisCommand&amp;lt;Integer&amp;gt; &lt;b&gt;HGET&lt;/b&gt; = new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;RedisCommand(&quot;HGET&quot;, new MapValueDecoder(), new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;IntegerReplayConvertor(0));&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1560" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="Bzvi4axgJ0h4EuhYmm7J-2" target="Bzvi4axgJ0h4EuhYmm7J-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Bzvi4axgJ0h4EuhYmm7J-2" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;基本的可重入锁实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//默认30s&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b style=&quot;background-color: initial;&quot;&gt;internalLockLeaseTime&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自PublishSubscribeService lockPubSub&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;LockPubSub&lt;/b&gt; &lt;b&gt;pubSub&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1880" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-1" value="&lt;b&gt;RedissonReadWriteLock&lt;/b&gt; 依赖 &lt;b&gt;RedissonReadLock&lt;/b&gt;、&lt;b&gt;RedissonWriteLock&lt;/b&gt;，&lt;br&gt;而这两个类又依赖 &lt;b&gt;RedissonLock&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="40" y="1200" width="440" height="40" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-11" value="..." style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="XMJwmoDdZTX_D4IhNOn0-2" target="XMJwmoDdZTX_D4IhNOn0-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-2" value="lock(-1, null, false);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现参考RedissonLock流程图&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="1540" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-4" value="RedissonLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="810" y="1510" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-13" value="..." style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="XMJwmoDdZTX_D4IhNOn0-5" target="XMJwmoDdZTX_D4IhNOn0-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-5" value="get(unlockAsync(&lt;br&gt;Thread.currentThread().getId()));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现参考RedissonLock流程图&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="1640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-6" value="RedissonBaseLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="795" y="1610" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-8" value="&lt;b style=&quot;font-size: 11px;&quot;&gt;读读不互斥，读写互斥、写写互斥怎么实现的？&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;Redisson读写锁实现很简单，基本完全依赖 RedissonLock，仅仅重写了少量方法。&lt;br style=&quot;font-size: 11px;&quot;&gt;看源码可以发现区别就是在被重写的方法的 Lua 脚本中。&lt;br style=&quot;font-size: 11px;&quot;&gt;读写锁同样使用 Hash 数据类型实现，KEY是锁名，VALUE是2-3组KV；&lt;br&gt;读锁额外需要 String 数据类型记录线程自己加的哪个重入计数的读锁, 以便解读锁时使用。&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;第1组KV记录&lt;b&gt;锁的模式&lt;/b&gt;（只有读锁时是read模式、有写锁时是write模式）:&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;hset lock-rw mode read&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;读锁实现：&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;读锁之间不互斥，有线程加了读锁，其他线程也可以继续加读锁，只需要增加重入计数&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;hset lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt; &amp;lt;reentantCount&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;但是解读锁时只能解自己加的读锁，就需要额外记录下自己加的哪个重入计数的读锁&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;set {lock-rw}:&amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:rwlock_timeout:&amp;lt;reentrantCount&amp;gt; 1&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;写锁实现：&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;已经存在任意读锁或写锁，且加写锁的线程不是当前线程都不能加写锁&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;hset lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:write &amp;lt;reentantCount&amp;gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="40" y="1360" width="460" height="240" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="XMJwmoDdZTX_D4IhNOn0-10" target="pH-ef3WtU6VLe0I9tWm4-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-10" value="&lt;div&gt;ttlRemainingFuture = &lt;br&gt;tryLockInnerAsync(...&lt;span style=&quot;background-color: initial;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1540" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="XMJwmoDdZTX_D4IhNOn0-12" target="pH-ef3WtU6VLe0I9tWm4-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="XMJwmoDdZTX_D4IhNOn0-12" value="&lt;div&gt;CompletionStage&amp;lt;Boolean&amp;gt; future = unlockInnerAsync(threadId);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1640" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-1" value="..." style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="1C8W97YoHMhPApq2HqQs-2" target="1C8W97YoHMhPApq2HqQs-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-2" value="lock(-1, null, false);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现参考RedissonLock流程图&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="2660" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-3" value="RedissonLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="810" y="1710" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-4" value="..." style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="1C8W97YoHMhPApq2HqQs-5" target="1C8W97YoHMhPApq2HqQs-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-5" value="get(unlockAsync(&lt;br&gt;Thread.currentThread().getId()));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现参考RedissonLock流程图&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="2760" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-6" value="RedissonBaseLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="795" y="2730" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="1C8W97YoHMhPApq2HqQs-7" target="pH-ef3WtU6VLe0I9tWm4-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-7" value="&lt;div&gt;ttlRemainingFuture = &lt;br&gt;tryLockInnerAsync(...&lt;span style=&quot;background-color: initial;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="2660" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="1C8W97YoHMhPApq2HqQs-8" target="pH-ef3WtU6VLe0I9tWm4-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="1C8W97YoHMhPApq2HqQs-8" value="&lt;div&gt;CompletionStage&amp;lt;Boolean&amp;gt; future = unlockInnerAsync(threadId);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="2760" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;return commandExecutor.syncedEval(getRawName(), LongCodec.INSTANCE, command,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &amp;nbsp; &quot;local mode = redis.call(&#39;hget&#39;, KEYS[1], &#39;mode&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (mode == false) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hset&#39;, KEYS[1], &#39;mode&#39;, &#39;read&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hset&#39;, KEYS[1], ARGV[2], 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[2] .. &#39;:1&#39;, 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[2] .. &#39;:1&#39;, ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (mode == &#39;read&#39;) or (mode == &#39;write&#39; and redis.call(&#39;hexists&#39;, KEYS[1], ARGV[3]) == 1) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local ind = redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], 1); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local key = KEYS[2] .. &#39;:&#39; .. ind;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, key, 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, key, ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local remainTime = redis.call(&#39;pttl&#39;, KEYS[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], math.max(remainTime, ARGV[1])); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return redis.call(&#39;pttl&#39;, KEYS[1]);&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Arrays.&amp;lt;Object&amp;gt;asList(&lt;b&gt;getRawName&lt;/b&gt;(), &lt;b&gt;getReadWriteTimeoutNamePrefix&lt;/b&gt;(threadId)), &lt;font color=&quot;#007fff&quot;&gt;//KEYS&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; unit.toMillis(&lt;b&gt;leaseTime&lt;/b&gt;), &lt;b&gt;getLockName&lt;/b&gt;(threadId), &lt;b&gt;getWriteLockName&lt;/b&gt;(threadId)); &lt;font color=&quot;#007fff&quot;&gt;//ARGVS&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1241" y="1280" width="479" height="320" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-3" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;String timeoutPrefix = getReadWriteTimeoutNamePrefix(threadId);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;String keyPrefix = getKeyPrefix(threadId, timeoutPrefix);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;return evalWriteSyncedAsync(getRawName(), LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&quot;local val = redis.call(&#39;get&#39;, KEYS[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if val ~= false then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return tonumber(val);&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;local mode = redis.call(&#39;hget&#39;, KEYS[1], &#39;mode&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (mode == false) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(ARGV[3], KEYS[2], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[5], 1, &#39;px&#39;, ARGV[4]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 1; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;local lockExists = redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (lockExists == 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;local counter = redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], -1); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (counter == 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hdel&#39;, KEYS[1], ARGV[2]); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;del&#39;, KEYS[3] .. &#39;:&#39; .. (counter+1)); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (redis.call(&#39;hlen&#39;, KEYS[1]) &amp;gt; 1) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local maxRemainTime = -3; &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local keys = redis.call(&#39;hkeys&#39;, KEYS[1]); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;for n, key in ipairs(keys) do &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;counter = tonumber(redis.call(&#39;hget&#39;, KEYS[1], key)); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if type(counter) == &#39;number&#39; then &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;for i=counter, 1, -1 do &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local remainTime = redis.call(&#39;pttl&#39;, KEYS[4] .. &#39;:&#39; .. key .. &#39;:rwlock_timeout:&#39; .. i); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;maxRemainTime = math.max(remainTime, maxRemainTime);&quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if maxRemainTime &amp;gt; 0 then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], maxRemainTime); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[5], 0, &#39;px&#39;, ARGV[4]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 0; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end;&quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if mode == &#39;write&#39; then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[5], 0, &#39;px&#39;, ARGV[4]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 0;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;del&#39;, KEYS[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;redis.call(ARGV[3], KEYS[2], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[5], 1, &#39;px&#39;, ARGV[4]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;return 1; &quot;,&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Arrays.&amp;lt;Object&amp;gt;asList(getRawName(), getChannelName(), timeoutPrefix, keyPrefix, getUnlockLatchName(requestId)),&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; LockPubSub.UNLOCK_MESSAGE, getLockName(threadId), getSubscribeService().getPublishCommand(), timeout);&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1241" y="1640" width="479" height="760" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-5" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;return commandExecutor.syncedEval(getRawName(), LongCodec.INSTANCE, command,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&quot;local mode = redis.call(&#39;hget&#39;, KEYS[1], &#39;mode&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (mode == false) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hset&#39;, KEYS[1], &#39;mode&#39;, &#39;write&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hset&#39;, KEYS[1], ARGV[2], 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;if (mode == &#39;write&#39;) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]) == 1) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], 1); &quot; +&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local currentExpire = redis.call(&#39;pttl&#39;, KEYS[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], currentExpire + ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;return redis.call(&#39;pttl&#39;, KEYS[1]);&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Arrays.&amp;lt;Object&amp;gt;asList(getRawName()),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; unit.toMillis(leaseTime), getLockName(threadId));&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1241" y="2440" width="479" height="320" as="geometry" />
        </mxCell>
        <mxCell id="pH-ef3WtU6VLe0I9tWm4-7" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;return evalWriteSyncedAsync(getRawName(), LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&quot;local val = redis.call(&#39;get&#39;, KEYS[3]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if val ~= false then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return tonumber(val);&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local mode = redis.call(&#39;hget&#39;, KEYS[1], &#39;mode&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (mode == false) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(ARGV[4], KEYS[2], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[3], 1, &#39;px&#39;, ARGV[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 1; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (mode == &#39;write&#39;) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local lockExists = redis.call(&#39;hexists&#39;, KEYS[1], ARGV[3]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (lockExists == 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return nil;&quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;else &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local counter = redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[3], -1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (counter &amp;gt; 0) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[2]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[3], 0, &#39;px&#39;, ARGV[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 0; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;else &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hdel&#39;, KEYS[1], ARGV[3]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;if (redis.call(&#39;hlen&#39;, KEYS[1]) == 1) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;del&#39;, KEYS[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(ARGV[4], KEYS[2], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;else &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // has unlocked read-locks&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hset&#39;, KEYS[1], &#39;mode&#39;, &#39;read&#39;); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;set&#39;, KEYS[3], 1, &#39;px&#39;, ARGV[5]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return 1; &quot;+&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;end; &quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; + &quot;return nil;&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Arrays.&amp;lt;Object&amp;gt;asList(getRawName(), getChannelName(), getUnlockLatchName(requestId)),&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; LockPubSub.READ_UNLOCK_MESSAGE, internalLockLeaseTime, getLockName(threadId), getSubscribeService().getPublishCommand(), timeout);&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="1241" y="2800" width="479" height="560" as="geometry" />
        </mxCell>
        <mxCell id="0Ggkvq602cG6rRDYgfUz-1" value="&lt;font color=&quot;#007fff&quot;&gt;hget lock-rw mode&lt;br&gt;//没有加锁&lt;br&gt;&lt;b&gt;hset lock-rw mode read&lt;br&gt;hset lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt; 1&lt;/b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//设置锁占用线程以及重入次数&lt;br&gt;&lt;b&gt;set {lock-rw}:&amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:rwlock_timeout:1 1&lt;/b&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;//?&lt;br&gt;pexpire {lock-rw}:&amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:rwlock_timeout:1 &amp;lt;leaseTime&amp;gt;&lt;br&gt;pexpire lock-rw &amp;lt;leaseTime&amp;gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;//已经加锁，(读锁) 或者 (写锁且 hexists lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:write 为true，即当前线程已占用写锁)&lt;br&gt;hincrby lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt; 1&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;set&amp;nbsp;&amp;nbsp;{lock-rw}:&amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:rwlock_timeout:&amp;lt;ind&amp;gt; 1&lt;br&gt;pexpire {lock-rw}:&amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:rwlock_timeout:&amp;lt;ind&amp;gt; &amp;lt;leaseTime&amp;gt;&lt;br&gt;pttl lock-rw&lt;br&gt;pexpire lock-rw &amp;lt;math.max(remainTime,leaseTime)&amp;gt;&lt;br&gt;&lt;div&gt;//已经加锁，但不是读锁且写锁也不是被当前线程占用的&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pttl lock-rw&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1740" y="1320" width="620" height="220" as="geometry" />
        </mxCell>
        <mxCell id="0Ggkvq602cG6rRDYgfUz-2" value="&lt;font color=&quot;#007fff&quot;&gt;hget lock-rw mode&lt;br&gt;//没有加锁&lt;br&gt;&lt;b&gt;hset lock-rw mode write&lt;br&gt;hset lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:write 1&lt;/b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//设置锁占用线程以及重入次数&lt;br&gt;&lt;b&gt;pexpire lock-rw &amp;lt;leaseTime&amp;gt;&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;//已经加锁，写锁且 hexists lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:write 为true，即当前线程已占用写锁&lt;br&gt;&lt;b&gt;hincrby lock-rw &amp;lt;ServiceManager ID&amp;gt;:&amp;lt;threadId&amp;gt;:write 1&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/b&gt;pttl lock-rw&lt;br&gt;&lt;b&gt;pexpire lock-rw &amp;lt;math.max(remainTime,leaseTime)&amp;gt;&lt;br&gt;&lt;/b&gt;&lt;br&gt;//已经加锁但是不是当前线程占用的锁&lt;br&gt;pttl lock-rw&lt;br&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1740" y="2500" width="620" height="220" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="0omL4qdwJT3E1ZYZ94oM" name="RedissonFencedLock">
    <mxGraphModel dx="1434" dy="-290" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="GXVI5HAIazDNPrltJS_A-1" value="&lt;b&gt;RedissonFencedLock&amp;nbsp;也依赖&amp;nbsp;RedissonLock 实现，主要流程和 RedissonLock 相同。&lt;/b&gt;&lt;br&gt;这里只关注拓展以及重写的部分。" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="40" y="1200" width="500" height="40" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-2" target="v25ogsEL4n66i7TNQ_CB-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-2" value="RedissonFencedLock" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=12;" vertex="1" parent="1">
          <mxGeometry x="40" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-4" target="v25ogsEL4n66i7TNQ_CB-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-4" value="RedissonFencedLockTest#&lt;br style=&quot;font-size: 11px;&quot;&gt;testLockUnlock()&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;创建一个包含100固定线程的线程池，提交10W个FencedLock同步的任务&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="280" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-7" target="v25ogsEL4n66i7TNQ_CB-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-7" target="v25ogsEL4n66i7TNQ_CB-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-7" value="RFencedLock lock = redisson.&lt;b style=&quot;font-size: 11px;&quot;&gt;getFencedLock&lt;/b&gt;(&quot;lock&quot;);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="520" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="ZQmk_gCC5b-BUXqnwlUP-5" target="v25ogsEL4n66i7TNQ_CB-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-10" target="v25ogsEL4n66i7TNQ_CB-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-10" value="Long token = lock.&lt;b&gt;lockAndGetToken&lt;/b&gt;(1000, TimeUnit.MILLISECONDS);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="520" y="1380" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-13" target="v25ogsEL4n66i7TNQ_CB-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-13" value="finally:&lt;br&gt;lock.&lt;b style=&quot;font-size: 11px;&quot;&gt;unlock&lt;/b&gt;();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="520" y="1600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-19" value="return new &lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonFencedLock&lt;/b&gt;(&lt;br style=&quot;font-size: 11px;&quot;&gt;commandExecutor, name);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="760" y="1280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="KQztjSwfIuCf9p3Tmu93-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-20" target="KQztjSwfIuCf9p3Tmu93-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="KQztjSwfIuCf9p3Tmu93-3" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="KQztjSwfIuCf9p3Tmu93-2">
          <mxGeometry x="-0.05" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-20" value="return get(lockAndGetTokenAsync());&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;加锁逻辑和 RedissonLock 差别不大，仅仅是多返回了一个Token&lt;br&gt;(详细流程参考RedissonLock)&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="760" y="1380" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-21" value="get(unlockAsync(&lt;br&gt;Thread.currentThread().getId()));&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;后面和RedissonLock一样&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="760" y="1600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="v25ogsEL4n66i7TNQ_CB-26" value="&lt;b&gt;和 RedissonLock 对比：&lt;br&gt;&lt;/b&gt;RedissonLock 加锁成功没有返回值，RedissonFencedLock 有返回栅栏令牌（fencing token）。&lt;br&gt;RedissonFencedLock 加锁只是比 RedissonLock 多了一句 &quot;&lt;b&gt;incr redisson_lock_token:{&amp;lt;lockName&amp;gt;}&lt;/b&gt;“&lt;br&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="40" y="1360" width="460" height="120" as="geometry" />
        </mxCell>
        <mxCell id="a66co6WNFgm25bbfFoId-1" value="RedissonFencedLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="795" y="1350" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="KQztjSwfIuCf9p3Tmu93-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;return commandExecutor.syncedEval(getRawName(), LongCodec.INSTANCE, RedisCommands.EVAL_LONG_LIST,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&quot;if (redis.call(&#39;exists&#39;, KEYS[1]) == 0 &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;or (redis.call(&#39;hexists&#39;, KEYS[1], ARGV[2]) == 1)) then &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;local token = redis.call(&#39;incr&#39;, KEYS[2]);&quot; +&amp;nbsp; //和RedissonLock对比Lua脚本只是多了这一句&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;hincrby&#39;, KEYS[1], ARGV[2], 1); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;redis.call(&#39;pexpire&#39;, KEYS[1], ARGV[1]); &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;return {-1, token}; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;end; &quot; +&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;return {redis.call(&#39;pttl&#39;, KEYS[1]), -1};&quot;,&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//加锁失败&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Arrays.asList(getRawName(), tokenName),&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; unit.toMillis(leaseTime), getLockName(threadId));&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;fillColor=#fff2cc;strokeColor=#d6b656;arcSize=7;" vertex="1" parent="1">
          <mxGeometry x="1000" y="1330" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="ZQmk_gCC5b-BUXqnwlUP-2" value="RedissonBaseLock" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="800" y="1570" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZQmk_gCC5b-BUXqnwlUP-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" edge="1" parent="1" source="v25ogsEL4n66i7TNQ_CB-10" target="ZQmk_gCC5b-BUXqnwlUP-5">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="620" y="1440" as="sourcePoint" />
            <mxPoint x="620" y="1590" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ZQmk_gCC5b-BUXqnwlUP-5" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;Long currentToken = lock.getToken();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;if (Objects.equals(currentToken, token)) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; count++;&lt;/div&gt;}&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;执行需要同步的逻辑前，重新获取当前token，和旧值比较是否相同，不相同说明锁已经过期&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;align=left;arcSize=7;" vertex="1" parent="1">
          <mxGeometry x="520" y="1480" width="200" height="100" as="geometry" />
        </mxCell>
        <mxCell id="ZQmk_gCC5b-BUXqnwlUP-7" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;incr redisson_lock_token:{flock}&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1444" y="1370" width="210" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

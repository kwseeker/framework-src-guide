<mxfile host="Electron" modified="2024-05-13T12:57:38.374Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="6LIbJONeMRKd0orRyqM0" version="21.6.5" type="device">
  <diagram name="第 1 页" id="BnpH6MyAiMC-jk9W1z5V">
    <mxGraphModel dx="3676" dy="733" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="dfN3vujWDwPQzVs5uhvx-1" value="&lt;h1 style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Redisson 分布式锁工作原理流程&lt;/font&gt;&lt;/h1&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;源码版本：3.29.0&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;测试DEMO: SpringBoot-Labs/redis/redisson/redisson-exampl&lt;span style=&quot;background-color: initial;&quot;&gt;e&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Redisson分布式锁的实现依赖Redis发布订阅，所以研究分布式锁的源码前最好先看下Redisson发布订阅的实现。&lt;/span&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="680" height="110" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-1" target="IO7cbxsnxIBy7bkgTzKg-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-1" value="RedissonLock" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="40" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-2" target="IO7cbxsnxIBy7bkgTzKg-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-2" value="RedissonLockTest#&lt;br style=&quot;font-size: 11px;&quot;&gt;testSubscriptionsPerConnection()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-4" target="IO7cbxsnxIBy7bkgTzKg-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-4" target="IO7cbxsnxIBy7bkgTzKg-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-4" value="先创建连接配置" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-6" target="IO7cbxsnxIBy7bkgTzKg-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-6" target="IO7cbxsnxIBy7bkgTzKg-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-6" value="根据连接配置创建客户端连接" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-8" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建最基本的连接配置（RESP2协议、服务器地址redis://127.0.0.1:6379）&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;Config config = createConfig();&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;config.useSingleServer()&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionConnectionPoolSize(1) &lt;font color=&quot;#007fff&quot;&gt;//订阅连接池的大小&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionConnectionMinimumIdleSize(1)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setSubscriptionsPerConnection(1) &lt;font color=&quot;#007fff&quot;&gt;//每个连接限制订阅的数量&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;.setAddress(redisson.getConfig().useSingleServer().getAddress());&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;" parent="1" vertex="1">
          <mxGeometry x="760" y="140" width="360" height="100" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-12" value="RedissonClient redisson&amp;nbsp; = Redisson.&lt;b&gt;create&lt;/b&gt;(config);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;这个看发布订阅流程图中的分析，主要是创建连接和线程池&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="760" y="260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-14" target="IO7cbxsnxIBy7bkgTzKg-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-14" value="ExecutorService e = Executors.newFixedThreadPool(32);&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;创建了包含32个线程的线程池，模拟并发请求&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-16" target="IO7cbxsnxIBy7bkgTzKg-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-16" value="for 循环5000次，向线程池中提交分布锁同步的任务，每个任务随机睡眠0-20ms模拟业务处理耗时" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="520" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-22" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1160" y="470" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-27" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-21" vertex="1" connectable="0">
          <mxGeometry x="0.75" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-28" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-25" vertex="1" connectable="0">
          <mxGeometry x="0.35" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-18" target="IO7cbxsnxIBy7bkgTzKg-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-29" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="IO7cbxsnxIBy7bkgTzKg-26" vertex="1" connectable="0">
          <mxGeometry x="0.8" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-18" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; String lockKey = &quot;lock-1&quot;;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; RLock lock = redisson.&lt;b&gt;getLock&lt;/b&gt;(lockKey); &lt;font color=&quot;#007fff&quot;&gt;//1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; lock.&lt;b&gt;lock&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//2&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Thread.sleep(ThreadLocalRandom.current().nextInt(20));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; counter++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; lock.&lt;b&gt;unlock&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//3&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ops.incrementAndGet();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} catch (Exception exception) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; exception.printStackTrace();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if(exception instanceof RedisTimeoutException){&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; errors.incrementAndGet();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="760" y="380" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-33" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-22" target="IO7cbxsnxIBy7bkgTzKg-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-22" value="&lt;div&gt;RLock lock = redisson.getLock(lockKey);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1160" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-23" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; lock.lock();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1160" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-24" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; lock.un&lt;span style=&quot;background-color: initial;&quot;&gt;lock();&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1160" y="520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="IO7cbxsnxIBy7bkgTzKg-32" target="dYNV18oPOYucMmK5HlVg-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-32" value="&lt;div&gt;return new &lt;b&gt;RedissonLock&lt;/b&gt;(&lt;br&gt;this.commandExecutor, name);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-24" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-34" target="IO7cbxsnxIBy7bkgTzKg-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;dashed=1;endArrow=block;endFill=1;" edge="1" parent="1" source="IO7cbxsnxIBy7bkgTzKg-34" target="dYNV18oPOYucMmK5HlVg-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-34" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonBaseLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;锁相关对象的基本抽象类，锁相关的大部分类都继承此抽象类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final ConcurrentMap&amp;lt;String, ExpirationEntry&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;EXPIRATION_RENEWAL_MAP&lt;/b&gt; = new ConcurrentHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//默认30s&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b&gt;internalLockLeaseTime&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对应的ServiceManager id (是UUID), 可能后面逻辑哪里可能需要获取ServiceManager&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;id&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//id + &quot;:&quot; + name&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final String &lt;b&gt;entryName&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自Redisson commandExecutor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final RedisCommand&amp;lt;Integer&amp;gt; &lt;b&gt;HGET&lt;/b&gt; = new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;RedisCommand(&quot;HGET&quot;, new MapValueDecoder(), new &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;IntegerReplayConvertor(0));&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="960" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-35" target="IO7cbxsnxIBy7bkgTzKg-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-17" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.004;exitY=0.559;exitDx=0;exitDy=0;entryX=1;entryY=0.801;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;" edge="1" parent="1" source="IO7cbxsnxIBy7bkgTzKg-35" target="dYNV18oPOYucMmK5HlVg-16">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-780" y="1369" />
              <mxPoint x="-780" y="1705" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-35" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonLock&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;基本的可重入锁实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//锁超时释放时间ms(看门狗超时时间), 对应配置类中的 lockWatchdogTimeout&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected long &lt;b style=&quot;background-color: initial;&quot;&gt;internalLockLeaseTime&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//来自PublishSubscribeService lockPubSub&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;LockPubSub&lt;/b&gt; &lt;b&gt;pubSub&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1280" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-36" target="IO7cbxsnxIBy7bkgTzKg-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;dashed=1;fontSize=11;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-36" target="IO7cbxsnxIBy7bkgTzKg-42" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-340" y="780" />
              <mxPoint x="-620" y="780" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-36" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonExpirable (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;拓展超时方法实现，由于Redisson大部分对象都需要支持超时方法，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;Redisson大部分对象类都继承此类&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="800" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;dashed=1;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-37" target="IO7cbxsnxIBy7bkgTzKg-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-37" target="UIfJx8McfHb-EtYyFKPk-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-460" y="640" />
              <mxPoint x="-460" y="280" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-37" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RedissonObject (A)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//命令异步执行器，其实封装了&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final &lt;b&gt;CommandAsyncExecutor&lt;/b&gt; &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象名字&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected String &lt;b&gt;name&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象使用的编解码器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected final Codec &lt;b&gt;codec&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-440" y="600" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-39" target="IO7cbxsnxIBy7bkgTzKg-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-39" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RObject (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;定义Redisson对象的基本方法（这里定义同步方法），Redisson对象的核心接口，Redisson所有对象都实现此接口&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//获取对象空闲时间（s），即从上次读写到现在的秒数&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Long getIdleTime();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//更新对象最后访问时间&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean touch();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象在Redis中占用内存大小（按bytes计算）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long sizeInMemory();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//Redisson对象的一些序列化和反序列化方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void restore(byte[] state);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;byte[] dump();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象迁移、复制&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void migrate(String host, int port, int database, long timeout);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void copy(String host, int port, int database, long timeout);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean move(int database);&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象基本操作方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String getName();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean delete();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean unlink();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void rename(String newName);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean renamenx(String newName);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isExists();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Codec getCodec();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//对象监听器相关，具体参考各种监听器实现类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int addListener(ObjectListener listener);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void removeListener(int listenerId);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-440" y="160" width="400" height="400" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-40" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RObjectAsync (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;拓展 RObject&amp;nbsp;&lt;b&gt;异步&lt;/b&gt;接口方法，返回 RFuture&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="40" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-1" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-41" target="IO7cbxsnxIBy7bkgTzKg-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-41" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RExpirableAsync (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;拓展 RExpirable 异步接口方法，返回 RFuture&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-760" y="160" width="280" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;fontSize=11;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-42" target="IO7cbxsnxIBy7bkgTzKg-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.25;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="IO7cbxsnxIBy7bkgTzKg-42" target="IO7cbxsnxIBy7bkgTzKg-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IO7cbxsnxIBy7bkgTzKg-42" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;RExpirable (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;为对象定义超时方法（TTL）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expire(Instant time);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expireIfSet(Instant time);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean expire(Duration duration);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean clearExpire();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long remainTimeToLive();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getExpireTime();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-760" y="600" width="280" height="160" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-9" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;CommandAsyncExecutor&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis命令异步执行器，Redisson提供了异步、批量异步、响应式（基于Reactor、RxJava）多种实现&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1120" y="240" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="UIfJx8McfHb-EtYyFKPk-20" target="UIfJx8McfHb-EtYyFKPk-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1000" y="360" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.001;exitY=0.439;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-20" target="dYNV18oPOYucMmK5HlVg-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1240" y="450" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-20" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;CommandAsyncService&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;异步执行器实现，其他几种执行器全都继承这个类，说明所有执行器都是异步的&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final Codec codec;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;//连接管理器，就是保存连接的容器类对象&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;ConnectionManager&lt;/b&gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;connectionManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final RedissonObjectBuilder objectBuilder;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;final RedissonObjectBuilder.ReferenceType referenceType;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryAttempts;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryInterval;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int responseTimeout;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final boolean trackChanges;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1200" y="360" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-22" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-21" target="UIfJx8McfHb-EtYyFKPk-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-21" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;CommandBatchService&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;批量执行器实现（也是异步的）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicInteger index = new AtomicInteger();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;NodeSource, Entry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;commands&lt;/b&gt;&amp;nbsp;= new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private Map&amp;lt;MasterSlaveEntry, Entry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;aggregatedCommands&lt;/b&gt;&amp;nbsp;= Collections.emptyMap();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;MasterSlaveEntry, ConnectionEntry&amp;gt;&amp;nbsp;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;connections&lt;/b&gt;&amp;nbsp;= new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final BatchOptions options;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;CompletableFuture&amp;lt;?&amp;gt;, List&amp;lt;CommandBatchService&amp;gt;&amp;gt; nestedServices = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicBoolean executed = new AtomicBoolean();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final long retryInterval;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final int retryAttempts;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1200" y="600" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-29" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="UIfJx8McfHb-EtYyFKPk-28" target="dYNV18oPOYucMmK5HlVg-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1440" y="1040" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-28" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SingleConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis单机模式连接管理器&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1640" y="1080" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UIfJx8McfHb-EtYyFKPk-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="dYNV18oPOYucMmK5HlVg-11" target="dYNV18oPOYucMmK5HlVg-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1880" y="1080" as="sourcePoint" />
            <mxPoint x="-1470" y="1050" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-1880" y="1061" />
              <mxPoint x="-1440" y="1061" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-1" value="Redisson" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1465" y="330" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-3" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="-910" y="1090" width="20" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" edge="1" parent="1" source="dYNV18oPOYucMmK5HlVg-5" target="dYNV18oPOYucMmK5HlVg-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-5" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b&gt;Redisson&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Redisson客户端实现类&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//过期任务调度，间接借助ConnectionManager中的线程执行过期任务&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final EvictionScheduler &lt;b&gt;evictionScheduler&lt;/b&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;//同样间接借助ConnectionManager中的线程执行任务，任务会存储到名为tasks的Map&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private final WriteBehindService &lt;b&gt;writeBehindService&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionManager &lt;b&gt;connectionManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//命令异步执行器，是CommandAsyncService实例，借助 ConnectionManager中的线程池和连接实现命令异步发送&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CommandAsyncExecutor &lt;b&gt;commandExecutor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;Class&amp;lt;?&amp;gt;, Class&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;liveObjectClassCache&lt;/b&gt; = new ConcurrentHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Config &lt;b&gt;config&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-1200" y="1040" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-6" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;RedissonClient&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;包括创建连接、关闭连接、获取服务节点信息，以及获取各种&lt;b&gt;Redisson对象&lt;/b&gt;的方法。&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1120" y="920" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-7" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ConnectionManager&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//部分关键接口方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//其实是启动Netty客户端&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void &lt;b&gt;connect&lt;/b&gt;();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void shutdown();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//获取发布订阅服务&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;PublishSubscribeService getSubscribeService();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//集群模式计算槽位&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int calcSlot(String key);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//主从服务节点Entry集合&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Collection&amp;lt;MasterSlaveEntry&amp;gt; getEntrySet();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建Redis连接（RedisClient）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RedisClient &lt;b&gt;createClient&lt;/b&gt;(NodeType type, InetSocketAddress address, RedisURI uri, String sslHostname);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;RedisClient &lt;b&gt;createClient&lt;/b&gt;(NodeType type, RedisURI address, String sslHostname);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;b&gt;ServiceManager&lt;/b&gt;(Netty客户端 + ExecutorService + Redis Server 配置)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;ServiceManager&lt;/b&gt; getServiceManager();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//创建命令执行器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;CommandAsyncExecutor &lt;b&gt;createCommandExecutor&lt;/b&gt;(RedissonObjectBuilder objectBuilder,&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;RedissonObjectBuilder.ReferenceType referenceType);&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1640" y="360" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" edge="1" parent="1" source="dYNV18oPOYucMmK5HlVg-9" target="dYNV18oPOYucMmK5HlVg-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-9" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MasterSlaveConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;连接管理器基本实现，其他实现类都继承此实现，包括单机、主从复制&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;、哨兵、集群4种实现&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected DNSMonitor dnsMonitor;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected MasterSlaveServersConfig &lt;b&gt;config&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//连接到Redis服务节点的对象，里面保存连接到某个节点的所有连接对象&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private MasterSlaveEntry &lt;b&gt;masterSlaveEntry&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//发布订阅服务&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final PublishSubscribeService &lt;b&gt;subscribeService&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//Netty服务器配置等&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final ServiceManager &lt;b&gt;serviceManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisURI, RedisConnection&amp;gt; &lt;b&gt;nodeConnections&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;protected final AtomicReference&amp;lt;CompletableFuture&amp;lt;Void&amp;gt;&amp;gt; lazyConnectLatch = new AtomicReference&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private boolean lastAttempt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1640" y="760" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-11" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ClusterConnectionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Redis集群模式连接管理器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Integer, ClusterPartition&amp;gt; lastPartitions = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisURI, ClusterPartition&amp;gt; lastUri2Partition = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private volatile Timeout monitorFuture;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private volatile RedisURI lastClusterNode;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private RedisStrictCommand&amp;lt;List&amp;lt;ClusterNodeInfo&amp;gt;&amp;gt; clusterNodesCommand;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private String configEndpointHostName;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//slot对应的服务节点&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicReferenceArray&amp;lt;MasterSlaveEntry&amp;gt; slot2entry = new AtomicReferenceArray&amp;lt;&amp;gt;(MAX_SLOT);&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//服务节点也是多个&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;RedisClient, MasterSlaveEntry&amp;gt; &lt;b&gt;client2entry&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private ClusterServersConfig cfg;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final long seed = ThreadLocalRandom.current().nextLong();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-2080" y="1080" width="400" height="320" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-12" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;RLock&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I) &lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;extends Lock, RLockAsync&lt;/span&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Lock 接口是JUC的借口，RLockAsync是Redisson拓展的&lt;br&gt;异步接口&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-760" y="840" width="280" height="80" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-14" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;super(commandExecutor, name);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;commandExecutor&lt;/b&gt; = commandExecutor;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;internalLockLeaseTime&lt;/b&gt; = getServiceManager().getCfg().getLockWatchdogTimeout();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;this.&lt;b style=&quot;font-size: 10px;&quot;&gt;pubSub&lt;/b&gt; = commandExecutor.getConnectionManager()&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;.getSubscribeService().getLockPubSub();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" vertex="1" parent="1">
          <mxGeometry x="1640" y="350" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-16" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;PublishSubscribeService&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;类似 MasterSlaveEntry 保存了一组用于发布订阅的连接, 通过 Map 存储连接，只不过KEY是发布订阅相关的&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionManager connectionManager;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final MasterSlaveServersConfig config;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AsyncSemaphore[] locks = new AsyncSemaphore[50];&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AsyncSemaphore freePubSubLock = new AsyncSemaphore(1);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//主题名 -&amp;gt; 连接集合&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;&lt;b&gt;ChannelName&lt;/b&gt;, Collection&amp;lt;&lt;b&gt;PubSubConnectionEntry&lt;/b&gt;&amp;gt;&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;name2entry&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//PubSubKey -&amp;gt; 连接集合&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//PubSubKey 是 &quot;主题名 + MasterSlaveEntry&quot;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;&lt;b&gt;PubSubKey&lt;/b&gt;, PubSubConnectionEntry&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;name2PubSubConnection&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//MasterSlaveEntry -&amp;gt;&amp;nbsp;PubSubEntry&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;MasterSlaveEntry, &lt;b&gt;PubSubEntry&lt;/b&gt;&amp;gt; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;entry2PubSubConnection&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;&lt;b&gt;PubSubClientKey&lt;/b&gt;, PubSubConnectionEntry&amp;gt;&amp;nbsp;&lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; key2connection&lt;/b&gt; =&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final SemaphorePubSub semaphorePubSub = new SemaphorePubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final CountDownLatchPubSub countDownLatchPubSub = new CountDownLatchPubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final LockPubSub &lt;b&gt;lockPubSub&lt;/b&gt; = new LockPubSub(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Set&amp;lt;PubSubConnectionEntry&amp;gt; trackedEntries = Collections.newSetFromMap(new ConcurrentHashMap&amp;lt;&amp;gt;());&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean shardingSupported = false;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1200" y="1320" width="400" height="480" as="geometry" />
        </mxCell>
        <mxCell id="dYNV18oPOYucMmK5HlVg-19" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;结合 JUC 锁实现基本原理对比 Redisson分布式锁实现(&lt;span style=&quot;background-color: initial;&quot;&gt;下面省略很多细节)：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;JUC锁&lt;/b&gt;：&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;对 volatile int字段执行CAS操作加锁，同时只有一个加锁成功，未加锁成功的到队列中排队，锁释放后从队列头部唤醒等待的线程重新竞争加锁；&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;Redisson分布式锁&lt;/b&gt;：&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;其实和JUC锁原理类似，&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="40" y="240" width="440" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

<mxfile host="Electron" modified="2025-03-27T17:14:21.914Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="t68UfG6fiyf1vU09moFB" version="21.6.5" type="device">
  <diagram name="第 1 页" id="YSZZ4nGOxZfp2qwbpQtM">
    <mxGraphModel dx="3485" dy="703" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="DWV2Xr_4WVvH2I4zkb5w-1" value="&lt;h1&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;MCP Java SDK &lt;/span&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;(0.8.0-SNAPSHOT)&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;https://github.com/modelcontextprotocol/java-sdk&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;资料和案例源码非常少，只能从源码实现反推使用方法，这里从一个简单的加法计算器开始研究 MCP 交互原理。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="640" height="90" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="DWV2Xr_4WVvH2I4zkb5w-2" target="hHCyR-FWDm8NR4kneMoq-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="DWV2Xr_4WVvH2I4zkb5w-2" value="&lt;b&gt;Mcp Server &lt;/b&gt;&lt;br&gt;(Calculator，一个基于 Stdio 通信的 提供 Tool 功能的 MCP 服务器)" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="40" y="160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-1" target="hHCyR-FWDm8NR4kneMoq-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;McpServer.&lt;b&gt;sync&lt;/b&gt;(&lt;b&gt;transportProvider&lt;/b&gt;) &lt;font color=&quot;#007fff&quot;&gt;// 创建一个同步MCP Server定义&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;serverInfo&lt;/b&gt;(&quot;calculator-server&quot;, &quot;1.0.0&quot;) &lt;font color=&quot;#007fff&quot;&gt;// 设置服务器基本信息&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;// 添加一个工具&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;tool&lt;/b&gt;(new McpSchema.Tool(&quot;add&quot;, &quot;执行加法运算&quot;, jsonSchema),&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (exchange, summands) -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; double a = ((Number) summands.get(&quot;a&quot;)).doubleValue();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; double b = ((Number) summands.get(&quot;b&quot;)).doubleValue();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; double sum = a + b;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String result = String.format(&quot;%.2f + %.2f = %.2f&quot;, a, b, sum);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new McpSchema.CallToolResult(Arrays.asList(new TextContent(result)), false);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 1 构建 MCP Server 实例&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;build&lt;/b&gt;();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=3;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="160" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-3" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;McpServer (I)&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;MCP Server 的接口定义，内部定义了两个实现类 AsyncSpecification、SyncSpecification, 分别用于实现异步和同步调用的 MCP Server&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;static SyncSpecification &lt;b&gt;sync&lt;/b&gt;(McpServerTransportProvider transportProvider)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;static AsyncSpecification &lt;b&gt;async&lt;/b&gt;(McpServerTransportProvider transportProvider)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-440" y="160" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-4" value="&lt;div style=&quot;text-align: center;&quot;&gt;McpServer.&lt;b style=&quot;background-color: initial;&quot;&gt;SyncSpecification&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;同步 MCP Server 定义，这个类的定位其实就像是配置类 Configuration&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 默认的 MCP Server 信息&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final McpSchema.Implementation DEFAULT_SERVER_INFO = new McpSchema.Implementation(&quot;mcp-server&quot;, &quot;1.0.0&quot;);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// TODO ?&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final &lt;b&gt;McpServerTransportProvider&lt;/b&gt; &lt;b&gt;transportProvider&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 使用 Jackson 实现序列化和反序列化，因为使用的 JSON-RPC 2.0, 数据传输是使用JSON格式传输的&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private &lt;b&gt;ObjectMapper&lt;/b&gt; &lt;b&gt;objectMapper&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// MCP Server 信息&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private McpSchema.&lt;b&gt;Implementation&lt;/b&gt; &lt;b&gt;serverInfo&lt;/b&gt; = DEFAULT_SERVER_INFO;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// MCP Server 的能力&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private McpSchema.&lt;b&gt;ServerCapabilities&lt;/b&gt; &lt;b&gt;serverCapabilities&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// MCP Server 的三种功能列表：Tool Resource Prompt&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Tools：用于 MCP Server 共享工具给 LLMs 调用，Tools 可以与外部系统交互，比如查询数据、调用 API、执行计算等等&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;McpServerFeatures.&lt;b&gt;SyncToolSpecification&lt;/b&gt;&amp;gt; &lt;b&gt;tools&lt;/b&gt; = new ArrayList&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Resources: 用于 MCP Server 共享资源给客户端，并提供上下文信息给 LLMs, 资源包括文件、数据库、应用信息等等&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 每一种资源被唯一的URI标识&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;String, McpServerFeatures.&lt;b&gt;SyncResourceSpecification&lt;/b&gt;&amp;gt; &lt;b&gt;resources&lt;/b&gt; = new HashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 资源模板，TODO ?&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;ResourceTemplate&amp;gt; &lt;b&gt;resourceTemplates&lt;/b&gt; = new ArrayList&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Prompts:&amp;nbsp; 用于 MCP Server 共享提示词模板给客户端，支持提供结构化的消息或指令给 LLMs,&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 客户端可以发现可用的提示词模板、读取内容、并提供参数定制提示词&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;String, McpServerFeatures.&lt;b&gt;SyncPromptSpecification&lt;/b&gt;&amp;gt; &lt;b&gt;prompts&lt;/b&gt; = new HashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// TODO ?&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;BiConsumer&amp;lt;McpSyncServerExchange, List&amp;lt;McpSchema.Root&amp;gt;&amp;gt;&amp;gt; rootsChangeHandlers = new ArrayList&amp;lt;&amp;gt;();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：（一些提供Tool Resource Prompt 的方法）&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public SyncSpecification &lt;b&gt;tool&lt;/b&gt;(McpSchema.Tool tool,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;BiFunction&amp;lt;McpSyncServerExchange, Map&amp;lt;String, Object&amp;gt;, &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;McpSchema.CallToolResult&amp;gt; handler)&lt;span style=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="320" width="400" height="560" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-5" value="&lt;div style=&quot;text-align: center;&quot;&gt;McpServer.&lt;b style=&quot;background-color: initial;&quot;&gt;AsyncSpecification&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;异步 MCP Server 定义，&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;和同步 MCP Server 定义的区别是和客户端的交互方式，引入了 Project Reactor 异步框架&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-880" y="320" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-6" target="hHCyR-FWDm8NR4kneMoq-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-6" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;public McpSyncServer build() {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; McpServerFeatures.Sync &lt;b&gt;syncFeatures&lt;/b&gt; = new &lt;b&gt;McpServerFeatures&lt;/b&gt;.&lt;b&gt;Sync&lt;/b&gt;(this.serverInfo, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.serverCapabilities,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;this.tools, this.resources, this.resourceTemplates, this.prompts, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.rootsChangeHandlers);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; McpServerFeatures.Async &lt;b&gt;asyncFeatures&lt;/b&gt; = McpServerFeatures.Async&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;.fromSync(syncFeatures);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; var mapper = this.objectMapper != null ? this.objectMapper : new ObjectMapper();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; var asyncServer = new &lt;b&gt;McpAsyncServer&lt;/b&gt;(this.&lt;b&gt;transportProvider&lt;/b&gt;, mapper, &lt;b&gt;asyncFeatures&lt;/b&gt;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 同步MCP Server 也是通过异步 MCP Server 实现的&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return new &lt;b&gt;McpSyncServer&lt;/b&gt;(asyncServer);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=4;align=left;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="160" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-8" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;McpAsyncServer&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 异步服务器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 子类的委托&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final &lt;b style=&quot;&quot;&gt;McpAsyncServer&lt;/b&gt; &lt;b style=&quot;&quot;&gt;delegate&lt;/b&gt;;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-440" y="920" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-9" target="hHCyR-FWDm8NR4kneMoq-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.002;exitY=0.168;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-9" target="hHCyR-FWDm8NR4kneMoq-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-9" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;AsyncServerImpl&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 异步服务器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final &lt;b&gt;McpServerTransportProvider&lt;/b&gt; &lt;b&gt;mcpTransportProvider&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ObjectMapper objectMapper;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final McpSchema.ServerCapabilities serverCapabilities;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final McpSchema.Implementation serverInfo;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final CopyOnWriteArrayList&amp;lt;McpServerFeatures.AsyncToolSpecification&amp;gt; &lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;tools&lt;/b&gt; = new CopyOnWriteArrayList&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final CopyOnWriteArrayList&amp;lt;McpSchema.ResourceTemplate&amp;gt; &lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;resourceTemplates&lt;/b&gt; = new CopyOnWriteArrayList&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, &lt;br&gt;&amp;nbsp; &amp;nbsp; McpServerFeatures.AsyncResourceSpecification&amp;gt; &lt;b&gt;resources&lt;/b&gt; = new &lt;br&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, &lt;br&gt;&amp;nbsp; &amp;nbsp; McpServerFeatures.AsyncPromptSpecification&amp;gt; &lt;b&gt;prompts&lt;/b&gt; = new &lt;br&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private LoggingLevel minLoggingLevel = LoggingLevel.DEBUG;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private List&amp;lt;String&amp;gt; protocolVersions = List.of(&lt;br&gt;&amp;nbsp; &amp;nbsp; McpSchema.LATEST_PROTOCOL_VERSION);&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1080" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-10" target="hHCyR-FWDm8NR4kneMoq-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-10" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;LegacyAsyncServer&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 异步服务器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 与客户端的连接会话&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final McpClientSession mcpSession;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ServerMcpTransport transport;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final McpSchema.ServerCapabilities serverCapabilities;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final McpSchema.Implementation serverInfo;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private McpSchema.ClientCapabilities clientCapabilities;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private McpSchema.Implementation clientInfo;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final CopyOnWriteArrayList&amp;lt;McpServerFeatures.AsyncToolSpecification&amp;gt; &lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; tools&lt;/b&gt; = new CopyOnWriteArrayList&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final CopyOnWriteArrayList&amp;lt;McpSchema.ResourceTemplate&amp;gt; &lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;resourceTemplates&lt;/b&gt; = new CopyOnWriteArrayList&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, McpServerFeatures.AsyncResourceSpecification&amp;gt; &lt;b&gt;resources&lt;/b&gt; = new &lt;br&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, &lt;br&gt;&amp;nbsp; &amp;nbsp; McpServerFeatures.AsyncPromptSpecification&amp;gt;&lt;b&gt;prompts&lt;/b&gt; = new&amp;nbsp; &lt;br&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private LoggingLevel minLoggingLevel = LoggingLevel.DEBUG;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 51); background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;color: rgb(51, 0, 51); background-color: initial;&quot;&gt;private List&amp;lt;String&amp;gt; protocolVersions = List.of(&lt;br&gt;&amp;nbsp; &amp;nbsp; McpSchema.LATEST_PROTOCOL_VERSION);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1080" width="400" height="400" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-13" value="McpServer" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="450" y="130" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-20" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-14" target="hHCyR-FWDm8NR4kneMoq-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-14" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;McpAsyncServer(McpServerTransportProvider mcpTransportProvider, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ObjectMapper objectMapper,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpServerFeatures.Async features) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.delegate = new &lt;b&gt;AsyncServerImpl&lt;/b&gt;(mcpTransportProvider, objectMapper, features);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=4;align=left;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1240" y="200" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-18" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-16" target="hHCyR-FWDm8NR4kneMoq-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-16" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;McpSyncServer&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 异步服务器, 本质还是借助异步服务器实现，只不过将接口都改为了同步阻塞调用&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final &lt;b&gt;McpAsyncServer&lt;/b&gt; &lt;b&gt;asyncServer&lt;/b&gt;;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-880" y="920" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-30" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-19" target="hHCyR-FWDm8NR4kneMoq-29" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2410" y="420" />
              <mxPoint x="2410" y="570" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-54" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="hHCyR-FWDm8NR4kneMoq-30" vertex="1" connectable="0">
          <mxGeometry x="0.8326" y="-2" relative="1" as="geometry">
            <mxPoint x="-4" y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-19" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;AsyncServerImpl(McpServerTransportProvider mcpTransportProvider, ObjectMapper objectMapper,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpServerFeatures.Async features) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 组件从 features 拷贝到当前服务器实现&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.mcpTransportProvider = mcpTransportProvider;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 请求处理器的容器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Map&amp;lt;String, McpServerSession.RequestHandler&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;requestHandlers&lt;/b&gt; = new HashMap&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; // PING 请求处理器&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_PING, (exchange, params) -&amp;gt; Mono.just(Map.of()));&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 如果服务器中包含 Tool 能力，注册 Tool 相关请求处理，比如查看那可用Tool、调用Tool&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (this.serverCapabilities.tools() != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_TOOLS_LIST, toolsListRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_TOOLS_CALL, toolsCallRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 同理注册资源相关处理器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (this.serverCapabilities.resources() != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_RESOURCES_LIST, resourcesListRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_RESOURCES_READ, resourcesReadRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_RESOURCES_TEMPLATES_LIST, resourceTemplateListRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 同理注册提示词相关处理器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (this.serverCapabilities.prompts() != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_PROMPT_LIST, promptsListRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_PROMPT_GET, promptsGetRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 日志级别也可以通过请求修改&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (this.serverCapabilities.logging() != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requestHandlers.put(McpSchema.METHOD_LOGGING_SET_LEVEL, setLoggerRequestHandler());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 监听器注册&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Map&amp;lt;String, McpServerSession.NotificationHandler&amp;gt; notificationHandlers = new HashMap&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; notificationHandlers.put(McpSchema.METHOD_NOTIFICATION_INITIALIZED, (exchange, params) -&amp;gt; Mono.empty());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; List&amp;lt;BiFunction&amp;lt;McpAsyncServerExchange, List&amp;lt;McpSchema.Root&amp;gt;, Mono&amp;lt;Void&amp;gt;&amp;gt;&amp;gt; rootsChangeConsumers = features&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .rootsChangeConsumers();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; notificationHandlers.put(McpSchema.METHOD_NOTIFICATION_ROOTS_LIST_CHANGED,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; asyncRootsListChangedNotificationHandler(rootsChangeConsumers));&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 1 建立连接通道&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; mcpTransportProvider.&lt;b&gt;setSessionFactory&lt;/b&gt;(transport -&amp;gt; new &lt;b&gt;McpServerSession&lt;/b&gt;(UUID.randomUUID().toString(), transport,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this::asyncInitializeRequestHandler, Mono::empty, requestHandlers, notificationHandlers));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1720" y="160" width="680" height="520" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-21" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;McpServerTransportProvider (I)&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;提供 MCP Server 传输层实现的提供者&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void &lt;b&gt;setSessionFactory&lt;/b&gt;(McpServerSession.Factory sessionFactory);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Mono&amp;lt;Void&amp;gt; &lt;b&gt;notifyClients&lt;/b&gt;(String method, Map&amp;lt;String, Object&amp;gt; params);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;default void close()&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Mono&amp;lt;Void&amp;gt; closeGracefully();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1080" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-25" target="hHCyR-FWDm8NR4kneMoq-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-37" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.999;exitY=0.447;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;exitPerimeter=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-25" target="hHCyR-FWDm8NR4kneMoq-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-25" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;StdioServerTransportProvider&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ObjectMapper objectMapper;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final InputStream &lt;b&gt;inputStream&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final OutputStream &lt;b&gt;outputStream&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private &lt;b&gt;McpServerSession&lt;/b&gt; &lt;b&gt;session&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final AtomicBoolean &lt;b&gt;isClosing&lt;/b&gt; = new AtomicBoolean(false);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.One&amp;lt;Void&amp;gt; &lt;b&gt;inboundReady&lt;/b&gt; = Sinks.one();&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1241" width="400" height="199" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-28" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;dashed=1;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-27" target="hHCyR-FWDm8NR4kneMoq-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-27" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;HttpServletSseServerTransportProvider&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ObjectMapper objectMapper;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final String &lt;b&gt;messageEndpoint&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final String &lt;b&gt;sseEndpoint&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Map&amp;lt;String, McpServerSession&amp;gt; &lt;b&gt;sessions&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final AtomicBoolean &lt;b&gt;isClosing&lt;/b&gt; = new AtomicBoolean(false);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private &lt;b&gt;McpServerSession&lt;/b&gt;.Factory &lt;b&gt;sessionFactory&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1241" width="400" height="199" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-53" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-29" target="hHCyR-FWDm8NR4kneMoq-52" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-29" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public void setSessionFactory(McpServerSession.Factory sessionFactory) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 只需要创建单个会话，结合前面代码可知这里创建的是 &lt;b&gt;McpServerSession&lt;/b&gt;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.session = sessionFactory.create(new &lt;b&gt;StdioMcpSessionTransport&lt;/b&gt;());&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=11;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="2440" y="540" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-31" value="McpAsyncServer" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1405" y="170" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-32" value="AsyncServerImpl" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2005" y="130" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-33" value="StdioServerTransportProvider" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2570" y="510" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-36" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-34" target="hHCyR-FWDm8NR4kneMoq-35" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-50" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.478;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-34" target="hHCyR-FWDm8NR4kneMoq-45" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-34" value="&lt;div style=&quot;text-align: center; font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;McpServerSession&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final ConcurrentHashMap&amp;lt;Object,&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; MonoSink&amp;lt;McpSchema.JSONRPCResponse&amp;gt;&amp;gt; &lt;br&gt;&amp;nbsp; &amp;nbsp; pendingResponses = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final String id;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final AtomicLong requestCounter = new AtomicLong(0);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final InitRequestHandler initRequestHandler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final InitNotificationHandler initNotificationHandler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final Map&amp;lt;String, RequestHandler&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;requestHandlers&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final Map&amp;lt;String, NotificationHandler&amp;gt; &lt;b&gt;notificationHandlers&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b style=&quot;border-color: var(--border-color); color: rgb(0, 127, 255);&quot;&gt;// 传输层的核心&lt;/b&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final McpServerTransport &lt;b&gt;transport&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final Sinks.One&amp;lt;McpAsyncServerExchange&amp;gt; &lt;b&gt;exchangeSink&lt;/b&gt; = Sinks.one();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final AtomicReference&amp;lt;McpSchema.ClientCapabilities&amp;gt; clientCapabilities = new &lt;br&gt;&amp;nbsp; &amp;nbsp; AtomicReference&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final AtomicReference&amp;lt;McpSchema.Implementation&amp;gt; clientInfo = new &lt;br&gt;&amp;nbsp; &amp;nbsp; AtomicReference&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private static final int STATE_UNINITIALIZED = 0;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private static final int STATE_INITIALIZING = 1;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private static final int STATE_INITIALIZED = 2;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#330033&quot; style=&quot;font-size: 10px;&quot;&gt;private final AtomicInteger state = new AtomicInteger(STATE_UNINITIALIZED);&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1681" width="400" height="359" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-35" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;McpSession&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;(I)&lt;/b&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 传输层会话接口&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; Mono&amp;lt;T&amp;gt; sendRequest(String method, Object requestParams, TypeReference&amp;lt;T&amp;gt; typeRef);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;default Mono&amp;lt;Void&amp;gt; sendNotification(String method)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Mono&amp;lt;Void&amp;gt; sendNotification(String method, Map&amp;lt;String, Object&amp;gt; params);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-880" y="1520" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-39" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-38" target="hHCyR-FWDm8NR4kneMoq-35" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-51" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.278;exitDx=0;exitDy=0;exitPerimeter=0;endArrow=open;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-38" target="hHCyR-FWDm8NR4kneMoq-48" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-38" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;McpClientSession&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Duration requestTimeout;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 传输层的核心&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final &lt;b&gt;McpTransport&lt;/b&gt; &lt;b&gt;transport&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;Object, &lt;br&gt;&amp;nbsp; &amp;nbsp; MonoSink&amp;lt;McpSchema.JSONRPCResponse&amp;gt;&amp;gt; pendingResponses = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, RequestHandler&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;requestHandlers&lt;/b&gt; = new &lt;br&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ConcurrentHashMap&amp;lt;String, NotificationHandler&amp;gt; &lt;b&gt;notificationHandlers&lt;/b&gt; = &lt;br&gt;&amp;nbsp; &amp;nbsp; new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final String sessionPrefix = UUID.randomUUID().toString().substring(0, 8);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final AtomicLong requestCounter = new AtomicLong(0);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Disposable connection;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="1681" width="400" height="239" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-40" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;McpTransport&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP 传输层接口&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;default Mono&amp;lt;Void&amp;gt; &lt;b&gt;connect&lt;/b&gt;(Function&amp;lt;Mono&amp;lt;JSONRPCMessage&amp;gt;, Mono&amp;lt;JSONRPCMessage&amp;gt;&amp;gt; handler)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Mono&amp;lt;Void&amp;gt; &lt;b&gt;sendMessage&lt;/b&gt;(JSONRPCMessage message);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; T unmarshalFrom(Object data, TypeReference&amp;lt;T&amp;gt; typeRef);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;default void close()&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Mono&amp;lt;Void&amp;gt; closeGracefully();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1520" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-43" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-42" target="hHCyR-FWDm8NR4kneMoq-45" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-42" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;StdioMcpSessionTransport&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;基于标准IO实现的传输层&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Sink 其实类似缓冲池，以流的方式一个个读取请求，并将处理结果一个个地写回&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.Many&amp;lt;JSONRPCMessage&amp;gt; &lt;b&gt;inboundSink&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.Many&amp;lt;JSONRPCMessage&amp;gt; &lt;b&gt;outboundSink&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final AtomicBoolean isStarted = new AtomicBoolean(false);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Scheduler inboundScheduler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Scheduler outboundScheduler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.One&amp;lt;Void&amp;gt; outboundReady = Sinks.one();&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1840" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-46" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-45" target="hHCyR-FWDm8NR4kneMoq-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-45" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ServerMcpTransport&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP Server 传输层接口，并未拓展新方法&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-440" y="1720" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-47" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;" parent="1" source="hHCyR-FWDm8NR4kneMoq-48" target="hHCyR-FWDm8NR4kneMoq-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-48" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;StdioClientTransport&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.Many&amp;lt;JSONRPCMessage&amp;gt; &lt;b&gt;inboundSink&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.Many&amp;lt;JSONRPCMessage&amp;gt; &lt;b&gt;outboundSink&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Process process;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private ObjectMapper objectMapper;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Scheduler inboundScheduler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Scheduler outboundScheduler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private Scheduler errorScheduler;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final ServerParameters &lt;b&gt;params&lt;/b&gt;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private final Sinks.Many&amp;lt;String&amp;gt; errorSink;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;private volatile boolean isClosing = false;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1801" width="400" height="199" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-49" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ClientMcpTransport&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MCP Client 传输层接口，&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;Mono&amp;lt;Void&amp;gt; connect(Function&amp;lt;Mono&amp;lt;McpSchema.JSONRPCMessage&amp;gt;, Mono&amp;lt;McpSchema.JSONRPCMessage&amp;gt;&amp;gt; handler);&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1681" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-56" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="hHCyR-FWDm8NR4kneMoq-52" target="hHCyR-FWDm8NR4kneMoq-55" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3383" y="570" />
              <mxPoint x="3383" y="700" />
              <mxPoint x="740" y="700" />
              <mxPoint x="740" y="895" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-59" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-52" target="hHCyR-FWDm8NR4kneMoq-58" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3383" y="570" />
              <mxPoint x="3383" y="700" />
              <mxPoint x="260" y="700" />
              <mxPoint x="260" y="940" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-64" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="hHCyR-FWDm8NR4kneMoq-52" target="hHCyR-FWDm8NR4kneMoq-60" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-52" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public StdioMcpSessionTransport() {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // Sink 类似一个缓冲池，接收从标准IO输入的数据，以及将处理结果写入标准输出&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;inboundSink&lt;/b&gt; = Sinks.many().unicast().onBackpressureBuffer();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;outboundSink&lt;/b&gt; = Sinks.many().unicast().onBackpressureBuffer();&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 至此传输通道准备完毕，创建线程池用于处理请求响应&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; this.inboundScheduler = Schedulers.fromExecutorService(&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Executors.newSingleThreadExecutor(),&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;&quot;stdio-inbound&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.outboundScheduler = Schedulers.fromExecutorService(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Executors.newSingleThreadExecutor(),&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;&quot;stdio-outbound&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 提交计划任务处理请求和响应&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;handleIncomingMessages&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 将标准输入与 inboundSink 对接&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;startInboundProcessing&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 将 outboundSink 与 标准输出对接&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;startOutboundProcessing&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=3;align=left;fontSize=10;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" vertex="1">
          <mxGeometry x="2920" y="460" width="443" height="220" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-63" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-55" target="hHCyR-FWDm8NR4kneMoq-60" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-55" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// inboundSink ---(flatMap)---&amp;gt; outboundSink&lt;/b&gt;&lt;br&gt;&lt;/font&gt;private void handleIncomingMessages() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;inboundSink&lt;/b&gt;.asFlux()&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 请求处理，handle 内部就是按消息类型分发给对应的处理器处理，处理完成后发给outboundSink&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .flatMap(message -&amp;gt; session.&lt;b&gt;handle&lt;/b&gt;(message))&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Sink 关闭的回调处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .doOnTerminate(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.outboundSink.tryEmitComplete();&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.inboundScheduler.dispose();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 开启流式处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .subscribe();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=3;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="850" width="440" height="180" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-61" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-58" target="hHCyR-FWDm8NR4kneMoq-55" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-58" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 对接 Stdio 标准输入到 inboundSink&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;private void startInboundProcessing() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (isStarted.compareAndSet(false, true)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;inboundScheduler&lt;/b&gt;.&lt;b&gt;schedule&lt;/b&gt;(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // inputStream 是标准输入流对象&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;System.in&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; reader = new BufferedReader(new InputStreamReader(&lt;b&gt;inputStream&lt;/b&gt;));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;while&lt;/b&gt; (!isClosing.get()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String line = reader.readLine();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpSchema.JSONRPCMessage &lt;b&gt;message&lt;/b&gt; = McpSchema.&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;deserializeJsonRpcMessage&lt;/b&gt;(objectMapper, line);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;        &lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 将从标准输入读取的数据反序列化后写入 inboundSink&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!this.&lt;b&gt;inboundSink&lt;/b&gt;.&lt;b&gt;tryEmitNext&lt;/b&gt;(message).isSuccess()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=3;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="280" y="800" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-60" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 对接 outboundSink 到 Stdio 标准输出&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;private void startOutboundProcessing() {&lt;/div&gt;&lt;div&gt;Function&amp;lt;Flux&amp;lt;JSONRPCMessage&amp;gt;, Flux&amp;lt;JSONRPCMessage&amp;gt;&amp;gt; &lt;b&gt;outboundConsumer&lt;/b&gt; = messages -&amp;gt; messages // @formatter:off&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .doOnSubscribe(subscription -&amp;gt; outboundReady.tryEmitValue(null))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .publishOn(outboundScheduler)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .handle((message, sink) -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (message != null &amp;amp;&amp;amp; !isClosing.get()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 序列化&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String jsonMessage = objectMapper.writeValueAsString(message);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; jsonMessage = jsonMessage.replace(&quot;\r\n&quot;, &quot;\\n&quot;).replace(&quot;\n&quot;, &quot;\\n&quot;).replace(&quot;\r&quot;, &quot;\\n&quot;);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 写标准输出流&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; synchronized (outputStream) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;outputStream&lt;/b&gt;.&lt;b&gt;write&lt;/b&gt;(jsonMessage.getBytes(StandardCharsets.UTF_8));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;outputStream&lt;/b&gt;.&lt;b&gt;write&lt;/b&gt;(&quot;\n&quot;.getBytes(StandardCharsets.UTF_8));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;outputStream&lt;/b&gt;.&lt;b&gt;flush&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 读取Sink中下一个待返回的消息&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.next(message);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else if (isClosing.get()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.complete();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .doOnComplete(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .doOnError(e -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; })&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; .map(msg -&amp;gt; (JSONRPCMessage) msg);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;outboundConsumer&lt;/b&gt;.apply(&lt;b&gt;outboundSink&lt;/b&gt;.asFlux()).subscribe();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1240" y="720" width="440" height="440" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="hHCyR-FWDm8NR4kneMoq-65" target="YsgbuwJ8QC_zMSz7Q756-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hHCyR-FWDm8NR4kneMoq-65" value="&lt;b&gt;Mcp Client&lt;br&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;和 Mcp Server 代码结构类似&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="40" y="1520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-1" target="YsgbuwJ8QC_zMSz7Q756-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-1" value="&lt;b&gt;Tool 请求处理器&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="280" y="1310" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-2" target="YsgbuwJ8QC_zMSz7Q756-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-2" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public Mono&amp;lt;Void&amp;gt; handle(McpSchema.JSONRPCMessage message) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return Mono.defer(() -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (message instanceof McpSchema.&lt;b&gt;JSONRPCResponse&lt;/b&gt; response) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else if (message instanceof McpSchema.&lt;b&gt;JSONRPCRequest&lt;/b&gt; request) {&lt;b&gt; &lt;font color=&quot;#007fff&quot;&gt;// 客户端请求处理&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(&quot;Received request: {}&quot;, request);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b&gt;handleIncomingRequest&lt;/b&gt;(request).&lt;b&gt;onErrorResume&lt;/b&gt;(error -&amp;gt; { &lt;font color=&quot;#007fff&quot;&gt;// 请求异常处理&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var errorResponse = new McpSchema.&lt;b&gt;JSONRPCResponse&lt;/b&gt;(McpSchema.JSONRPC_VERSION, request.id(), null,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new McpSchema.JSONRPCResponse.JSONRPCError(McpSchema.ErrorCodes.INTERNAL_ERROR,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; error.getMessage(), null));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return this.transport.sendMessage(errorResponse).then(Mono.empty());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }).flatMap(this.transport::&lt;b&gt;sendMessage&lt;/b&gt;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else if (message instanceof McpSchema.&lt;b&gt;JSONRPCNotification&lt;/b&gt; notification) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.warn(&quot;Received unknown message type: {}&quot;, message);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return Mono.empty();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=2;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="1200" width="680" height="280" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-4" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// inboundSink ---(flatMap)---&amp;gt; outboundSink&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;div&gt;private Mono&amp;lt;McpSchema.JSONRPCResponse&amp;gt; &lt;b&gt;handleIncomingRequest&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;McpSchema.JSONRPCRequest request) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return Mono.defer(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Mono&amp;lt;?&amp;gt; resultMono;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (McpSchema.&lt;b&gt;METHOD_INITIALIZE&lt;/b&gt;.equals(request.method())) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var handler = this.&lt;b&gt;requestHandlers&lt;/b&gt;.get(request.method());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 调用用户定义的请求处理器&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resultMono = this.exchangeSink.asMono().flatMap(exchange -&amp;gt; handler.&lt;b&gt;handle&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;exchange, request.params()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=3;align=left;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1240" y="1200" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-6" value="McpServerSession" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="800" y="1170" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-7" value="StdioServerTransportProvider" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="410" y="770" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-8" target="YsgbuwJ8QC_zMSz7Q756-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-13" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="YsgbuwJ8QC_zMSz7Q756-12" vertex="1" connectable="0">
          <mxGeometry x="0.0978" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-8" target="YsgbuwJ8QC_zMSz7Q756-25" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="740" y="1620" />
              <mxPoint x="740" y="2080" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-8" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;var stdioParams = ServerParameters.builder(&quot;java&quot;)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; .args(&quot;-jar&quot;,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;spring-ai-mcp/weather/target/weather-1.0-SNAPSHOT.jar&quot;)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; .build();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// stdioParams 是启动 MCP Server 的命令行参数指令&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;var &lt;b&gt;transport&lt;/b&gt; = new &lt;b&gt;StdioClientTransport&lt;/b&gt;(stdioParams);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1 创建 MCP 客户端, Stdio通信方式会启动 MCP server 进程&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;var client = McpClient.&lt;b&gt;sync&lt;/b&gt;(transport).&lt;b&gt;build&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 2 MCP 客户端初始化，其实是发送初始化请求&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;client.&lt;b&gt;initialize&lt;/b&gt;();&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 3 客户端发送业务请求，查询可用工具列表&lt;br&gt;&lt;/font&gt;&lt;/b&gt;ListToolsResult toolsList = client.listTools();&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 4 调用工具&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;&lt;div style=&quot;&quot;&gt;CallToolResult weatherForcastResult = client.callTool(new &lt;b&gt;CallToolRequest&lt;/b&gt;(&lt;br&gt;&amp;nbsp; &amp;nbsp; &quot;getWeatherForecastByLocation&quot;,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Map.of(&quot;latitude&quot;, &quot;47.6062&quot;, &quot;longitude&quot;, &quot;-122.3321&quot;)));&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=9;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1520" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-10" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;McpClient (I)&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;MCP Client 的接口定义，内部定义了两个实现类 AsyncSpec、SyncSpec, 分别用于实现异步和同步 MCP Client&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&amp;nbsp;static SyncSpec sync(ClientMcpTransport transport)&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;static AsyncSpec async(ClientMcpTransport transport)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="160" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-11" target="YsgbuwJ8QC_zMSz7Q756-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-16" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="YsgbuwJ8QC_zMSz7Q756-15" vertex="1" connectable="0">
          <mxGeometry x="-0.0342" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-11" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;public McpSyncClient build() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; McpClientFeatures.Sync &lt;b&gt;syncFeatures&lt;/b&gt; = new McpClientFeatures.Sync(this.clientInfo, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.capabilities, this.roots, this.toolsChangeConsumers, this.resourcesChangeConsumers, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.promptsChangeConsumers, this.loggingConsumers, this.samplingHandler);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; McpClientFeatures.Async &lt;b&gt;asyncFeatures&lt;/b&gt; = Async.fromSync(syncFeatures);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return new &lt;b&gt;McpSyncClient&lt;/b&gt;(new &lt;b&gt;McpAsyncClient&lt;/b&gt;(this.transport, this.requestTimeout, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;asyncFeatures));&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=9;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="760" y="1520" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-20" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-14" target="YsgbuwJ8QC_zMSz7Q756-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-14" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;前面流程和 MCP Server 的流程大同小异&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;只关注客户端连接会话的创建&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;this.mcpSession = new McpClientSession(requestTimeout, transport, requestHandlers, notificationHandlers);&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=9;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1240" y="1540" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-22" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-19" target="YsgbuwJ8QC_zMSz7Q756-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-19" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// connect 逻辑看右边，这里的lambda 表达式用于处理Server响应&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;this.connection = this.transport.&lt;b&gt;connect&lt;/b&gt;(mono -&amp;gt; mono.doOnNext(message -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (message instanceof McpSchema.&lt;b&gt;JSONRPCResponse&lt;/b&gt; response) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(&quot;Received Response: {}&quot;, response);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var sink = pendingResponses.remove(response.id());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (sink == null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.warn(&quot;Unexpected response for unkown id {}&quot;, response.id());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.success(response);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else if (message instanceof McpSchema.&lt;b&gt;JSONRPCRequest&lt;/b&gt; request) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(&quot;Received request: {}&quot;, request);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleIncomingRequest(request).subscribe(response -&amp;gt; &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;transport.sendMessage(response).subscribe(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; error -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var errorResponse = new McpSchema.JSONRPCResponse(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&amp;nbsp;&lt;/span&gt;&amp;nbsp;McpSchema.JSONRPC_VERSION, request.id(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; null, new McpSchema.JSONRPCResponse.JSONRPCError(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpSchema.ErrorCodes.INTERNAL_ERROR, error.getMessage(), null));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transport.sendMessage(errorResponse).subscribe();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else if (message instanceof McpSchema.&lt;b&gt;JSONRPCNotification&lt;/b&gt; notification) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(&quot;Received notification: {}&quot;, notification);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleIncomingNotification(notification).subscribe(null,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; error -&amp;gt; logger.error(&quot;Error handling notification: {}&quot;, error.getMessage()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;})).&lt;b&gt;subscribe&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;// 真正启动连接操作&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1720" y="1520" width="440" height="380" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.001;exitY=0.158;exitDx=0;exitDy=0;entryX=0.996;entryY=0.085;entryDx=0;entryDy=0;exitPerimeter=0;entryPerimeter=0;" edge="1" parent="1" source="YsgbuwJ8QC_zMSz7Q756-21" target="YsgbuwJ8QC_zMSz7Q756-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="YsgbuwJ8QC_zMSz7Q756-21" target="JtFqPbFEQ1TAWQYFlSVu-8">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1710" />
              <mxPoint x="2650" y="1830" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="YsgbuwJ8QC_zMSz7Q756-21" target="JtFqPbFEQ1TAWQYFlSVu-10">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1710" />
              <mxPoint x="2650" y="1640" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-12" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="JtFqPbFEQ1TAWQYFlSVu-11">
          <mxGeometry x="0.5745" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-21" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// Mcp&amp;nbsp;Stdio 客户端连接 Mcp Stdio Server 的原理，是先启动 Stdio Server 进程&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;public Mono&amp;lt;Void&amp;gt; &lt;b&gt;connect&lt;/b&gt;(Function&amp;lt;Mono&amp;lt;JSONRPCMessage&amp;gt;, Mono&amp;lt;JSONRPCMessage&amp;gt;&amp;gt; handler) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return Mono.&amp;lt;Void&amp;gt;fromRunnable(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleIncomingMessages(&lt;b&gt;handler&lt;/b&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleIncomingErrors();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 这一部分代码是通过 ProcessBuilder 启动 Stdio Server 进程&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// ProcessBuilder 是 JDK1.5 开始提供的功能，用于创建一个进程&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#cc0066&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 注意单元测试中执行，进程无法正常启动&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;String&amp;gt; fullCommand = new ArrayList&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fullCommand.add(&lt;b&gt;params&lt;/b&gt;.getCommand());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fullCommand.addAll(params.getArgs());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;ProcessBuilder&lt;/b&gt; processBuilder = this.getProcessBuilder();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; processBuilder.&lt;b&gt;command&lt;/b&gt;(fullCommand);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; processBuilder.&lt;b&gt;environment&lt;/b&gt;().putAll(params.getEnv());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Start the process&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1 创建并启动线程&lt;/font&gt;&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.process = processBuilder.&lt;b&gt;start&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; catch (IOException e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new RuntimeException(&quot;Failed to start process with command: &quot; + fullCommand, e);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// Sink 和 标准输入输出绑定，和 Mcp Server 实现基本相同&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startInboundProcessing();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startOutboundProcessing();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; startErrorProcessing();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }).subscribeOn(Schedulers.boundedElastic());&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2200" y="1520" width="440" height="380" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-23" value="StdioClientTransport" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2355" y="1490" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-28" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="YsgbuwJ8QC_zMSz7Q756-25" target="YsgbuwJ8QC_zMSz7Q756-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-25" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;public McpSchema.InitializeResult &lt;b&gt;initialize&lt;/b&gt;() {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return (McpSchema.InitializeResult)this.delegate.&lt;b&gt;initialize&lt;/b&gt;().&lt;b&gt;block&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=9;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="760" y="2050" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="YsgbuwJ8QC_zMSz7Q756-27" target="JtFqPbFEQ1TAWQYFlSVu-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-27" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public Mono&amp;lt;McpSchema.InitializeResult&amp;gt; initialize() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String latestVersion = this.protocolVersions.get(this.protocolVersions.size() - 1);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; McpSchema.InitializeRequest initializeRequest = new McpSchema.&lt;b&gt;InitializeRequest&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; latestVersion,&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;this.clientCapabilities,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;this.clientInfo);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; // 发送初始化请求，&lt;/b&gt;&lt;/font&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;METHOD_INITIALIZE&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Mono&amp;lt;McpSchema.InitializeResult&amp;gt; &lt;b&gt;result&lt;/b&gt; = this.&lt;b&gt;mcpSession&lt;/b&gt;.&lt;b&gt;sendRequest&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; McpSchema.&lt;b&gt;METHOD_INITIALIZE&lt;/b&gt;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; initializeRequest, new TypeReference&amp;lt;McpSchema.InitializeResult&amp;gt;() {&lt;span style=&quot;background-color: initial;&quot;&gt;});&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;result&lt;/b&gt;.flatMap(&lt;b&gt;initializeResult&lt;/b&gt; -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.serverCapabilities = initializeResult.capabilities();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.serverInfo = initializeResult.serverInfo();&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;...&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!this.protocolVersions.contains(initializeResult.protocolVersion())) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//&amp;nbsp; 发送&amp;nbsp;METHOD_NOTIFICATION_INITIALIZED&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return this.&lt;b&gt;mcpSession&lt;/b&gt;.&lt;b&gt;sendNotification&lt;/b&gt;(McpSchema&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;.&lt;b&gt;METHOD_NOTIFICATION_INITIALIZED&lt;/b&gt;, null)&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.doOnSuccess(v -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.initialized.set(true);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.initializedSink.tryEmitValue(initializeResult);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }).thenReturn(initializeResult);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=2;align=left;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1240" y="1920" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="YsgbuwJ8QC_zMSz7Q756-30" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;这每次连接都新建一个进程么？&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2680" y="1470" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-1" value="McpAsyncClient" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1405" y="1890" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="JtFqPbFEQ1TAWQYFlSVu-2" target="JtFqPbFEQ1TAWQYFlSVu-7">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2200" y="2080.0000000000005" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-2" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;public &amp;lt;T&amp;gt; Mono&amp;lt;T&amp;gt; &lt;b&gt;sendRequest&lt;/b&gt;(String method, Object requestParams, TypeReference&amp;lt;T&amp;gt; typeRef) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; String requestId = this.generateRequestId();&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 这个 Mono 流在调用前面的 .block() 方法后启动处理&lt;/b&gt;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; return Mono.&amp;lt;McpSchema.JSONRPCResponse&amp;gt;&lt;b&gt;create&lt;/b&gt;(sink -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#cc0066&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 暴露出去后在哪里填充的响应数据？TODO&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;pendingResponses&lt;/b&gt;.put(requestId, sink);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 9px;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 发送&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;InitializeRequest 请求&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpSchema.JSONRPCRequest jsonrpcRequest = new McpSchema.&lt;b&gt;JSONRPCRequest&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; McpSchema.JSONRPC_VERSION, method,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;requestId, requestParams);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;transport&lt;/b&gt;.&lt;b&gt;sendMessage&lt;/b&gt;(jsonrpcRequest) &lt;font color=&quot;#007fff&quot;&gt;// 返回 Mono&amp;lt;Void&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .subscribe(v -&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }, error -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.pendingResponses.remove(requestId);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.error(error);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; })&lt;br&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;timeout&lt;/b&gt;(this.requestTimeout)&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 处理响应,&amp;nbsp; jsonRpcResponse 哪里来的？或许是通过上面 pendingResponses 暴露出去后在某个地方填充的数据&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;handle&lt;/b&gt;((&lt;b&gt;jsonRpcResponse&lt;/b&gt;, sink) -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (jsonRpcResponse.error() != null) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.error(new McpError(jsonRpcResponse.error()));&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;else {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (typeRef.getType().equals(Void.class)) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.complete();&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;else {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sink.next(this.transport.&lt;b&gt;unmarshalFrom&lt;/b&gt;(jsonRpcResponse.result(), typeRef));&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=2;align=left;fontSize=9;" vertex="1" parent="1">
          <mxGeometry x="1720" y="1920" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-7" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public Mono&amp;lt;Void&amp;gt; sendMessage(JSONRPCMessage message) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (this.&lt;b style=&quot;font-size: 10px;&quot;&gt;outboundSink&lt;/b&gt;.&lt;b style=&quot;font-size: 10px;&quot;&gt;tryEmitNext&lt;/b&gt;(message).isSuccess()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return Mono.empty();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return Mono.error(new RuntimeException(&quot;Failed to enqueue message&quot;));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=3;fillColor=#d5e8d4;strokeColor=#82b366;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="2200" y="1920" width="440" height="110" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-8" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;startOutbounProcessing():&lt;br&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;用于将客户端 outboundSink 数据写入左边建立 process 的 outputStream 对象中 （stdin）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;var os = this.process.getOutputStream();&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;os.write(jsonMessage.getBytes(StandardCharsets.UTF_8));&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;&lt;b&gt;startInboundProcessing()：&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;用于从 process的 inputStream 对象中读取数据，并写入 inboundSink (stdout)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;BufferedReader processReader = new BufferedReader(new InputStreamReader(&lt;br&gt;&amp;nbsp; &amp;nbsp; process.getInputStream()))&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;this.inboundSink.tryEmitNext(message)&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#330033&quot;&gt;&lt;b&gt;startErrorProcessing():&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;用于从 process的 errorStream 对象中读取数据，并写入&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;errorSink (stderr)&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="2680" y="1760" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-10" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 启动时如果没有设置标准输入输出重定向，启动线程时貌似会自动分配文件描述符 (本地方法)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 然后在后续 initStreams() 中为自动分配的文件描述符创建&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;ProcessPipeOutputStream、ProcessPipeInputStream&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;case LINUX:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case BSD:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 如果不设置重定向的话，默认所有文件描述符都是 -1, 即 NullOutputStream，数据会被丢弃&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stdin = (fds[0] == -1) ?&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ProcessBuilder.NullOutputStream.INSTANCE :&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new &lt;b style=&quot;font-size: 10px;&quot;&gt;ProcessPipeOutputStream&lt;/b&gt;(fds[0]);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stdout = (fds[1] == -1 || forceNullOutputStream) ?&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ProcessBuilder.NullInputStream.INSTANCE :&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;new &lt;b style=&quot;font-size: 10px;&quot;&gt;ProcessPipeInputStream&lt;/b&gt;(fds[1]);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stderr = (fds[2] == -1) ?&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ProcessBuilder.NullInputStream.INSTANCE :&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;new &lt;b style=&quot;font-size: 10px;&quot;&gt;ProcessPipeInputStream&lt;/b&gt;(fds[2]);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;arcSize=1;align=left;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2680" y="1520" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="JtFqPbFEQ1TAWQYFlSVu-13" value="推测自动分配的文件描述符，已经和进程内部的 System.in System.out 等已经对接好了&lt;br&gt;&lt;br&gt;McpClient&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;McpServer&lt;br&gt;outboundSink&amp;nbsp; ---&amp;gt;&amp;nbsp; stdin (ProcessPipeOutputStream)&amp;nbsp; ---&amp;gt;&amp;nbsp; System.in&lt;br&gt;inboundSink&amp;nbsp; &amp;nbsp; &amp;lt;---&amp;nbsp; &amp;nbsp;stdout (ProcessPipeInputStream)&amp;nbsp; &amp;lt;---&amp;nbsp; System.out&lt;br&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="3140" y="1520" width="410" height="70" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

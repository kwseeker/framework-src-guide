<mxfile host="Electron" modified="2025-01-06T10:51:31.853Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="7JH4ndMbqbcK42opCjXl" version="21.6.5" type="device">
  <diagram name="第 1 页" id="izBIhQpx-2ScXlvfTuXi">
    <mxGraphModel dx="3487" dy="1099" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="eTmY12HWwnGh1onovJNR-1" value="&lt;font style=&quot;&quot;&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;Seata DataSourceProxy工作原理 (v2.0.0)&lt;/b&gt;&lt;br&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="40" y="10" width="330" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-2" target="eTmY12HWwnGh1onovJNR-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-2" value="相关的Seata客户端自动配置类&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;SeataDataSourceAutoConfiguration&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="40" y="170" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-3" target="eTmY12HWwnGh1onovJNR-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-3" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;默认会注册这么一个Bean，它继承spring-aop 的 AbstractAutoProxyCreator，用于给指定的bean创建动态代理&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;@&lt;b style=&quot;font-size: 10px;&quot;&gt;Bean&lt;/b&gt;(BEAN_NAME_SEATA_AUTO_DATA_SOURCE_PROXY_CREATOR)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;@ConditionalOnMissingBean(SeataAutoDataSourceProxyCreator.class)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;public static SeataAutoDataSourceProxyCreator &lt;b style=&quot;font-size: 10px;&quot;&gt;seataAutoDataSourceProxyCreator&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;SeataProperties seataProperties) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return new &lt;b&gt;SeataAutoDataSourceProxyCreator&lt;/b&gt;(seataProperties.isUseJdkProxy(),&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; seataProperties.getExcludesForAutoProxying(), &lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;seataProperties.getDataSourceProxyMode());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="280" y="120" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-5" target="eTmY12HWwnGh1onovJNR-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-5" value="&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;public Object &lt;b style=&quot;font-size: 11px;&quot;&gt;postProcessAfterInitialization&lt;/b&gt;(@Nullable Object bean, String beanName) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (bean != null) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object cacheKey = this.getCacheKey(bean.getClass(), beanName);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (this.earlyProxyReferences.remove(cacheKey) != bean) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 经过这步生成原数据源Bean的动态代理Bean&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return this.&lt;b style=&quot;font-size: 11px;&quot;&gt;wrapIfNecessary&lt;/b&gt;(bean, beanName, cacheKey);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; return bean; &lt;font color=&quot;#007fff&quot;&gt;// 后续会将数据源Bean替换为动态代理Bean&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=4;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="760" y="120" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-7" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;AbstractAutoProxyCreator 本质是一个 BeanPostProcessor,&amp;nbsp; &lt;br&gt;重写了postProcessAfterInitialization，&lt;br&gt;实现在Bean初始化后为指定的Bean创建代理对象&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="280" y="280" width="360" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-8" value="AbstractAutoProxyCreator" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="900" y="90" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-9" target="eTmY12HWwnGh1onovJNR-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-21" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-9" target="eTmY12HWwnGh1onovJNR-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-9" value="&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!(bean instanceof &lt;b style=&quot;font-size: 10px;&quot;&gt;DataSource&lt;/b&gt;)) {&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//只针对 DataSource 类型Bean创建代理&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; //bean 是非 SeataDataSourceProxy 类型&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!(bean instanceof &lt;b style=&quot;font-size: 10px;&quot;&gt;SeataDataSourceProxy&lt;/b&gt;)) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1 调用 AbstractAutoProxyCreator 创建动态代理对象&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object enhancer = super.&lt;b style=&quot;font-size: 10px;&quot;&gt;wrapIfNecessary&lt;/b&gt;(bean, beanName, cacheKey);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 没有再次生成代理才会相等，可能这个Bean不需要生成代理或者之前已生成了代理&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (bean == enhancer) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;// 走到这里一定生成了代理&lt;/font&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataSource origin = (DataSource) bean;&lt;/span&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&amp;nbsp;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; // 2&amp;nbsp; 原数据源对象则是封装到 DataSourceProxy 中存储到 DataSourceProxyHolder&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SeataDataSourceProxy proxy = &lt;b style=&quot;font-size: 10px;&quot;&gt;buildProxy&lt;/b&gt;(origin, dataSourceProxyMode);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataSourceProxyHolder.&lt;b&gt;put&lt;/b&gt;(origin, proxy);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.info(&quot;Auto proxy data source &#39;{}&#39; by &#39;{}&#39; mode.&quot;, beanName, dataSourceProxyMode);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;// 返回动态代理对象&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b style=&quot;font-size: 10px;&quot;&gt;enhancer&lt;/b&gt;;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;//bean 是 SeataDataSourceProxy 类型，下面的过程获取被代理的bean重新生成代理Bean，官方不建议这么做&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; LOGGER.warn(&quot;Manually register SeataDataSourceProxy(or its subclass) bean is discouraged! bean name: {}&quot;, beanName);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; SeataDataSourceProxy proxy = (SeataDataSourceProxy) bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; DataSource origin = proxy.getTargetDataSource();&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; Object originEnhancer = super.wrapIfNecessary(origin, beanName, cacheKey);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (origin == originEnhancer) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return origin;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; DataSourceProxyHolder.put(origin, proxy);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return originEnhancer;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=2;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="1241" y="120" width="439" height="440" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-11" value="SeataAutoDataSourceProxyCreator" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1356" y="90" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-18" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-12" target="eTmY12HWwnGh1onovJNR-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-12" value="&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;protected Object &lt;b&gt;wrapIfNecessary&lt;/b&gt;(Object bean, String beanName, Object cacheKey) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; if (StringUtils.hasLength(beanName) &amp;amp;&amp;amp;&lt;br&gt;&amp;nbsp; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;this.&lt;b&gt;targetSourcedBeans&lt;/b&gt;.contains(beanName)) { &lt;font color=&quot;#007fff&quot;&gt;// targetSourcedBeans 记录已经&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; } else if (Boolean.FALSE.equals(this.&lt;b&gt;advisedBeans&lt;/b&gt;.get(cacheKey))) { &lt;font color=&quot;#007fff&quot;&gt;// advisedBeans中记录已经判断过是否需要生成代理的Bean名&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; } &lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // bean 类型是否不是 Advice Pointcut Advisor 且不需要跳过代理生成（Bean名以.&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;ORIGINAL结尾的Bean不需要生成代理&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;）&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; else if (!this.&lt;b&gt;isInfrastructureClass&lt;/b&gt;(bean.getClass()) &amp;amp;&amp;amp; &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;!this.&lt;b&gt;shouldSkip&lt;/b&gt;(bean.getClass(), beanName)) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 查找当前类型对应的增强逻辑定义拦截器，即查 advisors&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&amp;nbsp;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object[] specificInterceptors = this.&lt;b&gt;getAdvicesAndAdvisorsForBean&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; bean.getClass(), beanName, (TargetSource)null);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (specificInterceptors != DO_NOT_PROXY) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;advisedBeans&lt;/b&gt;.put(cacheKey, Boolean.TRUE);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 1 创建动态代理&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object proxy = this.&lt;b&gt;createProxy&lt;/b&gt;(bean.getClass(), beanName, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;specificInterceptors&lt;/b&gt;, new &lt;b&gt;SingletonTargetSource&lt;/b&gt;(bean));&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;proxyTypes&lt;/b&gt;.put(cacheKey, proxy.getClass());&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return proxy;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;advisedBeans&lt;/b&gt;.put(cacheKey, Boolean.FALSE);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;advisedBeans&lt;/b&gt;.put(cacheKey, Boolean.FALSE);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=2;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1720" y="120" width="440" height="440" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-14" value="AbstractAutoProxyCreator" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1860" y="90" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-17" value="&lt;font style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;通过 ProxyFactory 创建代理对象&lt;/b&gt;，&lt;br&gt;如果只是看 DataSourceProxy 原理，不需要继续深入，想了解 AOP 创建代理对象原理可以继续深入,不过内部还是挺复杂的，这里暂时不深入了&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="2200" y="300" width="200" height="80" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-19" value="&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;SeataDataSourceProxy buildProxy(DataSource origin, String proxyMode) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; if (BranchType.&lt;b&gt;AT&lt;/b&gt;.name().equalsIgnoreCase(proxyMode)) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new &lt;b&gt;DataSourceProxy&lt;/b&gt;(origin);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; if (BranchType.&lt;b&gt;XA&lt;/b&gt;.name().equalsIgnoreCase(proxyMode)) {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new &lt;b&gt;DataSourceProxyXA&lt;/b&gt;(origin);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; throw new IllegalArgumentException(&quot;Unknown dataSourceProxyMode: &quot; + proxyMode);&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=4;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1720" y="600" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-24" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractAutoProxyCreator&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected static final Object[] DO_NOT_PROXY = null;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected static final Object[] PROXY_WITHOUT_ADDITIONAL_INTERCEPTORS = new Object[0];&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private AdvisorAdapterRegistry advisorAdapterRegistry = &lt;br&gt;&amp;nbsp; &amp;nbsp; GlobalAdvisorAdapterRegistry.getInstance();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private boolean freezeProxy = false;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private String[] interceptorNames = new String[0];&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private boolean applyCommonInterceptorsFirst = true;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private TargetSourceCreator[] customTargetSourceCreators;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private BeanFactory beanFactory;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final Set&amp;lt;String&amp;gt; &lt;b&gt;targetSourcedBeans&lt;/b&gt; = Collections.newSetFromMap(new ConcurrentHashMap(16));&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final Map&amp;lt;Object, Object&amp;gt; earlyProxyReferences = new ConcurrentHashMap(16);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 记录 beanName -&amp;gt; 生成的代理类型&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final Map&amp;lt;Object, Class&amp;lt;?&amp;gt;&amp;gt; &lt;b&gt;proxyTypes&lt;/b&gt; = new ConcurrentHashMap(16);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// advisedBeans中记录已经判断过是否需要生成代理的Bean名，value为true表示需要生成代理&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final Map&amp;lt;Object, Boolean&amp;gt; &lt;b&gt;advisedBeans&lt;/b&gt; = new ConcurrentHashMap(256);&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="120" width="480" height="320" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-25" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;SeataAutoDataSourceProxyCreator&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); font-weight: 400; margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 排除的Bean名，不会为这些Bean创建代理&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); font-weight: 400; margin: 0px 0px 0px 4px;&quot;&gt;private final Set&amp;lt;String&amp;gt; excludes;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 数据源代理模式，用于决定 SeataAutoDataSourceProxyAdvice行为&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;，比如 AT&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private final String &lt;/span&gt;dataSourceProxyMode&lt;span style=&quot;font-weight: 400;&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;// Seata 默认的 Advisor 实现是 DefautlIntroducationAdvisor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private final Object[] &lt;/span&gt;advisors&lt;span style=&quot;font-weight: 400;&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1" vertex="1" parent="1">
          <mxGeometry x="-520" y="120" width="480" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-30" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-26" target="eTmY12HWwnGh1onovJNR-28">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-26" target="eTmY12HWwnGh1onovJNR-29">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-26" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;SeataAutoDataSourceProxyAdvice&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 数据源代理通知逻辑&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//分支事务模式，比如 AT&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private final BranchType &lt;/span&gt;branchType&lt;span style=&quot;font-weight: 400;&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//通知增强逻辑通过一组接口定义&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-weight: 400;&quot;&gt;private final Class&amp;lt;?&amp;gt;[] &lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;attachedInterfaces&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-weight: 400;&quot;&gt; = new Class[]{&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SeataProxy&lt;/span&gt;&lt;span style=&quot;background-color: initial; font-weight: 400;&quot;&gt;.class};&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Seata 通过实现此方法为被代理对象拓展增强逻辑&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;Object &lt;/span&gt;invoke&lt;span style=&quot;font-weight: normal;&quot;&gt;(MethodInvocation var1) throws Throwable;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-520" y="760" width="480" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-27" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;SeataProxy&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;空接口&lt;/font&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="760" width="480" height="80" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-28" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;MethodInterceptor&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Spring AOP 方法拦截器，用于定义增强逻辑&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;Object invoke(MethodInvocation var1) throws Throwable;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-520" y="640" width="480" height="80" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-29" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;IntroductionInfo&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 中定义的获取一组增强逻辑类的接口&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;Class&amp;lt;?&amp;gt;[] getInterfaces();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="640" width="480" height="80" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-34" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-32" target="eTmY12HWwnGh1onovJNR-33">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-32" value="&lt;b style=&quot;font-size: 11px;&quot;&gt;SeataAutoDataSourceProxyAdvice&lt;/b&gt;#&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;invoke&lt;/b&gt;()&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;这个方法就是Seata对数据源操作的增强逻辑入口&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="40" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-43" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.803;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;exitPerimeter=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-33" target="eTmY12HWwnGh1onovJNR-37">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="280" y="698" />
              <mxPoint x="-20" y="698" />
              <mxPoint x="-20" y="1020" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-44" value="&lt;font color=&quot;#007fff&quot;&gt;查找&lt;/font&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="eTmY12HWwnGh1onovJNR-43">
          <mxGeometry x="-0.8845" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-33" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;public Object &lt;b&gt;invoke&lt;/b&gt;(MethodInvocation invocation) throws Throwable {&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 判断是否需要全局锁、是否需要全局事务，不需要的话直接调用业务逻辑处理&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!inExpectedContext()) {&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return invocation.proceed();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; Method method = invocation.getMethod();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; String name = method.getName();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt;[] parameterTypes = method.getParameterTypes();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; Method declared;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; declared = DataSource.class.&lt;b&gt;getDeclaredMethod&lt;/b&gt;(name, parameterTypes);&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (NoSuchMethodException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return invocation.&lt;b&gt;proceed&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//非DataSouce方法不需要代理处理&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // switch invoke instance to its proxy&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; DataSource &lt;b&gt;origin&lt;/b&gt; = (DataSource) invocation.getThis();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 查找原数据源对应的 DataSourceProxy 对象&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; SeataDataSourceProxy proxy = &lt;b&gt;DataSourceProxyHolder&lt;/b&gt;.&lt;b&gt;get&lt;/b&gt;(origin);&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; Object[] args = invocation.getArguments();&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 调用 DataSourceProxy 对象对应 DataSource 方法&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; return declared.&lt;b&gt;invoke&lt;/b&gt;(&lt;b&gt;proxy&lt;/b&gt;, args);&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=2;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="280" y="440" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-41" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-35" target="eTmY12HWwnGh1onovJNR-26">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-35" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;DefaultIntroductionAdvisor&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;AOP Advisor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这里 advice 就是 seataAutoDataSourceProxyAdvice&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-weight: normal;&quot;&gt;private final Advice&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; advice;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private final Set&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt; &lt;/span&gt;interfaces&lt;span style=&quot;font-weight: 400;&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private int &lt;/span&gt;order&lt;span style=&quot;font-weight: 400;&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-520" y="440" width="480" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-39" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-36" target="eTmY12HWwnGh1onovJNR-38">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-36" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;DataSourceProxy&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 数据源代理，注意这个不是数据源动态代理对象，&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;它也不是借助 AOP CgLib 实现的，它是通过装饰器模式硬编码的方式在数据源方法前后拓展事务处理逻辑的&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;比如通过 ConnectionProxy 为连接操作拓展事务处理包括向TC注册RM信息、记录UndoLog等等。&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private static final String DEFAULT_RESOURCE_GROUP_ID = &quot;DEFAULT&quot;;&lt;/span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String resourceGroupId;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String jdbcUrl;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String resourceId;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String dbType;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String userName;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String kernelVersion;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private String productVersion;&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;public ConnectionProxy &lt;/span&gt;getConnection&lt;span style=&quot;font-weight: normal;&quot;&gt;(String username, String password) throws SQLException&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="1120" width="480" height="280" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-40" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-37" target="eTmY12HWwnGh1onovJNR-36">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-37" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;DataSourceProxyHolder&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 数据源代理对象容器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 原数据源对象 -&amp;gt; DataSourceProxy 或&amp;nbsp;DataSourceProxyXA&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;private static final Map&amp;lt;&lt;/span&gt;DataSource&lt;span style=&quot;font-weight: normal;&quot;&gt;, &lt;/span&gt;SeataDataSourceProxy&lt;span style=&quot;font-weight: normal;&quot;&gt;&amp;gt; &lt;/span&gt;PROXY_MAP&lt;span style=&quot;font-weight: normal;&quot;&gt; = new HashMap&amp;lt;&amp;gt;(4);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-520" y="960" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-38" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;AbstractDataSourceProxy&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;间接实现 DataSource 接口&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 代理的原数据源对象，是生成动态代理对象前的数据源对象&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;protected DataSource &lt;/span&gt;targetDataSource&lt;span style=&quot;font-weight: normal;&quot;&gt;;&amp;nbsp;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1040" y="960" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-42" value="&lt;font style=&quot;font-size: 14px;&quot; color=&quot;#007fff&quot;&gt;从上面流程可以看到关于数据源有三个对象：原DataSource对象、DataSouce动态代理对象(默认CGLib生成)、DataSourceProxy,&lt;br&gt;根据下面流程可知，&lt;b&gt;调用过程：DataSource动态代理对象 -&amp;gt; DataSourceProxy -&amp;gt; 原DataSource对象&lt;br&gt;DataSource动态代理对象主要就仅仅只是为了查找 DataSourceProxy&lt;br&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="280" y="360" width="820" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#007FFF;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-45" target="eTmY12HWwnGh1onovJNR-47">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-45" value="&lt;b&gt;DataSourceProxy#getConnection()&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;数据源代理对连接的增强&lt;/font&gt;&lt;br&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="40" y="860" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-46" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;ConnectionProxy&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;连接代理&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionContext context = new ConnectionContext();&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//重试策略&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private final LockRetryPolicy &lt;/span&gt;lockRetryPolicy&lt;span style=&quot;font-weight: 400;&quot;&gt; = new LockRetryPolicy(this);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;private static final int &lt;/span&gt;REPORT_RETRY_COUNT&lt;span style=&quot;font-weight: 400;&quot;&gt; = ConfigurationFactory.getInstance().getInt(&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&amp;nbsp; &amp;nbsp; ConfigurationKeys.CLIENT_REPORT_RETRY_COUNT, &lt;br&gt;&amp;nbsp; &amp;nbsp; DEFAULT_CLIENT_REPORT_RETRY_COUNT);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;public static final boolean &lt;/span&gt;IS_REPORT_SUCCESS_ENABLE&lt;span style=&quot;font-weight: 400;&quot;&gt; = ConfigurationFactory&lt;br&gt;&amp;nbsp; &amp;nbsp; .getInstance().getBoolean(&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color); margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE);&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fontStyle=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-520" y="1440" width="480" height="280" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-50" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-47" target="eTmY12HWwnGh1onovJNR-49">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-47" value="&lt;div&gt;public ConnectionProxy &lt;b&gt;getConnection&lt;/b&gt;(String username, String password) throws SQLException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Connection targetConnection = targetDataSource.&lt;b&gt;getConnection&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;username, password);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return new &lt;b&gt;ConnectionProxy&lt;/b&gt;(this, targetConnection);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" vertex="1" parent="1">
          <mxGeometry x="280" y="840" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-52" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-49" target="eTmY12HWwnGh1onovJNR-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-60" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-49" target="eTmY12HWwnGh1onovJNR-59">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-49" value="&lt;div&gt;ConnectionProxy 对连接操作的事务扩展&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="760" y="860" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-54" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-51" target="eTmY12HWwnGh1onovJNR-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-51" value="&lt;div&gt;ConnectionProxy#commit()&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=center;arcSize=8;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1000" y="860" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-56" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-53" target="eTmY12HWwnGh1onovJNR-55">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-53" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 拓展了重试、全局事务提交、全局锁提交&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;public void commit() throws SQLException {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; lockRetryPolicy.&lt;b style=&quot;font-size: 10px;&quot;&gt;execute&lt;/b&gt;(() -&amp;gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;doCommit&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (SQLException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (targetConnection != null &amp;amp;&amp;amp; !getAutoCommit() &amp;amp;&amp;amp; !getContext().isAutoCommitChanged()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;rollback&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new SQLException(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="1240" y="860" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-58" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="eTmY12HWwnGh1onovJNR-55" target="eTmY12HWwnGh1onovJNR-57">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-55" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;private void doCommit() throws SQLException {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (context.inGlobalTransaction()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &lt;/span&gt;&lt;/span&gt;//全局事务场景下提交&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;processGlobalTransactionCommit&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } else if (context.isGlobalLockRequire()) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//全局锁场景下提交&lt;span style=&quot;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;processLocalCommitWithGlobalLocks&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; targetConnection.commit();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="1720" y="900" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-57" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;private void processGlobalTransactionCommit() throws SQLException {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;register&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//向TC注册分支事务信息&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recognizeLockKeyConflictException(e, context.buildLockKeys());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//记录用于回滚的撤销日志 UndoLog&lt;/font&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UndoLogManagerFactory.getUndoLogManager(this.getDbType()).&lt;b&gt;flushUndoLogs&lt;/b&gt;(this);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//调用原连接执行sql commit&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;targetConnection&lt;/b&gt;.&lt;b&gt;commit&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (Throwable ex) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.error(&quot;process connectionProxy commit error: {}&quot;, ex.getMessage(), ex);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;report&lt;/b&gt;(false);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new SQLException(ex);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (IS_REPORT_SUCCESS_ENABLE) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 上报分支事务提交成功&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;report&lt;/b&gt;(true);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; context.&lt;b&gt;reset&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" vertex="1" parent="1">
          <mxGeometry x="2200" y="830" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="eTmY12HWwnGh1onovJNR-59" value="&lt;div&gt;... 其他 ...&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=center;arcSize=8;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1000" y="1000" width="200" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

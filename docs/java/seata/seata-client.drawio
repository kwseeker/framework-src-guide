<mxfile host="Electron" modified="2025-01-07T17:07:44.217Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="2Td1IV0OKdNRYoHAyQpw" version="21.6.5" type="device">
  <diagram name="第 1 页" id="ECAK8obHmiqlfb0R2ePZ">
    <mxGraphModel dx="4742" dy="879" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="kNiJTSY86d62wiCeH5WG-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.002;entryY=0.596;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;entryPerimeter=0;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-15" target="wSo7G-n1GvkOMipySxWi-53" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4570" y="2390" />
              <mxPoint x="4570" y="1590" />
              <mxPoint x="4599" y="1590" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-12" value="&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;将结果写到 Future&lt;/font&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-11" vertex="1" connectable="0">
          <mxGeometry x="-0.9902" relative="1" as="geometry">
            <mxPoint x="44" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-1" value="&lt;h1 style=&quot;font-size: 16px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Seata Client (RM、TM) 工作原理 (v2.0.0)&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;业务服务作为 Seata 客户端，其实主要是引入了Seata RM TM 组件；需要引入 seata-spring-boot-starter、以及一种Seata支持的通信组件（比如：seata-http、seata-grpc、seata-dubbo等）&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="620" height="70" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-13" target="B-ogbO4VTmOX_G0U6ick-8" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="500" y="470" />
              <mxPoint x="500" y="550" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-4" target="B-ogbO4VTmOX_G0U6ick-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-38" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-4" target="B-ogbO4VTmOX_G0U6ick-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-4" value="&lt;b&gt;Server端自动配置&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-7" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="760" y="470" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-36" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-7" target="B-ogbO4VTmOX_G0U6ick-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-7" value="一组配置属性&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;包括&lt;b style=&quot;font-size: 10px;&quot;&gt;客户端负载均衡、锁配置、RM配置、TM配置、Service配置、Undo日志配置、Undo日志压缩配置、Saga配置、TCC配置等&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-8" value="SeataClientEnvironmentPostProcessor" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-10" value="SeataProperties" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-11" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-4" target="B-ogbO4VTmOX_G0U6ick-13" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="240" y="150" as="sourcePoint" />
            <mxPoint x="520" y="230" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-13" target="B-ogbO4VTmOX_G0U6ick-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-34" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-13" target="B-ogbO4VTmOX_G0U6ick-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-13" value="seata-spring-autoconfigure-client&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;由seata-spring-boot-starter间接引入&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="440" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-16" target="B-ogbO4VTmOX_G0U6ick-21" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="500" y="710" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-16" target="B-ogbO4VTmOX_G0U6ick-30" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-52" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-16" target="B-ogbO4VTmOX_G0U6ick-51" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-16" value="seata-spring-autoconfigure-&lt;b&gt;core&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;由seata-spring-autoconfigure-client引入&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="680" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-17" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-21" target="B-ogbO4VTmOX_G0U6ick-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-18" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-21" target="B-ogbO4VTmOX_G0U6ick-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-21" target="B-ogbO4VTmOX_G0U6ick-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-20" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-21" target="B-ogbO4VTmOX_G0U6ick-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-21" value="一组配置属性&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;包括&lt;b&gt;配置中心配置、注册中心配置、日志配置、关机配置、线程工厂配置、通信配置&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="680" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-22" value="ConfigProperties&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;配置前缀seata.config&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="680" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-23" value="ConfigNacosProperties&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;配置前缀seata.config.nacos&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="760" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-24" value="RegistryProperties&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;配置前缀seata.registry&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="840" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-25" value="RegistryNacosProperties&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;配置前缀seata.registry.nacos&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="920" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-26" value="SpringCloudAlibabaConfiguration" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-27" value="&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="40" y="220" width="20" height="30" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-28" value="&lt;font color=&quot;#007fff&quot;&gt;主要就是从配置文件加载一些配置&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;并注册到 StarterConstants.&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;PROPERTY_BEAN_MAP&lt;/b&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;代码调试时可以通过这个常量查看实际加载的配置&lt;/span&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="200" y="510" width="280" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-82" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-29" target="B-ogbO4VTmOX_G0U6ick-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-29" value="&lt;b&gt;调用 @GlobalTransactional 注释的方法&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="1050" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-30" value="SeataCoreEnvironmentPostProcessor" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="760" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-32" value="SeataSpringFenceAutoConfiguration&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;TCC fence 配置&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="600" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-40" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-37" target="B-ogbO4VTmOX_G0U6ick-39" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-44" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-37" target="B-ogbO4VTmOX_G0U6ick-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-45" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-37" target="B-ogbO4VTmOX_G0U6ick-43" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-46" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-37" target="B-ogbO4VTmOX_G0U6ick-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-37" value="seata-spring-boot-starter" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-39" target="B-ogbO4VTmOX_G0U6ick-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-39" value="SeataAutoConfiguration" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-41" target="kNiJTSY86d62wiCeH5WG-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-41" value="SeataDataSourceAutoConfiguration" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-42" value="SeataSagaAutoConfiguration" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wC2xZ4anNi33C-H_c2z2-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-43" target="wC2xZ4anNi33C-H_c2z2-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-43" value="SeataHttpAutoConfiguration" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-50" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-47" target="B-ogbO4VTmOX_G0U6ick-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-47" value="注册的一些重要的 Bean" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-55" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-49" target="B-ogbO4VTmOX_G0U6ick-54" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-72" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-49" target="B-ogbO4VTmOX_G0U6ick-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-49" value="GlobalTransactionScanner" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1000" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-51" value="SeataCoreAutoConfiguration&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;注册Bean SpringApplicationContextProvider&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="520" y="840" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-53" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;GlobalTransactionScanner&amp;nbsp;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: center; font-size: 11px;&quot;&gt;extends AbstractAutoProxyCreator&lt;/div&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;//&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final int AT_MODE = 1;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;//&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final int MT_MODE = 2;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final int ORDER_NUM = 1024;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;//&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final int &lt;b&gt;DEFAULT_MODE&lt;/b&gt; = AT_MODE + MT_MODE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Spring 事务拦截器类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final String &lt;b&gt;SPRING_TRANSACTION_INTERCEPTOR_CLASS_NAME&lt;/b&gt; = &quot;org.springframework.transaction.interceptor.TransactionInterceptor&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final Set&amp;lt;String&amp;gt; &lt;b&gt;PROXYED_SET&lt;/b&gt; = new HashSet&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final Set&amp;lt;String&amp;gt; &lt;b&gt;EXCLUDE_BEAN_NAME_SET&lt;/b&gt; = new HashSet&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final Set&amp;lt;ScannerChecker&amp;gt; &lt;b&gt;SCANNER_CHECKER_SET&lt;/b&gt; = new LinkedHashSet&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static ConfigurableListableBeanFactory beanFactory;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 方法拦截器&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private MethodInterceptor &lt;b&gt;interceptor&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;//&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final String &lt;b&gt;applicationId&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;//&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final String &lt;b&gt;txServiceGroup&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static String accessKey;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static String secretKey;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private volatile boolean disableGlobalTransaction = ConfigurationFactory.getInstance().getBoolean(&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION, DEFAULT_DISABLE_GLOBAL_TRANSACTION);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final AtomicBoolean initialized = new AtomicBoolean(false);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final FailureHandler failureHandlerHook;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private ApplicationContext applicationContext;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final Set&amp;lt;String&amp;gt; NEED_ENHANCE_BEAN_NAME_SET = new HashSet&amp;lt;&amp;gt;();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 方法注释有 @&lt;b&gt;GlobalTransactional&lt;/b&gt; 的 Bean 会在初始化后置处理中被 wrapIfNecessary 包装为一个动态代理类&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="120" width="440" height="560" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-57" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-54" target="B-ogbO4VTmOX_G0U6ick-56" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-54" value="&lt;b&gt;afterPropertiesSet&lt;/b&gt;()&amp;nbsp;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现了InitializingBean接口在&lt;br&gt;初始化后执行, &lt;b&gt;会启动两个 Netty 客户端&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1240.5" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-59" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-56" target="B-ogbO4VTmOX_G0U6ick-58" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-56" value="&lt;div&gt;if (disableGlobalTransaction) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1 注册配置监听器，监听配置变更并处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ConfigurationFactory.getInstance().&lt;b&gt;addConfigListener&lt;/b&gt;(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;(CachedConfigurationChangeListener) this);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;if (initialized.compareAndSet(false, true)) {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 2 初始化Seata客户端&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;initClient&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;this.findBusinessBeanNamesNeededEnhancement();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;arcSize=4;align=left;" parent="1" vertex="1">
          <mxGeometry x="1480" y="120" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-61" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-58" target="B-ogbO4VTmOX_G0U6ick-60" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-63" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-58" target="B-ogbO4VTmOX_G0U6ick-62" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-58" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 检查 applicationId 和 txServiceGroup&lt;br&gt;&lt;/font&gt;if (StringUtils.isNullOrEmpty(applicationId) || StringUtils.isNullOrEmpty(txServiceGroup)) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; throw new IllegalArgumentException(String.format(&quot;applicationId: %s, txServiceGroup: %s&quot;, applicationId, txServiceGroup));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//初始化事务管理器&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;TMClient.init(applicationId, txServiceGroup, accessKey, secretKey);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//初始化资源管理器&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;RMClient.init(applicationId, txServiceGroup);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;注册关闭钩子，TODO&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;registerSpringShutdownHook();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;arcSize=4;align=left;" parent="1" vertex="1">
          <mxGeometry x="1960" y="120" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-71" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-60" target="wSo7G-n1GvkOMipySxWi-70" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-60" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 初始化 Netty Client&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;TmNettyRemotingClient &lt;b&gt;tmNettyRemotingClient&lt;/b&gt; = TmNettyRemotingClient.getInstance(&lt;br&gt;&amp;nbsp; &amp;nbsp; applicationId, transactionServiceGroup, accessKey, secretKey);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 初始化过程中会创建到指定事务服务分组所有TC的连接（会发送 RegisterTMRequest 请求注册 TM）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;tmNettyRemotingClient.&lt;b&gt;init&lt;/b&gt;();&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;arcSize=12;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2440" y="120" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-62" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;RmNettyRemotingClient &lt;b&gt;rmNettyRemotingClient&lt;/b&gt; = RmNettyRemotingClient.getInstance(&lt;br&gt;&amp;nbsp; &amp;nbsp; applicationId, transactionServiceGroup);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;rmNettyRemotingClient.setResourceManager(DefaultResourceManager.get());&lt;/div&gt;&lt;div style=&quot;&quot;&gt;rmNettyRemotingClient.setTransactionMessageHandler(DefaultRMHandler.get());&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 初始化过程中会创建到指定 事务服务分组所有TC的连接（会发送 RegisterRMRequest 请求注册 RM）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;rmNettyRemotingClient.&lt;b&gt;init&lt;/b&gt;();&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;arcSize=14;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2440" y="240" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-64" target="wSo7G-n1GvkOMipySxWi-29" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-740" y="359.9999999999999" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-64" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TmNettyRemotingClient&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;事务管理器的Netty客户端，事务管理器TM借助此客户端向参与者发送请求；&lt;br&gt;单例对象&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static volatile TmNettyRemotingClient &lt;b&gt;instance&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final long KEEP_ALIVE_TIME = Integer.MAX_VALUE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int MAX_QUEUE_SIZE = 2000;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicBoolean initialized = new AtomicBoolean(false);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;//&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;applicationId&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 事务服务分组&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;transactionServiceGroup&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AuthSigner signer;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String accessKey;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String secretKey;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="440" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-30" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-65" target="wSo7G-n1GvkOMipySxWi-29" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-65" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RmNettyRemotingClient&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;资源管理器的Netty客户端，单例对象&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;//&amp;nbsp;&lt;br&gt;private ResourceManager resourceManager;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static volatile RmNettyRemotingClient instance;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicBoolean initialized = new AtomicBoolean(false);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final long KEEP_ALIVE_TIME = Integer.MAX_VALUE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int MAX_QUEUE_SIZE = 20000;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String applicationId;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String transactionServiceGroup;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-960" y="440" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-66" value="&lt;font color=&quot;#007fff&quot;&gt;AbstractAutoProxyCreator 实现&amp;nbsp;BeanPostProcessor 接口&lt;br&gt;应用初始化阶段会通过后置处理接口方法调用到 &lt;br&gt;&lt;b&gt;wrapIfNecessary&lt;/b&gt;(Object bean, String beanName, Object cacheKey)&amp;nbsp;&lt;br&gt;实现对 Bean 的增强&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-455" y="50" width="390" height="70" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-69" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-67" target="B-ogbO4VTmOX_G0U6ick-68" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1461" y="390" />
              <mxPoint x="1461" y="440" />
              <mxPoint x="1460" y="440" />
              <mxPoint x="1460" y="560" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-67" value="&lt;b&gt;wrapIfNecessary&lt;/b&gt;(Object bean, String beanName, Object cacheKey)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现了PostProcessor 接口在&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;初始化后置处理中会调用&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1241" y="360" width="199" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-68" value="&lt;div&gt;synchronized (PROXYED_SET) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (PROXYED_SET.contains(beanName)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; interceptor = null;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // SPI(EnhancedServiceLoader) 扫描 &lt;b&gt;InterfaceParser&lt;/b&gt; 实现，创建对应的代理增强类&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ProxyInvocationHandler &lt;b&gt;proxyInvocationHandler&lt;/b&gt; = DefaultInterfaceParser.get()&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;.&lt;b&gt;parserInterfaceToProxy&lt;/b&gt;(bean, beanName);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (proxyInvocationHandler == null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 这一步将 Seata 代理增强类封装成 Spring AOP 标准的 MethodInterceptor 接口类型&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;interceptor&lt;/b&gt; = new &lt;b&gt;AdapterSpringSeataInterceptor&lt;/b&gt;(proxyInvocationHandler);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!AopUtils.isAopProxy(bean)) { &lt;font color=&quot;#007fff&quot;&gt;// bean不是AOP 代理对象&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;    &lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 借助&amp;nbsp;AbstractAutoProxyCreator#wrapIfNecessary&lt;/font&gt;&lt;/b&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;方法创建动态代理类&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bean = super.&lt;b&gt;wrapIfNecessary&lt;/b&gt;(bean, beanName, cacheKey);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt;// bean是AOP 代理对象&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AdvisedSupport advised = SpringProxyUtils.getAdvisedSupport(bean);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Advisor[] advisor = buildAdvisors(beanName, getAdvicesAndAdvisorsForBean(null, null, null));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int pos;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (Advisor avr : advisor) {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pos = findAddSeataAdvisorPosition(advised, avr);&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; advised.addAdvisor(pos, avr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; PROXYED_SET.add(beanName);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return bean;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;arcSize=1;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1480" y="360" width="440" height="400" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-76" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-73" target="B-ogbO4VTmOX_G0U6ick-75" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-79" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-73" target="B-ogbO4VTmOX_G0U6ick-78" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-80" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="B-ogbO4VTmOX_G0U6ick-73" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1920" y="450" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1960" y="450" />
              <mxPoint x="1960" y="450" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-73" value="InterfaceParser 的实现&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;在 seata-all SPI文件中定义&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1960" y="420" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-84" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-75" target="B-ogbO4VTmOX_G0U6ick-83" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-75" value="GlobalTransactionalInterceptorParser&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;用于支持 &lt;b&gt;@GlobalTransactional&lt;/b&gt; 注解&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2200" y="360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-77" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;io.seata.integration.tx.api.interceptor.parser.GlobalTransactionalInterceptorParser&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;io.seata.rm.tcc.interceptor.parser.TccActionInterceptorParser&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1960" y="480" width="460" height="40" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-78" value="TccActionInterceptorParser&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;用于支持 &lt;b&gt;@TwoPhaseBusinessAction&lt;/b&gt; 注解&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2200" y="585" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-81" target="Kqe4ZAgK4kMcZJmsUspS-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-81" value="&lt;div&gt;public Object invoke(@Nonnull MethodInvocation invocation) throws Throwable {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; AdapterInvocationWrapper &lt;b&gt;adapterInvocationWrapper&lt;/b&gt; = new &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;b&gt;AdapterInvocationWrapper&lt;/b&gt;(invocation);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Object result = proxyInvocationHandler.&lt;b&gt;invoke&lt;/b&gt;(adapterInvocationWrapper);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return result;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="280" y="1040" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-83" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public ProxyInvocationHandler &lt;b style=&quot;font-size: 10px;&quot;&gt;parserInterfaceToProxy&lt;/b&gt;(Object target, String objectName) &lt;br style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; throws Exception {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; serviceInterface = DefaultTargetClassParser.get().findTargetClass(target);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt;[] interfacesIfJdk = DefaultTargetClassParser.get().findInterfaces(target);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (existsAnnotation(serviceInterface) || existsAnnotation(interfacesIfJdk)) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ProxyInvocationHandler proxyInvocationHandler = new &lt;b&gt;GlobalTransactionalInterceptorHandler&lt;/b&gt;(&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;FailureHandlerHolder.getFailureHandler(), methodsToProxy);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ConfigurationCache.&lt;b&gt;addConfigListener&lt;/b&gt;(ConfigurationKeys.DISABLE_GLOBAL_TRANSACTION, &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;(ConfigurationChangeListener) proxyInvocationHandler);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return proxyInvocationHandler;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=5;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="2440" y="360" width="480" height="200" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-85" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;全局事务增强处理逻辑是通过这个类定义的&lt;br&gt;GlobalTransactionalInterceptorHandler&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2930" y="430" width="250" height="40" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-89" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-87" target="B-ogbO4VTmOX_G0U6ick-88" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-87" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AdapterSpringSeataInterceptor&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;适配器，将 Seata 增强类适配为 Spring AOP 增强类&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Seata 增强逻辑类实例&lt;/font&gt;&lt;br&gt;private &lt;b&gt;ProxyInvocationHandler&lt;/b&gt; &lt;b&gt;proxyInvocationHandler&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-480" y="880" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-88" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MethodInterceptor&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Spring AOP 增强逻辑定义接口&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// Spring AOP 增强逻辑定义方法&lt;/font&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Object invoke(MethodInvocation var1) throws Throwable;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-480" y="720" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-90" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SeataInterceptor&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Seata 增强逻辑定义接口&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;void setOrder(int order);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int getOrder();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;SeataInterceptorPosition getPosition();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1000" y="720" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-92" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-91" target="B-ogbO4VTmOX_G0U6ick-90" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-91" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ProxyInvocationHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Seata 增强逻辑定义接口&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Set&amp;lt;String&amp;gt; getMethodsToProxy();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Object invoke(InvocationWrapper invocation) throws Throwable;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SeataInterceptorPosition getPosition();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1000" y="880" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-93" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;Seata 增强逻辑定义类最终需要封装成 AdapterSpringSeataInterceptor &lt;br style=&quot;font-size: 11px;&quot;&gt;这种 Spring AOP&amp;nbsp; MethodInterceptor 接口实现&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1020" width="360" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="Kqe4ZAgK4kMcZJmsUspS-1" target="B-ogbO4VTmOX_G0U6ick-91" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="B-ogbO4VTmOX_G0U6ick-95" target="Kqe4ZAgK4kMcZJmsUspS-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="B-ogbO4VTmOX_G0U6ick-95" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;GlobalTransactionalInterceptorHandler&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;/font&gt;&amp;nbsp;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final TransactionalTemplate &lt;b style=&quot;font-size: 11px;&quot;&gt;transactionalTemplate&lt;/b&gt; = new TransactionalTemplate();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final GlobalLockTemplate &lt;b&gt;globalLockTemplate&lt;/b&gt; = new GlobalLockTemplate();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private Set&amp;lt;String&amp;gt; &lt;b&gt;methodsToProxy&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 是否关闭分布式事务，配置参数 service.disableGlobalTransaction&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private volatile boolean &lt;b&gt;disable&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 降级检查？TODO&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final AtomicBoolean ATOMIC_DEGRADE_CHECK = new AtomicBoolean(false);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static volatile Integer degradeNum = 0;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static volatile Integer reachNum = 0;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static int degradeCheckAllowTimes;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;protected AspectTransactional aspectTransactional;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static int degradeCheckPeriod;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static int defaultGlobalTransactionTimeout = 0;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final FailureHandler failureHandler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static final EventBus EVENT_BUS = new GuavaEventBus(&lt;br&gt;&amp;nbsp; &amp;nbsp; &quot;degradeCheckEventBus&quot;, true);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private static volatile ScheduledThreadPoolExecutor executor;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;关键方法&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected Object doInvoke(InvocationWrapper invocation) throws Throwable&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1000" y="1200" width="480" height="360" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractProxyInvocationHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;//&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected int order = Integer.MAX_VALUE;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;//&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public Object invoke(InvocationWrapper invocation) throws Throwable&amp;nbsp;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1000" y="1040" width="480" height="120" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-6" value="AdapterSpringSeataInterceptor" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="405" y="1010" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-11" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Kqe4ZAgK4kMcZJmsUspS-7" target="Kqe4ZAgK4kMcZJmsUspS-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-7" value="&lt;div&gt;public Object invoke(InvocationWrapper invocation) throws Throwable {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (CollectionUtils.isNotEmpty(getMethodsToProxy()) &amp;amp;&amp;amp; &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; !getMethodsToProxy().contains(invocation.getMethod().getName())) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return invocation.&lt;b&gt;proceed&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;doInvoke&lt;/b&gt;(invocation);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="760" y="1040" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-9" value="AbstractProxyInvocationHandler" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="885" y="1010" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Kqe4ZAgK4kMcZJmsUspS-10" target="wSo7G-n1GvkOMipySxWi-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="Kqe4ZAgK4kMcZJmsUspS-10" target="wSo7G-n1GvkOMipySxWi-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-10" value="&lt;div&gt;protected Object &lt;b&gt;doInvoke&lt;/b&gt;(InvocationWrapper invocation) throws Throwable {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; targetClass = invocation.getTarget().getClass();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 查找实例方法&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Method specificMethod = ClassUtils.getMostSpecificMethod(invocation.getMethod(), targetClass);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 不存在此实例方法或是Object中实现的方法，不需要事务控制&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;specificMethod != null &amp;amp;&amp;amp;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; !specificMethod.getDeclaringClass().equals(Object.class)&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // @GlobalTransactional 注解&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final GlobalTransactional &lt;b&gt;globalTransactionalAnnotation&lt;/b&gt; = getAnnotation(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; specificMethod, targetClass, GlobalTransactional.class);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// @GlobalLock 注解&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final GlobalLock &lt;b&gt;globalLockAnnotation&lt;/b&gt; = getAnnotation(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; specificMethod, targetClass, GlobalLock.class);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean &lt;b&gt;localDisable&lt;/b&gt; = disable || (ATOMIC_DEGRADE_CHECK.get() &amp;amp;&amp;amp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; degradeNum &amp;gt;= degradeCheckAllowTimes);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;!localDisable&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (globalTransactionalAnnotation != null || this.aspectTransactional != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AspectTransactional transactional;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (globalTransactionalAnnotation != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;transactional&lt;/b&gt; = new &lt;b&gt;AspectTransactional&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.timeoutMills(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.name(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.rollbackFor(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.rollbackForClassName(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.noRollbackFor(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.noRollbackForClassName(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.propagation(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.lockRetryInterval(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.lockRetryTimes(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; globalTransactionalAnnotation.lockStrategyMode());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactional = this.aspectTransactional;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b&gt;handleGlobalTransaction&lt;/b&gt;(invocation, &lt;b&gt;transactional&lt;/b&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else if (&lt;b&gt;globalLockAnnotation != null&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 2&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b&gt;handleGlobalLock&lt;/b&gt;(invocation, globalLockAnnotation);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return invocation.proceed();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="1240" y="1040" width="440" height="600" as="geometry" />
        </mxCell>
        <mxCell id="Kqe4ZAgK4kMcZJmsUspS-12" value="GlobalTransactionalInterceptorHandler" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1346" y="1010" width="230" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-1" target="wSo7G-n1GvkOMipySxWi-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-1" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;Object &lt;b style=&quot;font-size: 10px;&quot;&gt;handleGlobalTransaction&lt;/b&gt;(final InvocationWrapper methodInvocation,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;final AspectTransactional &lt;b&gt;aspectTransactional&lt;/b&gt;) throws Throwable {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; boolean succeed = true;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 1&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return &lt;b style=&quot;font-size: 10px;&quot;&gt;transactionalTemplate&lt;/b&gt;.&lt;b style=&quot;font-size: 10px;&quot;&gt;execute&lt;/b&gt;(new TransactionalExecutor() {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public Object &lt;b style=&quot;font-size: 10px;&quot;&gt;execute&lt;/b&gt;() throws Throwable {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return methodInvocation.&lt;b&gt;proceed&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public String name() {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String name = aspectTransactional.getName();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!StringUtils.isNullOrEmpty(name)) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return name;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return formatMethod(methodInvocation.getMethod());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // AspectTransactional 转成 TransationInfo&lt;/font&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public TransactionInfo &lt;b style=&quot;font-size: 10px;&quot;&gt;getTransactionInfo&lt;/b&gt;() {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // reset the value of timeout&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int timeout = aspectTransactional.getTimeoutMills();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (timeout &amp;lt;= 0 || timeout == DEFAULT_GLOBAL_TRANSACTION_TIMEOUT) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; timeout = defaultGlobalTransactionTimeout;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionInfo &lt;b&gt;transactionInfo&lt;/b&gt; = new TransactionInfo();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setTimeOut(timeout);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setName(name());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setPropagation(aspectTransactional.getPropagation());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setLockRetryInterval(&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; aspectTransactional.getLockRetryInterval());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setLockRetryTimes(aspectTransactional.getLockRetryTimes());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setLockStrategyMode(&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; aspectTransactional.getLockStrategyMode());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set&amp;lt;RollbackRule&amp;gt; rollbackRules = new LinkedHashSet&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (Class&amp;lt;?&amp;gt; rbRule : aspectTransactional.getRollbackFor()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rollbackRules.add(new RollbackRule(rbRule));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (String rbRule : aspectTransactional.getRollbackForClassName()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rollbackRules.add(new RollbackRule(rbRule));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (Class&amp;lt;?&amp;gt; rbRule : aspectTransactional.getNoRollbackFor()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rollbackRules.add(new NoRollbackRule(rbRule));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (String rbRule : aspectTransactional.getNoRollbackForClassName()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rollbackRules.add(new NoRollbackRule(rbRule));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; transactionInfo.setRollbackRules(rollbackRules);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return transactionInfo;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&quot;white-space: pre; font-size: 10px;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// execute end&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionalExecutor.ExecutionException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 事务执行异常处理&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GlobalTransaction globalTransaction = e.getTransaction();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If Participant, just throw the exception to original.&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (globalTransaction.getGlobalTransactionRole() == Participant) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e.getOriginalException();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionalExecutor.Code code = e.getCode();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Throwable cause = e.getCause();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean timeout = isTimeoutException(cause);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; switch (code) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case RollbackDone:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (timeout) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw cause;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e.getOriginalException();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case BeginFailure:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; succeed = false;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; failureHandler.onBeginFailure(globalTransaction, cause);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw cause;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case CommitFailure:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; succeed = false;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; failureHandler.onCommitFailure(globalTransaction, cause);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw cause;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case RollbackFailure:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; failureHandler.onRollbackFailure(globalTransaction, e.getOriginalException());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e.getOriginalException();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case Rollbacking:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; failureHandler.onRollbacking(globalTransaction, e.getOriginalException());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (timeout) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw cause;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw e.getOriginalException();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new ShouldNeverHappenException(String.format(&quot;Unknown TransactionalExecutor.Code: %s&quot;, code), e.getOriginalException());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (ATOMIC_DEGRADE_CHECK.get()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EVENT_BUS.post(new DegradeCheckEvent(succeed));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="1720" y="1040" width="440" height="1200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-3" value="" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=12;" parent="1" vertex="1">
          <mxGeometry x="1720" y="2280" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.003;exitY=0.758;exitDx=0;exitDy=0;entryX=1.002;entryY=0.084;entryDx=0;entryDy=0;entryPerimeter=0;fillColor=#dae8fc;strokeColor=#6c8ebf;exitPerimeter=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="wSo7G-n1GvkOMipySxWi-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="wSo7G-n1GvkOMipySxWi-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1640" />
              <mxPoint x="2650" y="1160" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-58" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-10" vertex="1" connectable="0">
          <mxGeometry x="-0.9533" y="-3" relative="1" as="geometry">
            <mxPoint x="7" y="-478" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.003;exitY=0.045;exitDx=0;exitDy=0;entryX=1;entryY=0.21;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="wSo7G-n1GvkOMipySxWi-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2190" y="1094" />
              <mxPoint x="2190" y="1292" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="ukPbdNcd3ReersfSq2Jl-2" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1640" />
              <mxPoint x="2650" y="1740" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-4" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-3" vertex="1" connectable="0">
          <mxGeometry x="0.8305" relative="1" as="geometry">
            <mxPoint x="-8" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="ukPbdNcd3ReersfSq2Jl-8" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1640" />
              <mxPoint x="2650" y="2320" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-10" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-9" vertex="1" connectable="0">
          <mxGeometry y="-3" relative="1" as="geometry">
            <mxPoint x="13" y="330" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-63" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-5" target="ukPbdNcd3ReersfSq2Jl-14" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="1640" />
              <mxPoint x="2650" y="3110" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-64" value="5" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-63" vertex="1" connectable="0">
          <mxGeometry x="0.4375" y="-2" relative="1" as="geometry">
            <mxPoint x="2" y="29" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-5" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;public Object execute(TransactionalExecutor &lt;b&gt;business&lt;/b&gt;) throws Throwable {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1. Get transactionInfo&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; TransactionInfo txInfo = business.getTransactionInfo();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (txInfo == null) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new ShouldNeverHappenException(&quot;transactionInfo does not exist&quot;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1.1 从ThreadLocal获取当前已经存在的分布式事务，如果不为null，当前线程一定是参与者&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; GlobalTransaction &lt;b&gt;tx&lt;/b&gt; = GlobalTransactionContext.&lt;b&gt;getCurrent&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1.2 Handle the transaction propagation.&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Propagation propagation = txInfo.&lt;b&gt;getPropagation&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; SuspendedResourcesHolder suspendedResourcesHolder = null;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; switch (propagation) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case NOT_SUPPORTED:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If transaction is existing, suspend it.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (existingTransaction(tx)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; suspendedResourcesHolder = tx.suspend(false);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Execute without transaction and return.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return business.execute();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case REQUIRES_NEW:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 当前如果存在事务则挂起，然后新创建一个事务&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;existingTransaction&lt;/b&gt;(tx)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; suspendedResourcesHolder = tx.&lt;b&gt;suspend&lt;/b&gt;(false);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx = GlobalTransactionContext.&lt;b&gt;createNew&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Continue and execute with new transaction&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case SUPPORTS:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If transaction is not existing, execute without transaction.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (notExistingTransaction(tx)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return business.execute();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Continue and execute with new transaction&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case &lt;b&gt;REQUIRED&lt;/b&gt;: &lt;font color=&quot;#007fff&quot;&gt;// 默认传播级别&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 获取当前全局事务实例，不存在则创建，创建是直接 new&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;DefaultGlobalTransaction()&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx = GlobalTransactionContext.&lt;b&gt;getCurrentOrCreate&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case NEVER:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If transaction is existing, throw exception.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (existingTransaction(tx)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionException(...&lt;span style=&quot;background-color: initial;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Execute without transaction and return.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return business.execute();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case MANDATORY:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // If transaction is not existing, throw exception.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (notExistingTransaction(tx)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionException(&quot;No existing transaction found for transaction marked with propagation &#39;mandatory&#39;&quot;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Continue and execute with current transaction.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionException(&quot;Not Supported Propagation:&quot; + propagation);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 设置当前全局事务的配置到 GlobalLockConfigHolder&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GlobalLockConfig previousConfig = replaceGlobalLockConfig(txInfo);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (tx.getGlobalTransactionRole() == GlobalTransactionRole.Participant) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.info(&quot;join into a existing global transaction,xid={}&quot;, tx.getXid());&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 2. 事务发起者发送事务开启请求到TC, 如果当前业务不是事务发起者则不做任何事&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;beginTransaction&lt;/b&gt;(txInfo, tx);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object rs;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 3. 执行分布式事务内部逻辑&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;rs&lt;/b&gt; = business.&lt;b&gt;execute&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Throwable ex) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 4. 分布式事务回滚或提交(有些异常可能不需要回滚)，回滚的话就是让TC向所有事务参与者发送Rollback指令，让所有分支事务回滚&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;completeTransactionAfterThrowing&lt;/b&gt;(txInfo, tx, ex);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw ex;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 5. 分布式事务提交，即让TC向所有事务参与者发送Commit指令，让所有分支事务提交&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;commitTransaction&lt;/b&gt;(tx, txInfo);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;return&lt;/b&gt; &lt;b&gt;rs&lt;/b&gt;;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 6. clear&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resumeGlobalLockConfig(previousConfig);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; triggerAfterCompletion(tx);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cleanUp();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 恢复之前的分布式事务&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (suspendedResourcesHolder != null) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx.&lt;b&gt;resume&lt;/b&gt;(suspendedResourcesHolder);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="2200" y="1040" width="440" height="1200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-7" value="TransactionalTemplate" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2350" y="1010" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-21" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-9" target="wSo7G-n1GvkOMipySxWi-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-9" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void &lt;b&gt;beginTransaction&lt;/b&gt;(TransactionInfo txInfo, GlobalTransaction tx) throws TransactionalExecutor.ExecutionException {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 非事务发起者直接返回&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (tx.getGlobalTransactionRole() != GlobalTransactionRole.&lt;b&gt;Launcher&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;...&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 执行&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;TransactionHookManager中注册的&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;事务开始前置钩子&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;triggerBeforeBegin&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx.&lt;b&gt;begin&lt;/b&gt;(txInfo.getTimeOut(), txInfo.getName());&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;// 执行TransactionHookManager中注册的事务开始后置钩子&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;triggerAfterBegin&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionException txe) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionalExecutor.ExecutionException(tx, txe,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionalExecutor.Code.BeginFailure);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2680" y="1040" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-11" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;调用栈：&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;invoke:45, &lt;b&gt;AdapterSpringSeataInterceptor&lt;/b&gt; (io.seata.spring.annotation)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;proceed:186, ReflectiveMethodInvocation (org.springframework.aop.framework)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;proceed:747, CglibAopProxy$CglibMethodInvocation (org.springframework.aop.framework)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;intercept:689, CglibAopProxy$DynamicAdvisedInterceptor (org.springframework.aop.framework)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;createOrder:-1, &lt;b&gt;OrderServiceImpl&lt;/b&gt;$$&lt;b&gt;EnhancerBySpringCGLIB&lt;/b&gt;$$7959300 (cn.iocoder.springboot.lab52.orderservice.service)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;createOrder:26, OrderController (cn.iocoder.springboot.lab52.orderservice.controller)&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1120" width="580" height="100" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-13" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AspectTransactional&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;分布式事务的配置&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;timeoutMills&lt;/b&gt; =&amp;nbsp; &lt;br&gt;&amp;nbsp; &amp;nbsp; DefaultValues.DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;name&lt;/b&gt; = &quot;&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class&amp;lt;? extends Throwable&amp;gt;[] &lt;b&gt;rollbackFor&lt;/b&gt; = new Class[] {};&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String[] &lt;b&gt;rollbackForClassName&lt;/b&gt; = {};&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Class&amp;lt;? extends Throwable&amp;gt;[] &lt;b&gt;noRollbackFor&lt;/b&gt; = new Class[] {};&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String[] &lt;b&gt;noRollbackForClassName&lt;/b&gt; = {};&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Propagation &lt;b&gt;propagation&lt;/b&gt; = Propagation.REQUIRED;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int &lt;b&gt;lockRetryInterval&lt;/b&gt; = 0;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int &lt;b&gt;lockRetryTimes&lt;/b&gt; = -1;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;LockStrategyMode &lt;b&gt;lockStrategyMode&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1200" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-14" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TransactionInfo&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;分布式事务的配置信息，数据基本来自 AspectTransactional&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int timeOut;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String name;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 可以通过自定义 RollbackRule 定义对哪些异常不回滚&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Set&amp;lt;RollbackRule&amp;gt; &lt;b&gt;rollbackRules&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// Seata 支持 Spring 事务传递&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Propagation propagation;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int lockRetryInterval;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int lockRetryTimes;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private LockStrategyMode lockStrategyMode;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1480" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-15" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;GlobalTransaction&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;全局事务接口（包括事务操作、获取事务属性）&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void begin() throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void begin(int timeout) throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void begin(int timeout, String name) throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void commit() throws TransactionException;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void rollback() throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;SuspendedResourcesHolder suspend() throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void resume(SuspendedResourcesHolder suspendedResourcesHolder) throws TransactionException;&lt;br&gt;GlobalStatus getStatus() throws TransactionException;&lt;br&gt;String getXid();&lt;br&gt;void globalReport(GlobalStatus globalStatus) throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;GlobalStatus getLocalStatus();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;GlobalTransactionRole getGlobalTransactionRole();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getCreateTime();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1480" y="1200" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-18" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-17" target="wSo7G-n1GvkOMipySxWi-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-17" target="wSo7G-n1GvkOMipySxWi-25" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-17" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DefaultGlobalTransaction&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;全局事务默认实现&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int DEFAULT_GLOBAL_TX_TIMEOUT = 60000;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final String DEFAULT_GLOBAL_TX_NAME = &quot;default&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 事务管理器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private TransactionManager &lt;b&gt;transactionManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;xid&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private GlobalStatus &lt;b&gt;status&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private GlobalTransactionRole &lt;b&gt;role&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 事务开始时间&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private long &lt;b&gt;createTime&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int &lt;b&gt;COMMIT_RETRY_COUNT&lt;/b&gt; = ConfigurationFactory.getInstance()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;.getInt(&lt;span style=&quot;background-color: initial;&quot;&gt;ConfigurationKeys.CLIENT_TM_COMMIT_RETRY_COUNT, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DEFAULT_TM_COMMIT_RETRY_COUNT);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int &lt;b&gt;ROLLBACK_RETRY_COUNT&lt;/b&gt; = ConfigurationFactory.getInstance()&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;.getInt(&lt;span style=&quot;background-color: initial;&quot;&gt;ConfigurationKeys.CLIENT_TM_ROLLBACK_RETRY_COUNT, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DEFAULT_TM_ROLLBACK_RETRY_COUNT);&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1480" y="1480" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-19" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TransactionHookManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;事务流程扩展钩子，扩展点，TransactionHook 可以在事务开始前后、提交前后、回滚前后，结束后拓展处理逻辑&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final ThreadLocal&amp;lt;List&amp;lt;TransactionHook&amp;gt;&amp;gt; &lt;b&gt;LOCAL_HOOKS&lt;/b&gt; = new ThreadLocal&amp;lt;&amp;gt;();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1720" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-28" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-20" target="wSo7G-n1GvkOMipySxWi-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-20" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public void &lt;b&gt;begin&lt;/b&gt;(int timeout, String name) throws TransactionException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;createTime&lt;/b&gt; = System.currentTimeMillis();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (role != GlobalTransactionRole.&lt;b&gt;Launcher&lt;/b&gt;) { &lt;font color=&quot;#007fff&quot;&gt;//发起者才能启动全局事务&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertXIDNotNull();&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ... 检查当前线程上下文中事务ID必须为空 ...&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 借助&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;TmNettyRemotingClient向事务参与者发送启动全局事务的同步请求&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;xid&lt;/b&gt; = &lt;b&gt;transactionManager&lt;/b&gt;.&lt;b&gt;begin&lt;/b&gt;(null, null, name, timeout);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 标记全局事务为开始状态&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;status&lt;/b&gt; = GlobalStatus.&lt;b&gt;Begin&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RootContext.&lt;b&gt;bind&lt;/b&gt;(xid);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (LOGGER.isInfoEnabled()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.info(&quot;Begin new global transaction [{}]&quot;, xid);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="3160" y="1040" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-22" value="DefaultGlobalTransaction" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3300" y="1010" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-34" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-23" target="wSo7G-n1GvkOMipySxWi-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-35" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-34" vertex="1" connectable="0">
          <mxGeometry x="-0.1167" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-23" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public String begin(String applicationId, String transactionServiceGroup, String name, int timeout)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; throws TransactionException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; GlobalBeginRequest &lt;b&gt;request&lt;/b&gt; = new &lt;b&gt;GlobalBeginRequest&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; request.setTransactionName(name);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; request.setTimeout(timeout);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 发送全局事务开始的同步请求，&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;GlobalBeginRequest&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; GlobalBeginResponse &lt;b&gt;response&lt;/b&gt; = (GlobalBeginResponse) &lt;b&gt;syncCall&lt;/b&gt;(request);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (response.getResultCode() == ResultCode.Failed) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TmTransactionException(TransactionExceptionCode.BeginFailed, &lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; response.getMsg());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return response.&lt;b&gt;getXid&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="3640" y="1040" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-24" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TransactionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;事务管理器，负责向全局事务参与者发送事务控制请求，&lt;/b&gt;不是事务的容器，事务实例都是存储在线程本地的；&lt;br&gt;&lt;b&gt;事务管理器也是通过 SPI 机制加载的，静态内部类实现的单例模式。&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;String &lt;b&gt;begin&lt;/b&gt;(String applicationId, String transactionServiceGroup, String name, int timeout)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;throws TransactionException;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GlobalStatus &lt;b&gt;commit&lt;/b&gt;(String xid) throws TransactionException;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GlobalStatus &lt;b&gt;rollback&lt;/b&gt;(String xid) throws TransactionException;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;GlobalStatus getStatus(String xid) throws TransactionException;&lt;br&gt;GlobalStatus globalReport(String xid, GlobalStatus globalStatus) throws TransactionException;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1960" y="1200" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-27" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-25" target="wSo7G-n1GvkOMipySxWi-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-25" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DefaultTransactionManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;事务管理器，负责借助TmNettyRemotingClient&lt;/font&gt;&lt;/b&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;向全局事务参与者发送事务控制请求：GlobalBeginRequest、GlobalCommitRequest、GlobalRollbackRequest、GlobalStatusRequest、GlobalReportRequest&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1960" y="1480" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-29" target="kNiJTSY86d62wiCeH5WG-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-29" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;AbstractNettyRemotingClient&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;Netty 客户端抽象实现，和 RocketMQ 中 Netty 封装的数据结构类似，不详细说明了&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final String MSG_ID_PREFIX = &quot;msgId:&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final String FUTURES_PREFIX = &quot;futures:&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final String SINGLE_LOG_POSTFIX = &quot;;&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final int MAX_MERGE_SEND_MILLS = 1;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final String THREAD_PREFIX_SPLIT_CHAR = &quot;_&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final int MAX_MERGE_SEND_THREAD = 1;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final long KEEP_ALIVE_TIME = Integer.MAX_VALUE;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final long SCHEDULE_DELAY_MILLS = 60 * 1000L;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final long SCHEDULE_INTERVAL_MILLS = 10 * 1000L;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private static final String MERGE_THREAD_PREFIX = &quot;rpcMergeMessageSend&quot;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;protected final Object &lt;b style=&quot;font-size: 10px;&quot;&gt;mergeLock&lt;/b&gt; = new Object();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;protected final Map&amp;lt;Integer, MergeMessage&amp;gt; &lt;b style=&quot;font-size: 10px;&quot;&gt;mergeMsgMap&lt;/b&gt; = new &lt;br style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;protected final ConcurrentHashMap&amp;lt;String/*serverAddress*/, BlockingQueue&amp;lt;RpcMessage&amp;gt;&amp;gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; basketMap&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private final NettyClientBootstrap &lt;b style=&quot;font-size: 10px;&quot;&gt;clientBootstrap&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 客户端到TC的Netty Channel 容器&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private final NettyClientChannelManager &lt;b&gt;clientChannelManager&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private final NettyPoolKey.TransactionRole &lt;b&gt;transactionRole&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private ExecutorService mergeSendExecutorService;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;private TransactionMessageHandler transactionMessageHandler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 是否允许批量发送请求，先放到篮子里面，然后被锁唤醒或者超时唤醒后由异步线程批量发送&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;protected volatile boolean &lt;b style=&quot;font-size: 10px;&quot;&gt;enableClientBatchSendRequest&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-960" y="40" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-32" value="DefaultTransactionManager" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3775" y="1010" width="170" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-37" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-33" target="wSo7G-n1GvkOMipySxWi-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-3" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-37" vertex="1" connectable="0">
          <mxGeometry x="-0.2206" y="4" relative="1" as="geometry">
            <mxPoint x="5" y="4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-41" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.002;exitY=0.052;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-33" target="wSo7G-n1GvkOMipySxWi-39" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4570" y="1068" />
              <mxPoint x="4570" y="1100" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-2" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-41" vertex="1" connectable="0">
          <mxGeometry x="0.4781" y="-4" relative="1" as="geometry">
            <mxPoint y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-54" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.001;exitY=0.964;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-33" target="wSo7G-n1GvkOMipySxWi-53" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4559" y="1561" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-4" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-54" vertex="1" connectable="0">
          <mxGeometry x="0.1612" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-33" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public Object sendSyncRequest(Object msg) throws TimeoutException {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1 根据事务服务分组选择一个Seata服务器节点地址&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String serverAddress = &lt;b&gt;loadBalance&lt;/b&gt;(getTransactionServiceGroup(), msg);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; long timeoutMillis = this.getRpcRequestTimeout();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 创建真正的请求对象，前面的请求对象并不是最终的请求对象，只是消息体&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RpcMessage &lt;b&gt;rpcMessage&lt;/b&gt; = &lt;b&gt;buildRequestMessage&lt;/b&gt;(msg, &lt;br&gt;&amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;ProtocolConstants.MSGTYPE_RESQUEST_SYNC);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;if (this.isEnableClientBatchSendRequest())&lt;/b&gt; {&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &lt;b&gt;// 批量发送请求, 将请求放到篮子中，最多每隔1ms从篮子中取一次请求批量发送（&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;MergedSendRunnable#run&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;）&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MessageFuture messageFuture = new MessageFuture();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; messageFuture.setRequestMessage(rpcMessage);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; messageFuture.setTimeout(timeoutMillis);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; futures.put(rpcMessage.getId(), messageFuture);&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BlockingQueue&amp;lt;RpcMessage&amp;gt; basket = CollectionUtils.computeIfAbsent(basketMap,&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; serverAddress,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;key -&amp;gt; new LinkedBlockingQueue&amp;lt;&amp;gt;());&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!basket.&lt;b&gt;offer&lt;/b&gt;(rpcMessage)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!isSending) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; synchronized (mergeLock) {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 2 唤醒异步线程发送&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;mergeLock&lt;/b&gt;.&lt;b&gt;notifyAll&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 异步请求同步等待&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object response = messageFuture.get(timeoutMillis, TimeUnit.MILLISECONDS);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return response;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Exception exx) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (exx instanceof TimeoutException) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw (TimeoutException)exx;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new RuntimeException(exx);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;b&gt;else&lt;/b&gt; {&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &lt;b&gt;// 3 发送单个请求&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Channel channel = clientChannelManager.&lt;b&gt;acquireChannel&lt;/b&gt;(serverAddress);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return super.&lt;b&gt;sendSync&lt;/b&gt;(channel, rpcMessage, timeoutMillis);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="4120" y="1040" width="440" height="540" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-36" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// MergedSendRunnable#run 任务线程在 &lt;b&gt;mergeLock 唤醒&lt;/b&gt;或&lt;b&gt;超时唤醒&lt;/b&gt;后从篮子中取一次请求发送&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;sendChannel = clientChannelManager.&lt;b&gt;acquireChannel&lt;/b&gt;(address);&lt;/div&gt;&lt;div&gt;AbstractNettyRemotingClient.this.&lt;b&gt;sendAsyncRequest&lt;/b&gt;(sendChannel, mergeMessage);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1280" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-38" value="MergedSendRunnable" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4750" y="1250" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-43" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-39" target="wSo7G-n1GvkOMipySxWi-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-45" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-39" target="wSo7G-n1GvkOMipySxWi-44" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-39" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 从注册中心中根据事务服务分组名查询所有活跃的TC服务节点地址列表&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;List&amp;lt;InetSocketAddress&amp;gt; inetSocketAddressList =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; RegistryFactory.&lt;b&gt;getInstance&lt;/b&gt;().&lt;b&gt;aliveLookup&lt;/b&gt;(transactionServiceGroup);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 根据配置的负载均衡算法（LoadBalanceFactory&lt;span style=&quot;background-color: initial;&quot;&gt;）&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;从列表中选择一个节点&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;// 默认的负载均衡算法是&amp;nbsp;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;XIDLoadBalance&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;address = this.&lt;b&gt;doSelect&lt;/b&gt;(inetSocketAddressList, msg);&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;return NetUtil.toStringAddress(address);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1040" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-42" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;FileRegistryServiceImpl&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;通过CURRENT_ADDRESS_MAP（ConcurrentHashMap）实现的注册服务&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="5080" y="1040" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-44" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;NacosRegistryServiceImpl&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=9;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="5080" y="1120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-46" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RpcMessage&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 事务请求数据结构&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 消息的唯一ID, 由PositiveAtomicCounter生成，就是 AtomicInteger 递增&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int &lt;b&gt;id&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 消息类型，5种&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private byte &lt;b&gt;messageType&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 序列化类型，默认是 SEATA，通过 transport.serialization 配置指定&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private byte codec;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 消息压缩方式，默认是 NONE，通过 transport.compressor 配置指定&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private byte compressor;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 请求头&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Map&amp;lt;String, String&amp;gt; &lt;b&gt;headMap&lt;/b&gt; = new HashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 请求体，后面的&amp;nbsp;GlobalBeginRequest 等等类型都是作为请求体&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Object body;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="440" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-47" value="&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;Seata Netty 请求流程和 RocketMQ 中 Netty 请求处理流程差不多&lt;br style=&quot;font-size: 10px;&quot;&gt;这里不再仔细分析内部实现了&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1340" width="320" height="40" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-52" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-50" target="wSo7G-n1GvkOMipySxWi-51" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-50" value="&lt;b&gt;AstractNettyRemotingClient$&lt;br&gt;ClientHandler&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;RPC 请求的响应处理&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="2360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-51" target="51hY2aMMj5vdDbJ8PvvR-3" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="760" y="2390" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-51" target="51hY2aMMj5vdDbJ8PvvR-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-51" target="51hY2aMMj5vdDbJ8PvvR-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-51" target="51hY2aMMj5vdDbJ8PvvR-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-11" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="wSo7G-n1GvkOMipySxWi-51" target="51hY2aMMj5vdDbJ8PvvR-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-51" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public void &lt;b&gt;channelRead&lt;/b&gt;(final ChannelHandlerContext ctx, Object msg) throws Exception {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (msg instanceof RpcMessage) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AbstractNettyRemotingClient.this.&lt;b&gt;processMessage&lt;/b&gt;(ctx, (RpcMessage)msg);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=7;" parent="1" vertex="1">
          <mxGeometry x="280" y="2350" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-74" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-53" target="wSo7G-n1GvkOMipySxWi-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-53" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;...&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;channelWritableCheck(channel, rpcMessage.getBody());&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;String remoteAddr = ChannelUtil.getAddressFromChannel(channel);&lt;/div&gt;&lt;div&gt;doBeforeRpcHooks(remoteAddr, rpcMessage);&lt;/div&gt;&lt;div&gt;channel.&lt;b&gt;writeAndFlush&lt;/b&gt;(rpcMessage).addListener((ChannelFutureListener) future -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!future.isSuccess()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MessageFuture messageFuture1 = futures.remove(rpcMessage.getId());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (messageFuture1 != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; messageFuture1.setResultMessage(future.cause());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; destroyChannel(future.channel());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;&lt;div&gt;try {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // ClientOnResponseProcessor 中将结果写入future&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Object result = messageFuture.&lt;b&gt;get&lt;/b&gt;(timeoutMillis, TimeUnit.MILLISECONDS);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; doAfterRpcHooks(remoteAddr, rpcMessage, result);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return result;&lt;/div&gt;&lt;div&gt;} catch (Exception exx) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (exx instanceof TimeoutException) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw (TimeoutException) exx;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new RuntimeException(exx);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;fillColor=#d5e8d4;strokeColor=#82b366;gradientColor=#97d077;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1400" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-57" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;rpcMessage = {RpcMessage@10028}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;id = 6254&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//请求唯一ID&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;messageType = 0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//消息类型：同步请求&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;codec = 1&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//序列化方式：SEATA&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;compressor = 0&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 消息压缩方式：不压缩&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;headMap = {HashMap@10048}&amp;nbsp; size = 0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;body = {GlobalBeginRequest@9787}&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1720" width="270" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-59" value="AbstractNettyRemotingClient" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4730" y="1370" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-61" value="&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;消息类型(ProtocolConstants 中定义&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;):&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;byte MSGTYPE_RESQUEST_SYNC = 0;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;byte MSGTYPE_RESPONSE = 1;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;byte MSGTYPE_RESQUEST_ONEWAY = 2;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;byte MSGTYPE_HEARTBEAT_REQUEST = 3;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;byte MSGTYPE_HEARTBEAT_RESPONSE = 4;&lt;br&gt;&lt;br&gt;序列化类型：&lt;br&gt;&lt;div&gt;&lt;b&gt;SEATA&lt;/b&gt;((byte)0x1),&lt;/div&gt;&lt;div&gt;PROTOBUF((byte)0x2),&lt;/div&gt;&lt;div&gt;KRYO((byte)0x4),&lt;/div&gt;&lt;div&gt;FST((byte)0x8),&lt;/div&gt;&lt;div&gt;HESSIAN((byte)0x16),&lt;/div&gt;&lt;div&gt;JACKSON((byte)0x32),&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;压缩方式：&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;div&gt;&lt;b&gt;NONE&lt;/b&gt;((byte) 0),&lt;/div&gt;&lt;div&gt;GZIP((byte) 1),&lt;/div&gt;&lt;div&gt;ZIP((byte) 2),&lt;/div&gt;&lt;div&gt;SEVENZ((byte) 3),&lt;/div&gt;&lt;div&gt;BZIP2((byte) 4),&lt;/div&gt;&lt;div&gt;LZ4((byte) 5),&lt;/div&gt;&lt;div&gt;DEFLATER((byte) 6),&lt;/div&gt;&lt;div&gt;ZSTD((byte) 7);&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-2190" y="440" width="260" height="330" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-63" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Serializer&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;RpcMessage 序列化接口&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; byte[] serialize(T t);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; T deserialize(byte[] bytes);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="720" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-65" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;dashed=1;endArrow=block;endFill=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-64" target="wSo7G-n1GvkOMipySxWi-63" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-64" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SeataSerializer&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;实际是借助 MessageSeataCodec 编解码器实现消息的序列化和反序列化&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="880" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-66" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MessageSeataCodec&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;SEATA类型编解码器接口，RPC在对消息进行编解码时使用（用于对消息体进行序列化和反序列化），对每一种请求响应都定义了一种实现，比如 GlobalBeginRequestCodec GlobalBeginResponseCodec GlobalCommitRequestCodec 等&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Class&amp;lt;?&amp;gt; getMessageClassType();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; void encode(T t, ByteBuf out);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; void decode(T t, ByteBuffer in);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="720" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-68" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-67" target="wSo7G-n1GvkOMipySxWi-66" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-69" value="&amp;nbsp;..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="wSo7G-n1GvkOMipySxWi-68" vertex="1" connectable="0">
          <mxGeometry x="-0.0609" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-67" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;GlobalBeginRequestCodec&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;编码格式： 4bytes timeout + 2bytes 事务名长度 + mbytes 事务名&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public &amp;lt;T&amp;gt; void encode(T t, ByteBuf out)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="880" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-72" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="wSo7G-n1GvkOMipySxWi-70" target="wSo7G-n1GvkOMipySxWi-53" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="5050" y="220" />
              <mxPoint x="5050" y="1480" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-70" value="bootstrap.handler(&lt;br&gt;&amp;nbsp; &amp;nbsp; new ChannelInitializer() {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public void initChannel(SocketChannel ch) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ChannelPipeline pipeline = ch.pipeline();&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pipeline.addLast(&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new &lt;b&gt;IdleStateHandler&lt;/b&gt;(nettyClientConfig.getChannelMaxReadIdleSeconds(),&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nettyClientConfig.getChannelMaxWriteIdleSeconds(),&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nettyClientConfig.getChannelMaxAllIdleSeconds()))&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addLast(new &lt;b&gt;ProtocolV1Decoder&lt;/b&gt;())&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addLast(new &lt;b&gt;ProtocolV1Encoder&lt;/b&gt;());&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (channelHandlers != null) {&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 客户端Channel 处理器只有一个 AstractNettyRemotingClient$ClientHandler&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; addChannelPipelineLast(ch, &lt;b&gt;channelHandlers&lt;/b&gt;);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; });" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;arcSize=3;align=left;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="2920" y="120" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-73" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public void encode(ChannelHandlerContext ctx, Object msg, ByteBuf out) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;msg instanceof RpcMessage&lt;/b&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RpcMessage rpcMessage = (RpcMessage) msg;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int fullLength = ProtocolConstants.V1_HEAD_LENGTH;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int headLength = ProtocolConstants.V1_HEAD_LENGTH;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte messageType = rpcMessage.getMessageType();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeBytes(ProtocolConstants.MAGIC_CODE_BYTES);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(ProtocolConstants.VERSION);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // full Length(4B) and head length(2B) will fix in the end.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writerIndex(out.writerIndex() + 6);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(messageType);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(rpcMessage.getCodec());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(rpcMessage.getCompressor());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeInt(rpcMessage.getId());&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // direct write head with zero-copy&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Map&amp;lt;String, String&amp;gt; headMap = rpcMessage.getHeadMap();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (headMap != null &amp;amp;&amp;amp; !headMap.isEmpty()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int headMapBytesLength = HeadMapSerializer.getInstance().encode(headMap, out);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; headLength += headMapBytesLength;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fullLength += headMapBytesLength;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] bodyBytes = null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (messageType != ProtocolConstants.MSGTYPE_HEARTBEAT_REQUEST&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;amp;&amp;amp; messageType != ProtocolConstants.MSGTYPE_HEARTBEAT_RESPONSE) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // heartbeat has no body&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Serializer serializer = SerializerServiceLoader.load(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; SerializerType.getByCode(rpcMessage.getCodec()));&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 对消息体进行序列化&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bodyBytes = serializer.&lt;b&gt;serialize&lt;/b&gt;(rpcMessage.getBody());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Compressor compressor = CompressorFactory.getCompressor(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; rpcMessage.getCompressor());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bodyBytes = compressor.compress(bodyBytes);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fullLength += bodyBytes.length;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (bodyBytes != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeBytes(bodyBytes);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // fix fullLength and headLength&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int writeIndex = out.writerIndex();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // skip magic code(2B) + version(1B)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writerIndex(writeIndex - fullLength + 3);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeInt(fullLength);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeShort(headLength);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writerIndex(writeIndex);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new UnsupportedOperationException(&quot;Not support this class:&quot; + msg.getClass());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (Throwable e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="5080" y="1280" width="440" height="680" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-75" value="ProtocolV1Encoder" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="5235" y="1250" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-77" value="&lt;font style=&quot;font-size: 11px;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;编码后数据格式：&lt;br&gt;&lt;/b&gt;2bytes: magic code&lt;br&gt;1bytes: ProtocolVer&lt;br&gt;4bytes: Full length,（head + body）的长度&lt;br&gt;2bytes: Head Length, 消息头的长度&lt;br&gt;1bytes: Msg Type,&amp;nbsp;&lt;br&gt;1bytes: Serializer, 序列化类型&lt;br&gt;1bytes: Compress, 压缩类型&lt;br&gt;4bytes: RequestId, 请求ID&lt;br&gt;Mbytes: HeadMap&lt;br&gt;Nbytes: body&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="5530" y="1400" width="230" height="170" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-78" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MessageTypeAware&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;通过此接口方法获取事务消息类型，注意和消息类型的区别&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;short &lt;b&gt;getTypeCode&lt;/b&gt;();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-2440" y="880" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-86" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-79" target="wSo7G-n1GvkOMipySxWi-78" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-79" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractMessage&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected static final Charset UTF8 = Constants.DEFAULT_CHARSET;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected ChannelHandlerContext ctx;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2440" y="1040" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-85" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-80" target="wSo7G-n1GvkOMipySxWi-79" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-80" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractTransactionRequest&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2440" y="1160" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-84" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-81" target="wSo7G-n1GvkOMipySxWi-80" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-81" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractTransactionRequestToTC&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected TCInboundHandler &lt;b&gt;handler&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2440" y="1280" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-83" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="wSo7G-n1GvkOMipySxWi-82" target="wSo7G-n1GvkOMipySxWi-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wSo7G-n1GvkOMipySxWi-82" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;GlobalBeginRequest&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int timeout = 60000;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;transactionName&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;重要方法：&lt;br&gt;// GlobalBeginRequest 事务消息类型是 TYPE_GLOBAL_BEGIN&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public short getTypeCode()&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-2440" y="1400" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-1" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;这里可以看到 TM RM 是属于客户端这边，&lt;br&gt;且每个客户端都有 TM RM, 不过 TM 只有在服务作为发起方使用&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1960" y="70" width="360" height="40" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-29" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-2" target="kNiJTSY86d62wiCeH5WG-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GUYMcc2Jdm5eoUd-P8js-1" value="1/2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="kNiJTSY86d62wiCeH5WG-29">
          <mxGeometry x="-0.9571" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-2" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public Integer createOrder(Long userId, Long productId, Integer price) throws Exception {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Integer amount = 1;&lt;font color=&quot;#007fff&quot;&gt; // 购买数量，暂时设置为 1&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; logger.info(&quot;[createOrder] 当前 XID: {}&quot;, RootContext.getXID());&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 1 扣减库存, 借助 Seata HTTP请求工具类&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;DefaultHttpExecutor 发送 Post 请求&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;reduceStock&lt;/b&gt;(productId, amount);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 2 扣减余额，&lt;/font&gt;&lt;span style=&quot;background-color: initial; border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;借助 Seata HTTP请求工具类&amp;nbsp;&lt;/font&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;DefaultHttpExecutor 发送 Post 请求&lt;/font&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;reduceBalance&lt;/b&gt;(userId, price);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 3 保存订单&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; OrderDO order = new OrderDO()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .setUserId(userId).setProductId(productId).setPayAmount(amount * price);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; orderDao.&lt;b&gt;saveOrder&lt;/b&gt;(order); &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//内部借助 ConnectionProxy 实现本地事务操作，本地事务执行成功的话会向TC注册分支事务，记录UndoLog,然后执行本地事务提交&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; logger.info(&quot;[createOrder] 保存订单: {}&quot;, order.getId());&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; return order.getId();&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2680" y="1640" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-24" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-5" target="ukPbdNcd3ReersfSq2Jl-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-5" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;HTTP调用分布式事务参与者服务接口，参与者事务方法使用 @Transactional 增强, 会被&amp;nbsp;&lt;br&gt;TransactionInterceptor 拦截&lt;/font&gt;&lt;br&gt;TransactionInterceptor#&lt;/b&gt;&lt;b&gt;invokeWithinTransaction&lt;/b&gt;(Method method, &lt;br&gt;&amp;nbsp; &amp;nbsp;@Nullable Class&amp;lt;?&amp;gt; targetClass,&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;final InvocationCallback invocation)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;fillColor=#e3c800;strokeColor=#B09500;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="3160" y="1890" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-8" target="ukPbdNcd3ReersfSq2Jl-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3130" y="2320" />
              <mxPoint x="3130" y="2500" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-13" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-12" vertex="1" connectable="0">
          <mxGeometry y="2" relative="1" as="geometry">
            <mxPoint x="8" y="80" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-15" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-8" target="ukPbdNcd3ReersfSq2Jl-14" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3130" y="2320" />
              <mxPoint x="3130" y="3110" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-16" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-15" vertex="1" connectable="0">
          <mxGeometry x="0.8417" y="-2" relative="1" as="geometry">
            <mxPoint x="2" y="17" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-8" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void completeTransactionAfterThrowing(TransactionInfo txInfo, GlobalTransaction tx,&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Throwable originalException)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throws TransactionalExecutor.ExecutionException, TransactionException {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 检查此异常是否需要回滚&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if (txInfo != null &amp;amp;&amp;amp; txInfo.rollbackOn(originalException)) {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 1&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;rollbackTransaction&lt;/b&gt;(tx, originalException);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;b&gt;// 2&amp;nbsp;&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;commitTransaction&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(tx, txInfo);&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2680" y="2240" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-11" target="ukPbdNcd3ReersfSq2Jl-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-11" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void &lt;b&gt;rollbackTransaction&lt;/b&gt;(GlobalTransaction tx, Throwable originalException) throws &lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;TransactionException, TransactionalExecutor.ExecutionException {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 事务发起者才能发起回滚&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (tx.getGlobalTransactionRole() != GlobalTransactionRole.Launcher) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; triggerBeforeRollback();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 发起回滚&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx.&lt;b&gt;rollback&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; triggerAfterRollback();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionException txe) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 回滚失败&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionalExecutor.ExecutionException(tx, txe,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionalExecutor.Code.RollbackFailure, originalException);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 回滚状态返回码&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TransactionalExecutor.Code code;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; switch (tx.getLocalStatus()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case RollbackFailed:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbackFailed:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case RollbackRetryTimeout:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.RollbackFailure;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case Rollbacking:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case RollbackRetrying:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbacking:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbackRetrying:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.Rollbacking;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbacked:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case Rollbacked:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //rollback transactions but do not exist are usually considered completed&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case Finished:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.RollbackDone;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.Unknown;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.warn(&quot;{} rollback in the state {}&quot;, tx.getXid(), tx.getLocalStatus());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; throw new TransactionalExecutor.ExecutionException(tx, code, originalException);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="3160" y="2240" width="440" height="520" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-67" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-14" target="ukPbdNcd3ReersfSq2Jl-66" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-14" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void commitTransaction(GlobalTransaction tx, TransactionInfo txInfo)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throws TransactionalExecutor.ExecutionException, TransactionException {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ... 同样先检查当前是不是事务发起者 ...&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (isTimeout(tx.getCreateTime(), txInfo)) { &lt;font color=&quot;#007fff&quot;&gt;// 前面执行正常但是超时&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Exception exx = new TmTransactionException(TransactionExceptionCode.TransactionTimeout,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String.format(&quot;client detected transaction timeout before commit, so change to rollback, xid = %s&quot;, tx.getXid()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;rollbackTransaction&lt;/b&gt;(tx, exx); &lt;font color=&quot;#007fff&quot;&gt;//超时回滚分布式事务&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;triggerBeforeCommit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 发起分布式事务提交&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tx.&lt;b&gt;commit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GlobalStatus afterCommitStatus = tx.getLocalStatus(); &lt;font color=&quot;#007fff&quot;&gt;// 提交过程中也可能出现异常&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionalExecutor.Code code = TransactionalExecutor.Code.Unknown;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; switch (afterCommitStatus) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbacking:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.Rollbacking;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case TimeoutRollbacked:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.RollbackDone;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case Finished:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; code = TransactionalExecutor.Code.CommitFailure;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Exception statusException = null;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (GlobalStatus.isTwoPhaseHeuristic(afterCommitStatus)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; statusException = new TmTransactionException(TransactionExceptionCode.CommitHeuristic,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String.format(&quot;Global transaction[%s] not found, may be rollbacked.&quot;, tx.getXid()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else if (GlobalStatus.isOnePhaseTimeout(afterCommitStatus)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; statusException = new TmTransactionException(TransactionExceptionCode.TransactionTimeout,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String.format(&quot;Global transaction[%s] is timeout and will be rollback[TC].&quot;, tx.getXid()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (null != statusException) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionalExecutor.ExecutionException(tx, statusException, code);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;triggerAfterCommit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionException txe) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 4.1 Failed to commit&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionalExecutor.ExecutionException(tx, txe,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionalExecutor.Code.CommitFailure);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="3160" y="2800" width="440" height="620" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-20" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-17" target="wSo7G-n1GvkOMipySxWi-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-22" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-20" vertex="1" connectable="0">
          <mxGeometry x="-0.7891" y="-3" relative="1" as="geometry">
            <mxPoint x="-3" y="18" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-17" value="public void &lt;b&gt;rollback&lt;/b&gt;() throws TransactionException {&lt;br&gt;&amp;nbsp; &amp;nbsp; if (role == GlobalTransactionRole.Participant) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;br&gt;&amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; assertXIDNotNull();&lt;br&gt;&amp;nbsp; &amp;nbsp; ...&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 回滚操作失败可以重试，默认最多重试 DEFAULT_TM_ROLLBACK_RETRY_COUNT 次&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&amp;nbsp; &amp;nbsp; int retry = ROLLBACK_RETRY_COUNT &amp;lt;= 0 ? DEFAULT_TM_ROLLBACK_RETRY_COUNT : ROLLBACK_RETRY_COUNT;&lt;br&gt;&amp;nbsp; &amp;nbsp; try {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; while (retry &amp;gt; 0) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; retry--;&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 默认是通过 DefaultTransactionManager 中 Netty客户端发送回滚请求&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;//&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;GlobalRollbackRequest&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; status = &lt;b&gt;transactionManager&lt;/b&gt;.&lt;b&gt;rollback&lt;/b&gt;(xid);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Throwable ex) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.error(...);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (retry == 0) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionException(&quot;Failed to report global rollback&quot;, ex);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 回滚失败，默认将事务挂起&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (xid.equals(RootContext.getXID())) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; suspend(true);&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; }&lt;br&gt;&amp;nbsp; &amp;nbsp; if (LOGGER.isInfoEnabled()) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.info(&quot;[{}] rollback status: {}&quot;, xid, status);&lt;br&gt;&amp;nbsp; &amp;nbsp; }&lt;br&gt;}" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="3640" y="2280" width="440" height="440" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-19" value="DefaultGlobalTransaction" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3780" y="2250" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.907;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-23" target="ukPbdNcd3ReersfSq2Jl-25" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4090" y="2148" />
              <mxPoint x="4090" y="2160" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-29" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-26" vertex="1" connectable="0">
          <mxGeometry x="-0.8147" y="2" relative="1" as="geometry">
            <mxPoint x="5" y="4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-14" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-26" vertex="1" connectable="0">
          <mxGeometry x="0.7515" y="-1" relative="1" as="geometry">
            <mxPoint x="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-16" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.57;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-23" target="kNiJTSY86d62wiCeH5WG-15" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4090" y="1959" />
              <mxPoint x="4120" y="1960" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-17" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-16" vertex="1" connectable="0">
          <mxGeometry x="0.7752" y="-3" relative="1" as="geometry">
            <mxPoint x="-5" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-21" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-16" vertex="1" connectable="0">
          <mxGeometry x="-0.5102" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-23" target="kNiJTSY86d62wiCeH5WG-22" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4090" y="1920" />
              <mxPoint x="4090" y="1790" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-24" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-23" vertex="1" connectable="0">
          <mxGeometry x="0.8436" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-25" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-23" vertex="1" connectable="0">
          <mxGeometry x="-0.1812" y="-2" relative="1" as="geometry">
            <mxPoint x="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-23" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;protected Object &lt;b&gt;invokeWithinTransaction&lt;/b&gt;(Method method, @Nullable Class&amp;lt;?&amp;gt; targetClass, InvocationCallback invocation) throws Throwable {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; TransactionAttributeSource tas = this.getTransactionAttributeSource();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; TransactionAttribute txAttr = tas != null ? tas.getTransactionAttribute(method, targetClass) : null;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; TransactionManager tm = this.determineTransactionManager(txAttr);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (this.reactiveAdapterRegistry != null &amp;amp;&amp;amp; tm instanceof ReactiveTransactionManager) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //响应式事务管理器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PlatformTransactionManager ptm = this.asPlatformTransactionManager(tm);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String joinpointIdentification = this.methodIdentification(method, targetClass, txAttr);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Object retVal;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (txAttr != null &amp;amp;&amp;amp; ptm instanceof CallbackPreferringPlatformTransactionManager) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // CallbackPreferringPlatformTransactionManager 应该是异步事务管理器&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 默认执行这段处理，注意这里面事务管理是由本地事务管理器管理的&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;// 1 分布式参与者&lt;b&gt;开启本地事务&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionInfo txInfo = this.&lt;b&gt;createTransactionIfNecessary&lt;/b&gt;(ptm, txAttr, joinpointIdentification);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 2 调用业务方法, Seata 对 PreparedStatement 也做了增强&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; retVal = invocation.&lt;b&gt;proceedWithInvocation&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Throwable var18) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 3 本地事务执行异常，执行本地事务回滚&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;completeTransactionAfterThrowing&lt;/b&gt;(txInfo, var18);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;throw&lt;/b&gt; &lt;b&gt;var18&lt;/b&gt;; &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 并向上抛出异常&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;cleanupTransactionInfo&lt;/b&gt;(txInfo);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (vavrPresent &amp;amp;&amp;amp; TransactionAspectSupport.VavrDelegate.isVavrTry(retVal)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TransactionStatus status = txInfo.getTransactionStatus();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (status != null &amp;amp;&amp;amp; txAttr != null) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; retVal = TransactionAspectSupport.VavrDelegate.evaluateTryFailure(&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;retVal, txAttr, status);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 4 本地事务执行正常的话这里不是直接提交本地事务，而是向 TC 注册分支事务&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.&lt;b&gt;commitTransactionAfterReturning&lt;/b&gt;(txInfo);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return retVal;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;" parent="1" vertex="1">
          <mxGeometry x="3640" y="1640" width="440" height="560" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-28" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-25" target="ukPbdNcd3ReersfSq2Jl-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-31" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-28" vertex="1" connectable="0">
          <mxGeometry x="-0.05" y="-2" relative="1" as="geometry">
            <mxPoint y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-25" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;protected void doCommit(DefaultTransactionStatus status) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; DataSourceTransactionObject txObject = (DataSourceTransactionObject) status.getTransaction();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; // 怎么创建 Seata ConectionProxy 对象的？参考 DataSourceProxy 原理图&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; Connection con = &lt;b&gt;txObject&lt;/b&gt;.&lt;b&gt;getConnectionHolder&lt;/b&gt;().&lt;b&gt;getConnection&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; con.&lt;b&gt;commit&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;// 这里 conn 是 ConnectionProxy 对象&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; catch (SQLException ex) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; throw translateException(&quot;JDBC commit&quot;, ex);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="4120" y="2080" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-33" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-27" target="ukPbdNcd3ReersfSq2Jl-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-34" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-33" vertex="1" connectable="0">
          <mxGeometry x="-0.0708" y="-1" relative="1" as="geometry">
            <mxPoint x="-1" y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-27" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;public void commit() throws SQLException {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; lockRetryPolicy.&lt;b style=&quot;font-size: 10px;&quot;&gt;execute&lt;/b&gt;(() -&amp;gt; {&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;doCommit&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return null;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; } catch (SQLException e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (targetConnection != null &amp;amp;&amp;amp; !getAutoCommit() &amp;amp;&amp;amp; !getContext().isAutoCommitChanged()) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 参考上面&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;rollback&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; throw e;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; } catch (Exception e) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; throw new SQLException(e);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="4600" y="2080" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-30" value="DataSourceTransactionManager" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4240" y="2050" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-43" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-32" target="ukPbdNcd3ReersfSq2Jl-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-32" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void &lt;b&gt;doCommit&lt;/b&gt;() throws SQLException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (&lt;b&gt;context&lt;/b&gt;.inGlobalTransaction()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;processGlobalTransactionCommit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else if (context.isGlobalLockRequire()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;processLocalCommitWithGlobalLocks&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; targetConnection.&lt;b&gt;commit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="5080" y="2080" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-35" value="ConnectionProxy" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4765" y="2050" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-39" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-36" target="ukPbdNcd3ReersfSq2Jl-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-36" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractConnectionProxy&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected DataSourceProxy &lt;b&gt;dataSourceProxy&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 被代理的数据库连接&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected Connection &lt;b&gt;targetConnection&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="2000" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-37" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Connection&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;JDK 数据库连接&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-480" y="1880" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-40" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-38" target="ukPbdNcd3ReersfSq2Jl-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-38" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ConnectionProxy&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 通过连接代理实现拓展分布式事务的控制操作&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConnectionContext &lt;b&gt;context&lt;/b&gt; = new ConnectionContext();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final LockRetryPolicy &lt;b&gt;lockRetryPolicy&lt;/b&gt; = new LockRetryPolicy(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int REPORT_RETRY_COUNT = ConfigurationFactory.getInstance()&lt;br&gt;&amp;nbsp; &amp;nbsp; .getInt(&lt;span style=&quot;background-color: initial;&quot;&gt;ConfigurationKeys.CLIENT_REPORT_RETRY_COUNT,&lt;br&gt;&amp;nbsp; &amp;nbsp; DEFAULT_CLIENT_REPORT_RETRY_COUNT);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public static final boolean IS_REPORT_SUCCESS_ENABLE = ConfigurationFactory&lt;br&gt;&amp;nbsp; &amp;nbsp; .getInstance().getBoolean(&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE);&lt;/span&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="2160" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-41" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ConnectionContext&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final Savepoint DEFAULT_SAVEPOINT = new Savepoint() { ...&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;};&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final ObjectMapper MAPPER = new ObjectMapper();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;xid&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Long &lt;b&gt;branchId&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean &lt;b&gt;isGlobalLockRequire&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private Savepoint &lt;b&gt;currentSavepoint&lt;/b&gt; = DEFAULT_SAVEPOINT;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean &lt;b&gt;autoCommitChanged&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;String, Object&amp;gt; &lt;b&gt;applicationData&lt;/b&gt; = new HashMap&amp;lt;&amp;gt;(2, 1.0001f);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Savepoint, Set&amp;lt;String&amp;gt;&amp;gt; lockKeysBuffer = new LinkedHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Savepoint, List&amp;lt;SQLUndoLog&amp;gt;&amp;gt; sqlUndoItemsBuffer = new LinkedHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final List&amp;lt;Savepoint&amp;gt; savepoints = new ArrayList&amp;lt;&amp;gt;(8);&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#cce5ff;strokeColor=#36393d;" parent="1" vertex="1">
          <mxGeometry x="-960" y="2120" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-45" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-42" target="ukPbdNcd3ReersfSq2Jl-44" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="6010" y="2150" />
              <mxPoint x="6010" y="2040" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-57" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-45" vertex="1" connectable="0">
          <mxGeometry x="0.7368" y="-3" relative="1" as="geometry">
            <mxPoint x="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-42" target="ukPbdNcd3ReersfSq2Jl-47" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="6010" y="2150" />
              <mxPoint x="6010" y="2150" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-58" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-48" vertex="1" connectable="0">
          <mxGeometry x="0.4868" y="1" relative="1" as="geometry">
            <mxPoint x="-7" y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-61" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-42" target="ukPbdNcd3ReersfSq2Jl-60" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="6010" y="2150" />
              <mxPoint x="6010" y="2250" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-62" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-61" vertex="1" connectable="0">
          <mxGeometry x="0.7385" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-42" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;private void processGlobalTransactionCommit() throws SQLException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 1 先向 TC 注册分支事务&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;register&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } catch (TransactionException e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; recognizeLockKeyConflictException(e, context.buildLockKeys());&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 2 记录撤销日志&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; UndoLogManagerFactory.getUndoLogManager(this.getDbType()).&lt;b&gt;flushUndoLogs&lt;/b&gt;(this);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 3 分支事务本地提交, 这里注意本地事务不是最后由TC控制一起提交，&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 也正因为如此才需要记录撤销日志&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; targetConnection.&lt;b&gt;commit&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; } catch (Throwable ex) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;// 4 向 TC 上报分支事务异常状态&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;report&lt;/b&gt;(false);&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; throw new SQLException(ex);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (IS_REPORT_SUCCESS_ENABLE) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 4&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp;向 TC 上报分支事务正常状态&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;report&lt;/b&gt;(true);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; context.reset();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="5560" y="2000" width="440" height="300" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-44" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp;借助 RmNettyRemotingClient 向 TC 发送 BranchRegisterRequest&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Long branchId = &lt;b&gt;DefaultResourceManager&lt;/b&gt;.get().&lt;b&gt;branchRegister&lt;/b&gt;(BranchType.AT, &lt;br&gt;&amp;nbsp; &amp;nbsp; getDataSourceProxy().getResourceId(),&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;null, context.getXid(), context.getApplicationData(),&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; context.buildLockKeys());&lt;/div&gt;&lt;div&gt;context.&lt;b&gt;setBranchId&lt;/b&gt;(branchId);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="6040" y="2000" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-47" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;insertUndoLogWithNormal(xid, branchId, buildContext(parser.getName(), compressorType), undoLogContent, cp.getTargetConnection());&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;SQL语句：INSERT INTO undo_log (branch_id, xid, context, rollback_info, log_status, log_created, log_modified) VALUES (?, ?, ?, ?, ?, now(6), now(6))&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="6040" y="2120" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-55" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-49" target="ukPbdNcd3ReersfSq2Jl-51" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-49" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;UndoLogManagerFactory&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// dbType -&amp;gt; UndoLogManager&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final Map&amp;lt;String, &lt;b&gt;UndoLogManager&lt;/b&gt;&amp;gt; &lt;b&gt;UNDO_LOG_MANAGER_MAP&lt;/b&gt; = &lt;br&gt;&amp;nbsp; &amp;nbsp; new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="2120" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-52" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-50" target="ukPbdNcd3ReersfSq2Jl-51" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-50" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractUndoLogManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;主要是定义了一组SQL, 用于Seata UndoLog 的增删改查&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final ThreadLocal&amp;lt;String&amp;gt; SERIALIZER_LOCAL = new ThreadLocal&amp;lt;&amp;gt;();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="2040" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-51" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;UndoLogManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;Seata 提供了包括 MySQL、MariaDB、PostgreSQL 等&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void flushUndoLogs(ConnectionProxy cp) throws SQLException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void undo(DataSourceProxy dataSourceProxy, String xid, long branchId) throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void deleteUndoLog(String xid, long branchId, Connection conn) throws SQLException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void batchDeleteUndoLog(Set&amp;lt;String&amp;gt; xids, Set&amp;lt;Long&amp;gt; branchIds, Connection conn) throws SQLException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int deleteUndoLogByLogCreated(Date logCreated, int limitRows, Connection conn) throws SQLException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean hasUndoLogTable(Connection conn);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="1800" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-54" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="ukPbdNcd3ReersfSq2Jl-53" target="ukPbdNcd3ReersfSq2Jl-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-53" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MySQLUndoLogManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="2200" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-56" value="AbstractUndoLogManager" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="6180" y="2090" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-82" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-59" target="51hY2aMMj5vdDbJ8PvvR-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-59" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;BranchUndoLog&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String xid;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private long branchId;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private List&amp;lt;&lt;b&gt;SQLUndoLog&lt;/b&gt;&amp;gt; &lt;b&gt;sqlUndoLogs&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-2400" y="2160" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-60" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;借助 RmNettyRemotingClient 向 TC 发送&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;BranchReportRequest&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;DefaultResourceManager&lt;/b&gt;.get().&lt;b&gt;branchReport&lt;/b&gt;(BranchType.AT, context.getXid(), &lt;br&gt;&amp;nbsp; context.getBranchId(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;b&gt;commitDone&lt;/b&gt; ? BranchStatus.PhaseOne_Done : BranchStatus.PhaseOne_Failed, null);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="6040" y="2220" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-65" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;插入这个UndoLog日志是为了万一后面需要回滚，&lt;br&gt;因为分支事务执行正常会提前提交，并不会等所有分支事务都执行完成后一起提交&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="6490" y="2130" width="460" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-68" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="ukPbdNcd3ReersfSq2Jl-66" target="wSo7G-n1GvkOMipySxWi-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-69" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="ukPbdNcd3ReersfSq2Jl-68" vertex="1" connectable="0">
          <mxGeometry x="-0.9528" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ukPbdNcd3ReersfSq2Jl-66" value="&lt;div&gt;public void commit() throws TransactionException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (role == GlobalTransactionRole.Participant) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; assertXIDNotNull();&lt;/div&gt;&lt;div&gt;&amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; // 提交失败也可以重试，默认最多重试 DEFAULT_TM_COMMIT_RETRY_COUNT 次&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; int retry = COMMIT_RETRY_COUNT &amp;lt;= 0 ? DEFAULT_TM_COMMIT_RETRY_COUNT : COMMIT_RETRY_COUNT;&lt;/div&gt;&lt;div&gt;&amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; while (retry &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; retry--;&lt;/div&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 默认是通过 DefaultTransactionManager 中 Netty客户端发送提交请求&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;      &lt;/span&gt;&lt;/span&gt;//&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;GlobalCommitRequest&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; status = &lt;b&gt;transactionManager&lt;/b&gt;.&lt;b&gt;commit&lt;/b&gt;(xid);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Throwable ex) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LOGGER.error(...);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (retry == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionException(&quot;Failed to report global commit&quot;, ex);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (xid.equals(RootContext.getXID())) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; suspend(true);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; ...&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="3640" y="2800" width="440" height="400" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-16" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-3" target="51hY2aMMj5vdDbJ8PvvR-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-3" value="&lt;b&gt;ClientOnResponseProcessor&lt;/b&gt;&lt;br&gt;&lt;b&gt;#process(...)&lt;br&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;TC响应处理，处理前面开启全局事务、发起全局事务回滚等操作的响应、注册RM TM 的响应&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="2360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-4" target="51hY2aMMj5vdDbJ8PvvR-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-4" value="&lt;b&gt;RmBranchCommitProcessor&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;TC发起的提交请求(BranchCommitRequest)的处理器&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="2460" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-68" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-5" target="51hY2aMMj5vdDbJ8PvvR-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-5" value="&lt;b&gt;RmBranchRollbackProcessor&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;TC发起的回滚请求(BranchRollbackRequest)的处理器&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="3160" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-84" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-6" target="51hY2aMMj5vdDbJ8PvvR-83" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-85" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-84" vertex="1" connectable="0">
          <mxGeometry x="-0.1348" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-6" value="&lt;b&gt;RmUndoLogProcessor&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;处理&amp;nbsp;UndoLogDeleteRequest 请求,&lt;br&gt;硬删除超过存储期限的撤销日志&lt;br&gt;&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="3490" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-7" value="ClientHeartbeatProcessor&lt;br&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;处理来自TC的心跳响应，心跳响应其实不需要处理&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="760" y="3620" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-19" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-13" target="51hY2aMMj5vdDbJ8PvvR-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-21" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-19" vertex="1" connectable="0">
          <mxGeometry x="-0.0789" y="-1" relative="1" as="geometry">
            <mxPoint x="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-13" value="...&lt;br style=&quot;font-size: 10px;&quot;&gt;resultMessage = (BranchCommitResponse) handler.&lt;b style=&quot;font-size: 10px;&quot;&gt;onRequest&lt;/b&gt;(branchCommitRequest, null);&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 向 TC 发回处理结果响应&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;this.remotingClient.sendAsyncResponse(serverAddress, request, resultMessage);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" parent="1" vertex="1">
          <mxGeometry x="1001" y="2460" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-15" value="就是将返回值处理后写入请求的Future对象(异步请求的处理)，或者通过响应类型 onResponse 处理 ，比较简单不展示了" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1000" y="2360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-23" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-18" target="51hY2aMMj5vdDbJ8PvvR-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-18" value="&lt;div&gt;public AbstractTransactionResponse handle(RpcContext rpcContext) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return handler.handle(this);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;" parent="1" vertex="1">
          <mxGeometry x="1480" y="2460" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-20" value="BranchCommitRequest" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1625" y="2430" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-36" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-22" target="51hY2aMMj5vdDbJ8PvvR-37" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2440" y="2510" as="targetPoint" />
            <Array as="points">
              <mxPoint x="2420" y="2500" />
              <mxPoint x="2420" y="2560" />
              <mxPoint x="981" y="2560" />
              <mxPoint x="981" y="2680" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-39" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;暂时只分析 AT 模式的处理&lt;/font&gt;&lt;/b&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-36" vertex="1" connectable="0">
          <mxGeometry x="0.8293" y="1" relative="1" as="geometry">
            <mxPoint x="88" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-22" value="&lt;div&gt;public BranchCommitResponse handle(BranchCommitRequest request) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; MDC.put(RootContext.MDC_KEY_XID, request.getXid());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; MDC.put(RootContext.MDC_KEY_BRANCH_ID, String.valueOf(request.getBranchId()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;getRMHandler&lt;/b&gt;(request.getBranchType()).&lt;b&gt;handle&lt;/b&gt;(request);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1960" y="2460" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-24" value="DefaultRMHandler" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2120" y="2430" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-29" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-25" target="51hY2aMMj5vdDbJ8PvvR-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-34" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-25" target="51hY2aMMj5vdDbJ8PvvR-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-25" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DefaultRMHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;资源管理器处理器的&lt;b&gt;代理&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 每种事务模式有对应的处理器实现&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected static Map&amp;lt;BranchType, AbstractRMHandler&amp;gt; &lt;b&gt;allRMHandlersMap&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-480" y="2760" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-26" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RMInboundHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;资源管理请求处理器，负责处理分支事务请求，比如分支事务提交、回滚、撤销日志的删除&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;BranchCommitResponse handle(BranchCommitRequest request);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;BranchRollbackResponse handle(BranchRollbackRequest request);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void handle(UndoLogDeleteRequest request);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-480" y="2440" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-27" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TransactionMessageHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;事务消息处理器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;AbstractResultMessage onRequest(AbstractMessage request, RpcContext context);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void onResponse(AbstractResultMessage response, RpcContext context);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-960" y="2440" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-30" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-28" target="51hY2aMMj5vdDbJ8PvvR-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-28" target="51hY2aMMj5vdDbJ8PvvR-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-28" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractRMHandler&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;抽象资源管理处理器，提供分支事务请求处理基本实现，比如分支事务提交、回滚、撤销日志的删除&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-480" y="2600" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-33" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-32" target="51hY2aMMj5vdDbJ8PvvR-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-32" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RMHandlerAT&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;AT模式资源管理器处理器，重写了 撤销日志删除请求 的处理&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private static final int LIMIT_ROWS = 3000;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;String, Boolean&amp;gt; undoLogTableExistRecord = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-960" y="2760" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-42" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-37" target="51hY2aMMj5vdDbJ8PvvR-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-37" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;public BranchCommitResponse &lt;b style=&quot;font-size: 10px;&quot;&gt;handle&lt;/b&gt;(BranchCommitRequest request) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; BranchCommitResponse response = new BranchCommitResponse();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; exceptionHandleTemplate(new AbstractCallback&amp;lt;BranchCommitRequest, BranchCommitResponse&amp;gt;() {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public void execute(BranchCommitRequest request, BranchCommitResponse response)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throws TransactionException {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;doBranchCommit&lt;/b&gt;(request, response);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }, request, response);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return response;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1001" y="2600" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-40" value="AbstractRMHandler" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1155" y="2570" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-57" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-41" target="51hY2aMMj5vdDbJ8PvvR-56" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-41" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;String xid = request.getXid();&lt;/div&gt;&lt;div&gt;long branchId = request.getBranchId();&lt;/div&gt;&lt;div&gt;String resourceId = request.getResourceId();&lt;/div&gt;&lt;div&gt;String applicationData = request.getApplicationData();&lt;/div&gt;&lt;div&gt;BranchStatus status = &lt;b&gt;getResourceManager&lt;/b&gt;().&lt;b&gt;branchCommit&lt;/b&gt;(request.getBranchType(), xid, branchId, resourceId,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; applicationData);&lt;/div&gt;&lt;div&gt;response.setXid(xid);&lt;/div&gt;&lt;div&gt;response.setBranchId(branchId);&lt;/div&gt;&lt;div&gt;response.setBranchStatus(status);&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1480" y="2600" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-50" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-43" target="51hY2aMMj5vdDbJ8PvvR-44" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-43" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DefaultResourceManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;资源管理器的代理&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 事务模式 -&amp;gt; ResourceManager&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// AT -&amp;gt; DataSourceManager&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// TCC -&amp;gt; TCCResourceManager&lt;br&gt;// Saga -&amp;gt; SagaResourceManager&amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// XA -&amp;gt; ResourceManagerXA&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected static Map&amp;lt;BranchType, ResourceManager&amp;gt; &lt;b&gt;resourceManagers&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="2800" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-47" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-44" target="51hY2aMMj5vdDbJ8PvvR-46" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-48" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-44" target="51hY2aMMj5vdDbJ8PvvR-45" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-44" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ResourceManager&amp;nbsp;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;资源管理器： 资源注册、分支事务提交/回滚、分支事务注册/上报&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这里的资源就是数据源信息，最终是要通过RegisterRMRequest注册到TC，比如 resouceId = &quot;&lt;/font&gt;&lt;/p&gt;&lt;font color=&quot;#007fff&quot;&gt;jdbc:mysql://127.0.0.1:13306/seata_order&quot;&lt;/font&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void registerResource(Resource resource);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void unregisterResource(Resource resource);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 获取当前资源管理器管理的所有资源&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Map&amp;lt;String, Resource&amp;gt; getManagedResources();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;BranchType getBranchType();&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="2600" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-45" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ResourceManagerInbound&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;BranchStatus &lt;b&gt;branchCommit&lt;/b&gt;(BranchType branchType, String xid, long branchId, String resourceId, String applicationData) throws TransactionException;&lt;br&gt;&lt;/span&gt;BranchStatus &lt;b&gt;branchRollback&lt;/b&gt;(BranchType branchType, String xid, long branchId, String resourceId, String applicationData) throws TransactionException;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="2440" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-46" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ResourceManagerOutbound&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Long &lt;b&gt;branchRegister&lt;/b&gt;(BranchType branchType, String resourceId, String clientId, String xid, String applicationData, String lockKeys) throws&amp;nbsp;TransactionException;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void &lt;b&gt;branchReport&lt;/b&gt;(BranchType branchType, String xid, long branchId, BranchStatus status, String applicationData) throws TransactionException;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean &lt;b&gt;lockQuery&lt;/b&gt;(BranchType branchType, String resourceId, String xid, String lockKeys)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;throws TransactionException;&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="2440" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-54" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-51" target="51hY2aMMj5vdDbJ8PvvR-44" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-51" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractResourceManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="2800" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-53" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-55" target="51hY2aMMj5vdDbJ8PvvR-51" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1700" y="2920" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-55" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DataSourceManager&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;AT模式的资源管理器&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AsyncWorker asyncWorker = new AsyncWorker(this);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final Map&amp;lt;String, Resource&amp;gt; dataSourceCache = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1920" y="2920" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-60" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-56" target="51hY2aMMj5vdDbJ8PvvR-59" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-56" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;异步执行分支事务提交，asyncWorker 中包含一个定时任务线程池&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;return &lt;b&gt;asyncWorker&lt;/b&gt;.&lt;b&gt;branchCommit&lt;/b&gt;(xid, branchId, resourceId);&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" parent="1" vertex="1">
          <mxGeometry x="1960" y="2650" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-58" value="DataSourceManager (AT模式的资源管理器)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1930" y="2620" width="260" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-62" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-59" target="51hY2aMMj5vdDbJ8PvvR-61" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2580" y="2680" />
              <mxPoint x="2580" y="2770" />
              <mxPoint x="980" y="2770" />
              <mxPoint x="980" y="2870" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-59" value="&lt;div style=&quot;&quot;&gt;&lt;div&gt;Phase2Context context = new Phase2Context(xid, branchId, resourceId);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 事务信息加入提交队列，定时任务定期（1s）从队列取任务执行，&lt;br&gt;// 因为事务提交任务中不是执行事务提交操作而是执行删除撤销日志，&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 所以不需要担心这里延迟导致事务执行时间长&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;addToCommitQueue&lt;/b&gt;(context);&lt;/div&gt;&lt;div&gt;return BranchStatus.PhaseTwo_Committed;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="2200" y="2640" width="360" height="80" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-65" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-61" target="51hY2aMMj5vdDbJ8PvvR-64" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-61" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 执行分支事务提交任务&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;private void &lt;b&gt;doBranchCommit&lt;/b&gt;() {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (commitQueue.isEmpty()) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; List&amp;lt;Phase2Context&amp;gt; &lt;b&gt;allContexts&lt;/b&gt; = new LinkedList&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; commitQueue.&lt;b&gt;drainTo&lt;/b&gt;(allContexts);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Map&amp;lt;String, List&amp;lt;Phase2Context&amp;gt;&amp;gt; groupedContexts = groupedByResourceId(allContexts);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; groupedContexts.forEach(this::&lt;b&gt;dealWithGroupedContexts&lt;/b&gt;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=5;" parent="1" vertex="1">
          <mxGeometry x="1000" y="2800" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-63" value="AsyncWorker" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1175" y="2770" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-64" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;DataSourceProxy dataSourceProxy = dataSourceManager.get(resourceId);&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Connection conn = null;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; conn = dataSourceProxy.getPlainConnection();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; UndoLogManager undoLogManager = UndoLogManagerFactory&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;.getUndoLogManager(dataSourceProxy.getDbType());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; List&amp;lt;List&amp;lt;Phase2Context&amp;gt;&amp;gt; splitByLimit = Lists.partition(contexts, UNDOLOG_DELETE_LIMIT_SIZE);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (List&amp;lt;Phase2Context&amp;gt; partition : splitByLimit) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;deleteUndoLog&lt;/b&gt;(conn, undoLogManager, partition); &lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//仅仅是删除撤销日志&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;} catch (SQLException sqlExx) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;addAllToCommitQueue&lt;/b&gt;(contexts);&amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//重新加入提交队列，实现重试&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;} finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; IOUtil.close(conn);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1480" y="2800" width="440" height="220" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-66" value="&lt;b&gt;分支提交不是执行分支事务的提交，&lt;br&gt;而是删除撤销日志，事务的提交在执行&lt;br&gt;完分支事务后就直接提交了&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="760" y="2520" width="230" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-70" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-67" target="51hY2aMMj5vdDbJ8PvvR-69" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-71" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-70" vertex="1" connectable="0">
          <mxGeometry x="-0.1391" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-67" value="resultMessage = (BranchRollbackResponse) handler.onRequest(branchRollbackRequest, null);&lt;br&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 向 TC 发回处理结果响应&lt;/font&gt;&lt;/div&gt;this.remotingClient.&lt;b&gt;sendAsyncResponse&lt;/b&gt;(serverAddress, request, resultMessage);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;" parent="1" vertex="1">
          <mxGeometry x="1000" y="3160" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-75" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-69" target="51hY2aMMj5vdDbJ8PvvR-74" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-76" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-75" vertex="1" connectable="0">
          <mxGeometry x="-0.0087" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-69" value="&lt;div&gt;public BranchRollbackResponse handle(BranchRollbackRequest request) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; BranchRollbackResponse response = new BranchRollbackResponse();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; exceptionHandleTemplate(new AbstractCallback&amp;lt;BranchRollbackRequest, BranchRollbackResponse&amp;gt;() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public void execute(BranchRollbackRequest request, BranchRollbackResponse response)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throws TransactionException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;doBranchRollback&lt;/b&gt;(request, response);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }, request, response);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return response;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1480" y="3160" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-72" value="AbstractRMHandler" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1635" y="3130" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-73" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;这中间处理流程和上面类似&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1391" y="3130" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-79" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-74" target="51hY2aMMj5vdDbJ8PvvR-78" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-74" value="&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 回滚不能用定时任务处理，需要尽快完成&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;public BranchStatus &lt;b&gt;branchRollback&lt;/b&gt;(BranchType branchType, String xid, long branchId, String resourceId,&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;String applicationData) throws TransactionException {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; DataSourceProxy dataSourceProxy = &lt;b&gt;get&lt;/b&gt;(resourceId);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (dataSourceProxy == null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new ShouldNeverHappenException(...);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UndoLogManagerFactory.&lt;b&gt;getUndoLogManager&lt;/b&gt;(dataSourceProxy.getDbType())&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;undo&lt;/b&gt;(dataSourceProxy, xid, branchId);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (TransactionException te) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; StackTraceLogger.error(...);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (te.getCode() == TransactionExceptionCode.BranchRollbackFailed_Unretriable) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return BranchStatus.PhaseTwo_RollbackFailed_Unretryable;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return BranchStatus.PhaseTwo_RollbackFailed_Retryable;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return BranchStatus.PhaseTwo_Rollbacked;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1960" y="3160" width="440" height="260" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-77" value="DataSourceManager (AT模式的资源管理器)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2050" y="3130" width="260" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-78" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;public void &lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;undo&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(DataSourceProxy dataSourceProxy, String xid, long branchId) throws TransactionException {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (; ; ) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; connectionProxy = dataSourceProxy.getConnection();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; conn = connectionProxy.getTargetConnection();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 开一个本地事务执行撤销操作&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (originalAutoCommit = conn.getAutoCommit()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; conn.setAutoCommit(false);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 当前读查询撤销操作数据, SELECT * FROM undo_log WHERE branch_id = ? AND xid = ? FOR UPDATE;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; selectPST = conn.prepareStatement(buildSelectUndoSql());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; selectPST.setLong(1, branchId);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; selectPST.setString(2, xid);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rs = selectPST.executeQuery(); &lt;font color=&quot;#007fff&quot;&gt;// 查询撤销日志&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean exists = false;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 遍历执行撤销操作&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; while (rs.next()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exists = true;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 防止重复撤销同一个分支事务做的校验&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int state = rs.getInt(ClientTableColumnsName.UNDO_LOG_LOG_STATUS);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!canUndo(state)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String contextString = rs.getString(ClientTableColumnsName.UNDO_LOG_CONTEXT);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Map&amp;lt;String, String&amp;gt; context = parseContext(contextString);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] rollbackInfo = getRollbackInfo(rs);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String serializer = context == null ? null : context.get(UndoLogConstants.SERIALIZER_KEY);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UndoLogParser parser = serializer == null ? UndoLogParserFactory.getInstance()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : UndoLogParserFactory.getInstance(serializer);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;BranchUndoLog&lt;/b&gt; &lt;b&gt;branchUndoLog&lt;/b&gt; = parser.&lt;b&gt;decode&lt;/b&gt;(rollbackInfo);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setCurrentSerializer(parser.getName());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;SQLUndoLog&amp;gt; sqlUndoLogs = branchUndoLog.getSqlUndoLogs();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (sqlUndoLogs.size() &amp;gt; 1) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Collections.reverse(sqlUndoLogs);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;for (SQLUndoLog sqlUndoLog : sqlUndoLogs)&lt;/b&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TableMeta tableMeta = TableMetaCacheFactory.getTableMetaCache(dataSourceProxy.getDbType())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .getTableMeta(conn, sqlUndoLog.getTableName(), dataSourceProxy.getResourceId());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlUndoLog.setTableMeta(tableMeta);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AbstractUndoExecutor undoExecutor = UndoExecutorFactory.getUndoExecutor(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dataSourceProxy.getDbType(), sqlUndoLog);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; undoExecutor.&lt;b&gt;executeOn&lt;/b&gt;(connectionProxy);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; removeCurrentSerializer();&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; // If undo_log exists, it means that the branch transaction has completed the first phase,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // we can directly roll back and clean the undo_log&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Otherwise, it indicates that there is an exception in the branch transaction,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // causing undo_log not to be written to the database.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // For example, the business processing timeout, the global transaction is the initiator rolls back.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // To ensure data consistency, we can insert an undo_log with GlobalFinished state&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // to prevent the local transaction of the first phase of other programs from being correctly submitted.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // See https://github.com/seata/seata/issues/489&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (exists) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deleteUndoLog(xid, branchId, conn);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; conn.commit();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 日志&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; insertUndoLogWithGlobalFinished(xid, branchId, UndoLogParserFactory.getInstance(), conn);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; conn.commit();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 日志&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (SQLIntegrityConstraintViolationException e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 日志&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Throwable e) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (conn != null) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 撤销SQL执行失败，回滚撤销操作&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; conn.rollback();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e instanceof SQLUndoDirtyException) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new BranchTransactionException(...));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new BranchTransactionException(...);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 资源释放、恢复自动提交 ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2440" y="3160" width="560" height="1120" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-80" value="AbstractUndoLogManager" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2640" y="3130" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-81" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SQLUndoLog&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 比如 SELECT INSERT 等等&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private SQLType &lt;b&gt;sqlType&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private String &lt;b&gt;tableName&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 分支事务执行前的数据快照&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private TableRecords &lt;b&gt;beforeImage&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 分支事务执行后的数据快照&lt;/font&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private TableRecords &lt;b&gt;afterImage&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2880" y="2160" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-88" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="51hY2aMMj5vdDbJ8PvvR-83" target="51hY2aMMj5vdDbJ8PvvR-87" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-1" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="51hY2aMMj5vdDbJ8PvvR-88" vertex="1" connectable="0">
          <mxGeometry x="-0.2" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-83" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;String resourceId = request.getResourceId();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;DataSourceManager dataSourceManager = (DataSourceManager)getResourceManager();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;DataSourceProxy dataSourceProxy = dataSourceManager.get(resourceId);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Date division = getLogCreated(request.&lt;b&gt;getSaveDays&lt;/b&gt;());&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;UndoLogManager manager = getUndoLogManager(dataSourceProxy);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;Connection conn = &lt;b style=&quot;font-size: 10px;&quot;&gt;getConnection&lt;/b&gt;(dataSourceProxy)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;do {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; deleteRows = &lt;b style=&quot;font-size: 10px;&quot;&gt;deleteUndoLog&lt;/b&gt;(manager, conn, division);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;} while (deleteRows == LIMIT_ROWS);&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1001" y="3440" width="439" height="160" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-86" value="RMHandlerAT" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1175" y="3410" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="51hY2aMMj5vdDbJ8PvvR-87" value="&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//&amp;nbsp;DELETE FROM undo_log&amp;nbsp;WHERE log_created&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&amp;lt;= ? LIMIT ?&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;PreparedStatement deletePST = conn.prepareStatement(&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;DELETE_UNDO_LOG_BY_CREATE_SQL);&amp;nbsp;&lt;br&gt;deletePST.setDate(1, new java.sql.Date(logCreated.getTime()));&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;deletePST.setInt(2, limitRows);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;int deleteRows = deletePST.executeUpdate();&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;return deleteRows;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="1480" y="3460" width="439" height="120" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="kNiJTSY86d62wiCeH5WG-5" target="kNiJTSY86d62wiCeH5WG-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="hr4mIVcNEapKpzL8UYvz-1" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-8" vertex="1" connectable="0">
          <mxGeometry x="-0.0357" y="-1" relative="1" as="geometry">
            <mxPoint x="1" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-5" value="注册 Bean SeataAutoDataSourceProxyCreator&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;用于对数据源对象进行增强生成 DataSourceProxy 实例&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-7" value="DataSourceProxy 实例初始化时&lt;br&gt;会向所有TC发送&amp;nbsp;&lt;b&gt;RegisterRMRequest&lt;/b&gt; 请求" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1000" y="200" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-9" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;NettyClientChannelManager&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;客户端维持的到所有TC节点的Channel的容器&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final ConcurrentMap&amp;lt;String, Object&amp;gt; channelLocks = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final ConcurrentMap&amp;lt;String, NettyPoolKey&amp;gt; poolKeyMap = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// TC地址端口 -&amp;gt; 当前客户端到此TC的连接通道Channel&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final ConcurrentMap&amp;lt;String, Channel&amp;gt; &lt;b&gt;channels&lt;/b&gt; = new ConcurrentHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private final GenericKeyedObjectPool&amp;lt;NettyPoolKey, Channel&amp;gt; nettyClientKeyPool;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;private Function&amp;lt;String, NettyPoolKey&amp;gt; poolKeyFunction;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1440" y="240" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-13" value="AbstractNettyRemotingClient" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="4250" y="1010" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-20" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="kNiJTSY86d62wiCeH5WG-15" target="kNiJTSY86d62wiCeH5WG-19" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-15" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;protected void doRollback(DefaultTransactionStatus status) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; DataSourceTransactionObject txObject = (DataSourceTransactionObject)status.getTransaction();&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; Connection con = txObject.getConnectionHolder().getConnection();&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; con.&lt;b&gt;rollback&lt;/b&gt;();&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt;// 这里 conn 是 ConnectionProxy 对象&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } catch (SQLException var5) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new TransactionSystemException(&quot;Could not roll back JDBC transaction&quot;, var5);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;" parent="1" vertex="1">
          <mxGeometry x="4120" y="1880" width="440" height="160" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-19" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div&gt;public void &lt;b&gt;rollback&lt;/b&gt;() throws SQLException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; targetConnection.&lt;b&gt;rollback&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;// 本地事务回滚&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (context.&lt;b&gt;inGlobalTransaction&lt;/b&gt;() &amp;amp;&amp;amp; context.&lt;b&gt;isBranchRegistered&lt;/b&gt;()) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;report&lt;/b&gt;(false); &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 事务异常上报 TC&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; context.reset();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="4600" y="1900" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-22" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;public T execute(Object... args) throws Throwable {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; String xid = &lt;b&gt;RootContext&lt;/b&gt;.&lt;b&gt;getXID&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//服务间调用时传递过来&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (xid != null) {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 这里绑定 xid, 从而标识当前事务是一个分支事务，在后面 ConnectionProxy 中会为分支事务额外执行一些分布式事务处理&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; statementProxy.getConnectionProxy().&lt;b&gt;bind&lt;/b&gt;(xid);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; statementProxy.getConnectionProxy()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .&lt;b&gt;setGlobalLockRequire&lt;/b&gt;(RootContext.requireGlobalLock());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return doExecute(args);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=4;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="4120" y="1720" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-27" value="&lt;b&gt;这里进入到参与者服务&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3310" y="1860" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-30" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="kNiJTSY86d62wiCeH5WG-28" target="ukPbdNcd3ReersfSq2Jl-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-31" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="kNiJTSY86d62wiCeH5WG-30" vertex="1" connectable="0">
          <mxGeometry x="-0.2717" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="kNiJTSY86d62wiCeH5WG-28" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 以 HTTP 请求为例，需要借助 Seata 定义的&amp;nbsp;DefaultHttpExecutor 发送 HTTP 请求&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 此类可以在发送请求前为请求自动添加事务必要的信息，比如XID&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;//&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;headers.put(RootContext.KEY_XID, xid); 分支事务全靠这个参数判断自己属于哪个全局事务&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 参与者服务通过&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;TransactionPropagationInterceptor 解析XID并保存到线程上下文&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;DefaultHttpExecutor.getInstance()&lt;br&gt;&amp;nbsp; &amp;nbsp; .executePost(&quot;http://127.0.0.1:8082&quot;, &quot;/product/reduce-stock&quot;,&lt;span style=&quot;background-color: initial;&quot;&gt;params, HttpResponse.class);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="2680" y="1880" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="hr4mIVcNEapKpzL8UYvz-2" value="&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;数据源代理这部分逻辑单独出一个流程图分析&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="760" y="260" width="260" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wC2xZ4anNi33C-H_c2z2-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="wC2xZ4anNi33C-H_c2z2-3" target="wC2xZ4anNi33C-H_c2z2-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="wC2xZ4anNi33C-H_c2z2-3" value="WebMvcConfigurerAdapter&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;就是注册一个WebMvc配置器Bean, 通过这个配置器注册请求拦截器&lt;b&gt;TransactionPropagationInterceptor&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="760" y="280" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wC2xZ4anNi33C-H_c2z2-5" value="TransactionPropagationInterceptor&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;此请求拦截器用于事务发起者向事务参与者传递 XID&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1001" y="280" width="200" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

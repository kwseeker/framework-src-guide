<mxfile host="Electron" modified="2024-10-24T15:51:27.586Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="BPR4PX2ugrvXZiW4NgBt" version="21.6.5" type="device">
  <diagram name="第 1 页" id="EZIj7stLJ7IglIkDNbZx">
    <mxGraphModel dx="3676" dy="733" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-1" value="&lt;h1 style=&quot;font-size: 16px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Disruptor (4.0.0)&lt;/font&gt;&lt;/h1&gt;&lt;div style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;LMAX Disruptor 的定位是 线程间高性能的消息库。&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;核心源码 7K 行（70个源码文件），另外配了大量的测试代码（2W行）。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;这里结合官方的几个Demo过一下源码流程。&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="10" width="440" height="90" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-2" target="fhfUE1HdMHP-IcORmnVZ-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-2" value="&lt;b&gt;LongEventMain&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;官方提供的第一个例子&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="40" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.45;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-3" target="fhfUE1HdMHP-IcORmnVZ-8">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="740" y="237" />
              <mxPoint x="740" y="770" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-10" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fhfUE1HdMHP-IcORmnVZ-9">
          <mxGeometry x="0.4417" y="-3" relative="1" as="geometry">
            <mxPoint x="13" y="130" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-31" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-3" target="fhfUE1HdMHP-IcORmnVZ-32">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="750" y="160" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-63" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fhfUE1HdMHP-IcORmnVZ-31">
          <mxGeometry x="0.555" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-60" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.002;exitY=0.376;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-3" target="fhfUE1HdMHP-IcORmnVZ-59">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="750" y="218" />
              <mxPoint x="750" y="330" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-64" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fhfUE1HdMHP-IcORmnVZ-60">
          <mxGeometry x="0.8247" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-67" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.998;exitY=0.888;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-3" target="fhfUE1HdMHP-IcORmnVZ-66">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="730" y="351" />
              <mxPoint x="730" y="1030" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-70" value="4" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fhfUE1HdMHP-IcORmnVZ-67">
          <mxGeometry x="0.9327" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-3" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 事件工厂，生产事件&lt;/font&gt;&lt;/div&gt;&lt;div&gt;LongEventFactory factory = new LongEventFactory();&lt;/div&gt;&lt;div&gt;int bufferSize = 1024;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Disruptor&amp;lt;LongEvent&amp;gt; disruptor =&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new &lt;b&gt;Disruptor&lt;/b&gt;&amp;lt;&amp;gt;(factory, bufferSize, DaemonThreadFactory.INSTANCE);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;// 2 绑定事件消费者&lt;/font&gt;&lt;/div&gt;&lt;div&gt;disruptor.&lt;b&gt;handleEventsWith&lt;/b&gt;(new &lt;b&gt;LongEventHandler&lt;/b&gt;());&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;// 3 启动 Disruptor，为每个消费者创建线程并启动&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;disruptor.&lt;b&gt;start&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;RingBuffer&amp;lt;LongEvent&amp;gt; ringBuffer = disruptor.&lt;b&gt;getRingBuffer&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;LongEventProducer producer = new &lt;b&gt;LongEventProducer&lt;/b&gt;(ringBuffer);&lt;/div&gt;&lt;div&gt;ByteBuffer bb = ByteBuffer.allocate(8);&lt;/div&gt;&lt;div&gt;for (long l = 0; true; l++)&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 每隔1s发布一次 LongEvent&lt;/font&gt;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; bb.putLong(0, l);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 4 发布 LongEvent&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; producer.&lt;b&gt;onData&lt;/b&gt;(bb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Thread.sleep(1000);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="280" y="120" width="440" height="260" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-14" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-7" target="fhfUE1HdMHP-IcORmnVZ-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-39" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-7" target="fhfUE1HdMHP-IcORmnVZ-38">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-7" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;Disruptor&amp;lt;T&amp;gt;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final &lt;b&gt;RingBuffer&lt;/b&gt;&amp;lt;T&amp;gt; &lt;b&gt;ringBuffer&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 自定义线程工厂&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final ThreadFactory threadFactory;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 里面主要是消费者集合&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final &lt;b&gt;ConsumerRepository&lt;/b&gt; &lt;b&gt;consumerRepository&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private final AtomicBoolean started;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;private ExceptionHandler&amp;lt;? super T&amp;gt; exceptionHandler;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;// 注册Event消费者组&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;public final EventHandlerGroup&amp;lt;T&amp;gt; &lt;b&gt;handleEventsWith&lt;/b&gt;(EventHandler&amp;lt;? super T&amp;gt;... handlers)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-440" y="120" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-8" target="fhfUE1HdMHP-IcORmnVZ-11">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-8" value="&lt;div&gt;public RingBuffer&amp;lt;T&amp;gt; start() {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // CAS + AtomicBoolean&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;状态字段防止重复启动&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.checkOnlyStartedOnce();&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 即遍历消费者集合为每个消费者通过&amp;nbsp; threadFactory 创建线程并启动&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.&lt;b&gt;consumerRepository&lt;/b&gt;.&lt;b&gt;startAll&lt;/b&gt;(&lt;span style=&quot;background-color: initial;&quot;&gt;this.&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;threadFactory&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return this.ringBuffer;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="760" y="720" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-28" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-11" target="fhfUE1HdMHP-IcORmnVZ-27">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-11" value="&lt;div&gt;this.&lt;b&gt;consumerInfos&lt;/b&gt;.forEach((c) -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c.&lt;b&gt;start&lt;/b&gt;(threadFactory);&lt;/div&gt;&lt;div&gt;});&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;" vertex="1" parent="1">
          <mxGeometry x="1240" y="740" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-17" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-13" target="fhfUE1HdMHP-IcORmnVZ-16">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-13" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ConsumerRepository&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;消费者仓库&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//这两个Map分别用于从 EventHandlerIndentity、Sequence 查找对应的EventProcessor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;EventHandlerIdentity, EventProcessorInfo&amp;gt; &lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; eventProcessorInfoByEventHandler&lt;/b&gt; = new IdentityHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Map&amp;lt;Sequence, ConsumerInfo&amp;gt; &lt;b&gt;eventProcessorInfoBySequence&lt;/b&gt;&amp;nbsp; &lt;br&gt;&amp;nbsp; &amp;nbsp; = new IdentityHashMap();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 消费者集合&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Collection&amp;lt;ConsumerInfo&amp;gt; &lt;b&gt;consumerInfos&lt;/b&gt; = new ArrayList();&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fad7ac;strokeColor=#b46504;" vertex="1" parent="1">
          <mxGeometry x="-880" y="1000" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-15" value="ConsumerRepository" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1270" y="710" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-16" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ConsumerInfo (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;消费者接口&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Sequence[] getSequences();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;SequenceBarrier getBarrier();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isEndOfChain();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void start(ThreadFactory var1);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void halt();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void markAsUsedInBarrier();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isRunning();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="1000" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-18" target="fhfUE1HdMHP-IcORmnVZ-16">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-21" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-18" target="fhfUE1HdMHP-IcORmnVZ-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-26" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-18" target="fhfUE1HdMHP-IcORmnVZ-22">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-18" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;EventProcessorInfo&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;ConsumerInfo 唯一的实现类，定义消费者实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final &lt;b&gt;EventProcessor&lt;/b&gt; eventprocessor;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//每组消费者（EventHandlerGroup）的 SequcenBarrier 实例相同&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final &lt;b&gt;SequenceBarrier&lt;/b&gt; barrier;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private boolean endOfChain = true;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="1280" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-20" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;EventProcessor&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;&lt;b&gt;事件处理器&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;重要方法：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;Sequence getSequence();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void halt();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isRunning();&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="1280" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-22" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;SequenceBarrier (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;序列屏障，&lt;/b&gt;不太明白为何叫这个名字，看内部逻辑是用于&lt;b&gt;借助 WaitStrategy 实现事件的等待与唤醒&lt;/b&gt;，以及&lt;b&gt;记录与消费者绑定的 RingBuffer 的 cursor 指针当被唤醒后提取可消费的消息&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 内部调用 WaitStrategy 等待方法&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long waitFor(long var1) throws AlertException, InterruptedException, TimeoutException;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getCursor();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isAlerted();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void alert();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void clearAlert();&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void checkAlert() throws AlertException;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-880" y="1280" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-25" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;dashed=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-23" target="fhfUE1HdMHP-IcORmnVZ-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-23" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;BatchEventProcessor&amp;lt;T&amp;gt;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int IDLE = 0;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int HALTED = 1;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int RUNNING = 2;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final AtomicInteger running = new AtomicInteger(0);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private ExceptionHandler&amp;lt;? super T&amp;gt; exceptionHandler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final DataProvider&amp;lt;T&amp;gt; &lt;b&gt;dataProvider&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final SequenceBarrier sequenceBarrier;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final EventHandlerBase&amp;lt;? super T&amp;gt; eventHandler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final int batchLimitOffset;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Sequence sequence = new Sequence(-1L);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final RewindHandler rewindHandler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private int retriesAttempted = 0;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="1560" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-84" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-27" target="fhfUE1HdMHP-IcORmnVZ-83">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-27" value="Thread thread = threadFactory&lt;br&gt;.&lt;b&gt;newThread&lt;/b&gt;(this.eventprocessor);&lt;br&gt;...&lt;br&gt;thread.&lt;b&gt;start&lt;/b&gt;();" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=9;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1480" y="740" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-29" value="EventProcessorInfo" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1515" y="710" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-30" value="MultiProducerSequencer sequencer = new &lt;b&gt;MultiProducerSequencer&lt;/b&gt;(bufferSize, waitStrategy);&lt;br&gt;return new &lt;b&gt;RingBuffer&lt;/b&gt;(factory, sequencer);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1720" y="120" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-33" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-80" target="fhfUE1HdMHP-IcORmnVZ-30">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-35" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-32" target="fhfUE1HdMHP-IcORmnVZ-34">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-32" value="this(RingBuffer.&lt;b&gt;createMultiProducer&lt;/b&gt;(eventFactory, ringBufferSize), threadFactory);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;" vertex="1" parent="1">
          <mxGeometry x="760" y="120" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-34" value="&lt;div&gt;this.consumerRepository = new &lt;b&gt;ConsumerRepository&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;this.started = new AtomicBoolean(false);&lt;/div&gt;&lt;div&gt;this.exceptionHandler = new ExceptionHandlerWrapper();&lt;/div&gt;&lt;div&gt;this.ringBuffer = &lt;b&gt;ringBuffer&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;this.threadFactory = threadFactory;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1241" y="200" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-42" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-36" target="fhfUE1HdMHP-IcORmnVZ-41">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-46" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-36" target="fhfUE1HdMHP-IcORmnVZ-45">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-36" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RingBufferFields&amp;lt;E&amp;gt;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final int BUFFER_PAD = 32;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 索引掩码&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final long indexMask;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 环形缓冲元素节点容器，E是存储的元素的数据类型, 发布的事件对象是先放到这里，这个数组的大小是 bufferSize + 2 * BUFFER_PAD, 因为要在前后都加上32字节的PAD留白&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final E[] &lt;b&gt;entries&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//缓存的容量，必须是2的幂指数&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final int &lt;b&gt;bufferSize&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 意译为序列化器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final &lt;b&gt;Sequencer&lt;/b&gt; &lt;b&gt;sequencer&lt;/b&gt;;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-880" y="280" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-40" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-38" target="fhfUE1HdMHP-IcORmnVZ-36">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-38" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RingBuffer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;环形缓冲&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&amp;nbsp; 8 * 7 个字段（一共56个字节），TODO&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected byte&amp;nbsp;p10, ..., p17, p20, ..., p77;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fad7ac;strokeColor=#b46504;" vertex="1" parent="1">
          <mxGeometry x="-880" y="520" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-41" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RingBufferPad&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;//&amp;nbsp; 8 * 7 个字段（一共56个字节），TODO&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected byte p10, ..., p17, p20, ..., p77;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-880" y="120" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-44" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;dashed=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-43" target="fhfUE1HdMHP-IcORmnVZ-22">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-75" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-43" target="fhfUE1HdMHP-IcORmnVZ-74">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-43" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ProcessingSequenceBarrier&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 等待策略，默认 BlockingWaitStrategy&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final WaitStrategy &lt;b&gt;waitStrategy&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 依赖的缓冲序列索引，默认和&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;cursorSequence 一致&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Sequence &lt;b&gt;dependentSequence&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 是否有告警，反向搜索代码发现处理器抛异常会告警，Disruptor关闭时会告警&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private volatile boolean &lt;b&gt;alerted&lt;/b&gt; = false;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 即与当前消费者绑定的 RingBuffer 的 sequencer.cursor&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Sequence &lt;b&gt;cursorSequence&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Sequencer sequencer;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-880" y="1560" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-45" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Sequencer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void claim(long sequence);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;boolean isAvailable(long sequence);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void addGatingSequences(Sequence... gatingSequences);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;SequenceBarrier&lt;/b&gt; &lt;b&gt;newBarrier&lt;/b&gt;(Sequence... sequencesToTrack);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getMinimumSequence();&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long getHighestPublishedSequence(long nextSequence, long availableSequence);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;lt;T&amp;gt; EventPoller&amp;lt;T&amp;gt; newPoller(DataProvider&amp;lt;T&amp;gt; provider, Sequence... gatingSequences);&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="300" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-48" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;dashed=1;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-47" target="fhfUE1HdMHP-IcORmnVZ-45">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-52" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;endArrow=open;endFill=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-47" target="fhfUE1HdMHP-IcORmnVZ-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-47" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;AbstractSequencer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final AtomicReferenceFieldUpdater&amp;lt;AbstractSequencer, Sequence[]&amp;gt; SEQUENCE_UPDATER = ...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final int bufferSize;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final WaitStrategy waitStrategy;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// &lt;b&gt;当前缓冲指针&lt;/b&gt;，初始为-1是因为获取RingBuffer下一个元素指针能是通过next()获取的，&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;next() 中通过 VarHandle 并发安全的执行 CAS getAndAdd(this, 1) 方法后再加1&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected final &lt;b&gt;Sequence cursor&lt;/b&gt; = new Sequence(-1L);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// ???&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;protected volatile &lt;b&gt;Sequence[] gatingSequences&lt;/b&gt; = new Sequence[0];&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="500" width="400" height="220" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-50" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-49" target="fhfUE1HdMHP-IcORmnVZ-47">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-49" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MultiProducerSequencer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final VarHandle &lt;b&gt;AVAILABLE_ARRAY&lt;/b&gt; =&amp;nbsp; &lt;br&gt;&amp;nbsp; &amp;nbsp; MethodHandles.arrayElementVarHandle(int[].class);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Sequence &lt;b&gt;gatingSequenceCache&lt;/b&gt; = new Sequence(-1L);&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 用于标记环形缓冲中哪些位置的元素是可用的，每往RingBuffer中添加一个值都要标记一下，同样消费时也要标记&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final int[] &lt;b&gt;availableBuffer&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final int indexMask;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final int indexShift;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="760" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-56" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-51" target="fhfUE1HdMHP-IcORmnVZ-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-51" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Sequence &lt;font color=&quot;#007fff&quot;&gt;用作索引(指针)&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;官方说使用Sequence作为一种手段来&lt;b&gt;识别特定组件的位置&lt;/b&gt;。每个消费者（事件处理器）都像Disruptor本身一样维护一个Sequence。大多数并发代码依赖于这些Sequence值的移动，因此Sequence支持AtomicLong的许多当前特性。事实上，两者之间&lt;b&gt;唯一的真实的区别是Sequence包含了额外的功能来防止Sequence和其他值之间的错误共享&lt;/b&gt;。&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;static final long INITIAL_VALUE = -1L;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;//&amp;nbsp;VarHandle 提供了一种类型安全的方式来访问和修改内存中的变量，避免了 Unsafe 类中的一些不安全操作&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private static final &lt;b&gt;VarHandle&lt;/b&gt; VALUE_FIELD;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="500" width="400" height="220" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-57" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-53" target="fhfUE1HdMHP-IcORmnVZ-55">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-53" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RhsPadding&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;RhsPadding 中也是56个字节字段， p90-p157，用于防止内存伪共享&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="380" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-54" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;LhsPadding&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;LhsPadding&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;中也是56个字节字段， p10-p77，用于防止内存伪共享&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="140" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-58" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-55" target="fhfUE1HdMHP-IcORmnVZ-54">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-55" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Value&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;b style=&quot;&quot;&gt;protected long value;&lt;/b&gt;&lt;br&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1760" y="260" width="400" height="80" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-62" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-59" target="fhfUE1HdMHP-IcORmnVZ-61">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-59" value="&lt;font color=&quot;#007fff&quot;&gt;// 这里传空 Sequence 数组，后面创建 SequenceBarrier 实例的时候就是使用RingBuffer sequencer&lt;br&gt;实例的 cursor 作为 dependentSequence&lt;/font&gt;&lt;br&gt;return createEventProcessors(&lt;b&gt;new Sequence[0]&lt;/b&gt;, handlers);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;" vertex="1" parent="1">
          <mxGeometry x="761" y="300" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-82" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.75;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-61" target="fhfUE1HdMHP-IcORmnVZ-78">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-61" value="&lt;div&gt;EventHandlerGroup&amp;lt;T&amp;gt; createEventProcessors(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final Sequence[] &lt;b&gt;barrierSequences&lt;/b&gt;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final EventHandler&amp;lt;? super T&amp;gt;[] eventHandlers)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // TODO ??? &lt;b&gt;每个EventHandler 对应一个Sequence&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final Sequence[] processorSequences = new Sequence[eventHandlers.length];&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 使用 Sequence 创建屏障&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; final SequenceBarrier &lt;b&gt;barrier&lt;/b&gt; = ringBuffer.&lt;b&gt;newBarrier&lt;/b&gt;(barrierSequences);&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 遍历将每个 EventHandler 封装成 BatchEventProcessor 注册到 ConsumerRepository&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 同时绑定的多个消费者中的 SequenceBarrier 实例相同（即监听同一个 mutex）&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (int i = 0, eventHandlersLength = eventHandlers.length; i &amp;lt; eventHandlersLength; i++)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final EventHandler&amp;lt;? super T&amp;gt; eventHandler = eventHandlers[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final BatchEventProcessor&amp;lt;T&amp;gt; &lt;b&gt;batchEventProcessor&lt;/b&gt; =&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new BatchEventProcessorBuilder().build(ringBuffer, &lt;b&gt;barrier&lt;/b&gt;, eventHandler);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (exceptionHandler != null)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; batchEventProcessor.setExceptionHandler(exceptionHandler);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;//注册到消费者集合&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;consumerRepository&lt;/b&gt;.&lt;b&gt;add&lt;/b&gt;(batchEventProcessor, eventHandler, &lt;b&gt;barrier&lt;/b&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;processorSequences&lt;/b&gt;[i] = batchEventProcessor.getSequence();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;// 将&amp;nbsp;processorSequences 加入到 RingBuffer 内部 Sequencer 的&amp;nbsp;gatingSequences ???&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;updateGatingSequencesForNextInChain&lt;/b&gt;(barrierSequences, processorSequences);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return new &lt;b&gt;EventHandlerGroup&lt;/b&gt;&amp;lt;&amp;gt;(this, consumerRepository, processorSequences);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="1241" y="300" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-65" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;disruptor = {Disruptor@860}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp;&lt;b&gt;ringBuffer&lt;/b&gt; = {RingBuffer@863}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; p10 = 0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; p77 = 0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; indexMask = 1023&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;entries&lt;/b&gt; = {Object[1088]@1038}&amp;nbsp; &amp;nbsp;&lt;b&gt;1088 = bufferSize + 2*BUFFER_PAD&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; bufferSize = 1024&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;sequencer&lt;/b&gt; = {MultiProducerSequencer@1039}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;gatingSequenceCache = {Sequence@1041} &quot;-1&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;b&gt;availableBuffer&lt;/b&gt; = {int[1024]@1042} [-1, ...]&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;indexMask = 1023&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;indexShift = 10&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;bufferSize = 1024&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;waitStrategy = {BlockingWaitStrategy@1043}&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;cursor = {Sequence@1044} &quot;-1&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;b&gt;gatingSequences&lt;/b&gt; = {Sequence[1]@1045}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; 0 = {Sequence@1009} &quot;-1&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; RingBufferPad.p10 = 0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; RingBufferPad.p77 = 0&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp;threadFactory = {DaemonThreadFactory@871} &quot;INSTANCE&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp;&lt;b&gt;consumerRepository&lt;/b&gt; = {ConsumerRepository@865}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; eventProcessorInfoByEventHandler = {IdentityHashMap@1016}&amp;nbsp; size = 1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;{LongEventHandler@980}&amp;nbsp; -&amp;gt; {EventProcessorInfo@1054}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; eventProcessorInfoBySequence = {IdentityHashMap@1017}&amp;nbsp; size = 1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;{Sequence@1009} &quot;-1&quot; -&amp;gt; {EventProcessorInfo@1054}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &lt;b&gt;consumerInfos&lt;/b&gt; = {ArrayList@1018}&amp;nbsp; size = 1&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;0 = {EventProcessorInfo@1054}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; eventprocessor = {BatchEventProcessor@991}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;barrier&lt;/b&gt; = {ProcessingSequenceBarrier@977}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; endOfChain = true&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp;started = {AtomicBoolean@872} &quot;false&quot;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp;exceptionHandler = {ExceptionHandlerWrapper@864}&amp;nbsp;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1720" y="300" width="350" height="420" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-69" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-66" target="fhfUE1HdMHP-IcORmnVZ-68">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-66" value="&lt;div&gt;long sequence = ringBuffer.&lt;b&gt;next&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//获取 cursor 指针的下一索引，本质是CAS getAndAdd(1)&lt;/font&gt;&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div&gt;try {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; //获取 sequence 指针指向的元素节点&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; LongEvent event = ringBuffer.&lt;b&gt;get&lt;/b&gt;(sequence);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; event.&lt;b&gt;set&lt;/b&gt;(bb.getLong(0));&lt;/div&gt;&lt;div&gt;} finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ringBuffer.&lt;b&gt;publish&lt;/b&gt;(sequence);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=7;" vertex="1" parent="1">
          <mxGeometry x="761" y="980" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-73" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-68" target="fhfUE1HdMHP-IcORmnVZ-72">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-68" value="sequencer.publish(sequence);" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=7;" vertex="1" parent="1">
          <mxGeometry x="1241" y="1000" width="199" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-71" value="看源码过程中的疑问：&lt;br&gt;&lt;ul&gt;&lt;li&gt;RingBuffer 存满后怎么处理的？&lt;/li&gt;&lt;li&gt;为何要每个消费者都创建一个线程？不会造成线程数量太多么？&lt;br&gt;&lt;/li&gt;&lt;li&gt;为何 Sequence value 前后要填充 56 字节?&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;前后填充字节应该是解决伪共享内存问题，但是为何要前后分别填充 56 字节？&lt;/font&gt;&lt;/li&gt;&lt;li&gt;多生产者与多消费者怎么保持 Sequence 索引线程安全的？&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="400" width="520" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-79" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-72" target="fhfUE1HdMHP-IcORmnVZ-78">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-72" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//在 Sequencer &lt;b&gt;availableBuffer&lt;/b&gt; 中标记此位置的元素可用&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;setAvailable&lt;/b&gt;(sequence);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;//唤醒所有等待此 mutex 的线程&lt;/font&gt;&lt;/div&gt;&lt;div&gt;waitStrategy.&lt;b&gt;signalAllWhenBlocking&lt;/b&gt;();&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=7;" vertex="1" parent="1">
          <mxGeometry x="1482" y="1000" width="199" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-74" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;WaitStrategy (I)&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;定义线程没有事件消费时的等待策略，有8种实现&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="1560" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-77" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-76" target="fhfUE1HdMHP-IcORmnVZ-74">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-76" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;BlockingWaitStrategy&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;阻塞等待策略，借助 Java 对象的等待唤醒机制&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 借助对象的 wait() notifyXxx() 实现&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;private final Object &lt;b&gt;mutex&lt;/b&gt; = new Object();&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;重要方法：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="1840" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-89" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=-0.002;entryY=0.28;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;entryPerimeter=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-78" target="fhfUE1HdMHP-IcORmnVZ-87">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2140" y="1070" as="targetPoint" />
            <Array as="points">
              <mxPoint x="2410" y="1030" />
              <mxPoint x="2410" y="869" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-90" value="&lt;font color=&quot;#007fff&quot;&gt;唤醒 （BlockingWaitStrategy）&lt;/font&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="fhfUE1HdMHP-IcORmnVZ-89">
          <mxGeometry x="-0.9342" y="-1" relative="1" as="geometry">
            <mxPoint x="67" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-78" value="&lt;div&gt;synchronized (mutex){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; mutex.&lt;b&gt;notifyAll&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;从前面可以看到事件消费者绑定逻辑里面，&lt;b&gt;一起绑定的多个消费者监听同一个 mutext&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=7;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1721" y="1000" width="199" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-81" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-32" target="fhfUE1HdMHP-IcORmnVZ-80">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1200" y="150" as="sourcePoint" />
            <mxPoint x="1720" y="150" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-80" value="return createMultiProducer(factory, bufferSize, new &lt;b&gt;BlockingWaitStrategy&lt;/b&gt;());&lt;br&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;默认使用&amp;nbsp; BlockingWaitStrategy 策略，即Java对象的 wait notify 机制&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=10;" vertex="1" parent="1">
          <mxGeometry x="1241" y="120" width="440" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-86" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-83" target="fhfUE1HdMHP-IcORmnVZ-85">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-83" value="BatchEventProcessor#run()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=9;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1720" y="740" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-88" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="fhfUE1HdMHP-IcORmnVZ-85" target="fhfUE1HdMHP-IcORmnVZ-87">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-85" value="&lt;div&gt;int witnessValue = running.compareAndExchange(IDLE, RUNNING);&lt;/div&gt;&lt;div&gt;if (witnessValue == IDLE) { // Successful CAS&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sequenceBarrier.&lt;b&gt;clearAlert&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;// 将 BatchEventProcess alerted 设置为 false&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;notifyStart&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;//回调事件处理器启动钩子，做些处理器初始化&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (running.get() == RUNNING)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; // 内部死循环，等待下个索引的事件可用，有事件会被唤醒&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;processEvents&lt;/b&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } finally {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;notifyShutdown&lt;/b&gt;(); &lt;font color=&quot;#007fff&quot;&gt;// 回调关闭钩子，后事处理&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; running.set(IDLE);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;} else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (witnessValue == RUNNING) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new IllegalStateException(&quot;Thread is already running&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; earlyExit();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" vertex="1" parent="1">
          <mxGeometry x="1960" y="740" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="fhfUE1HdMHP-IcORmnVZ-87" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;private void &lt;b&gt;processEvents&lt;/b&gt;() {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; T event = null;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; long nextSequence = sequence.get() + 1L;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;br style=&quot;font-size: 9px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;while&lt;/b&gt; (true) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final long startOfBatchSequence = nextSequence;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 9px;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9px;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;// 等待被唤醒，被&lt;b style=&quot;font-size: 9px;&quot;&gt;唤醒后可能缓冲中已经填充了多个事件（比如被事件1唤醒但是读&lt;/b&gt;&lt;b&gt;dependentSequence前又有事件2、事件3插入了环形缓冲&lt;/b&gt;&lt;b style=&quot;font-size: 9px;&quot;&gt;），返回当前可用的最大的 Sequence 的索引值&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final long availableSequence = sequenceBarrier.&lt;b&gt;waitFor&lt;/b&gt;(nextSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // batchLimitOffset 默认是 Integer.MAX_VALUE&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final long endOfBatchSequence = min(nextSequence + batchLimitOffset, availableSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (nextSequence &amp;lt;= endOfBatchSequence) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //调用自定义 EventHandler 的批处理前置处理&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventHandler.&lt;b&gt;onBatchStart&lt;/b&gt;(endOfBatchSequence - nextSequence + 1, availableSequence - nextSequence + 1);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 轮询取这些事件的事件对象，回调自定义 EventHandler onEvent 事件处理器方法&lt;/font&gt;&lt;br style=&quot;font-size: 9px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; while (nextSequence &amp;lt;= endOfBatchSequence) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; event = &lt;b&gt;dataProvider&lt;/b&gt;.get(nextSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventHandler.&lt;b&gt;onEvent&lt;/b&gt;(event, nextSequence, nextSequence == endOfBatchSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nextSequence++;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;br style=&quot;font-size: 9px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; retriesAttempted = 0;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sequence.set(endOfBatchSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (final &lt;b&gt;RewindableException&lt;/b&gt; e) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nextSequence = rewindHandler.attemptRewindGetNextSequence(e, startOfBatchSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (final &lt;b&gt;TimeoutException&lt;/b&gt; e) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;notifyTimeout&lt;/b&gt;(sequence.get());&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (final &lt;b&gt;AlertException&lt;/b&gt; ex) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (running.get() != RUNNING) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;catch (final Throwable ex) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleEventException(ex, nextSequence, event);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sequence.set(nextSequence);&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nextSequence++;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;font color=&quot;#007fff&quot;&gt; //while end&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=9;align=left;arcSize=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2440" y="740" width="520" height="460" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

<mxfile host="Electron" modified="2024-12-05T18:51:27.750Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="aVskCkifoEGKhiLhhKOt" version="21.6.5" type="device" pages="2">
  <diagram id="tLHoaD5JjfJZB9Y9MGtr" name="客户端">
    <mxGraphModel dx="2261" dy="842" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-1" value="&lt;h1 style=&quot;font-size: 18px&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;Redis 工作原理流程（7.0.2）&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px&quot;&gt;流程中忽略一些不重要的步骤，主要关注重要的逻辑。&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;font style=&quot;font-size: 14px&quot;&gt;前置知识：&lt;/font&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;font style=&quot;font-size: 10px&quot;&gt;Linux C 编程基础 、Unix网络编程&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="19" width="760" height="161" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-3" target="h2xVOpv2UwFSZ0rIkVq2-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-3" value="start" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="100" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-17" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=8;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-4" target="h2xVOpv2UwFSZ0rIkVq2-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-19" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-4" target="h2xVOpv2UwFSZ0rIkVq2-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-4" value="&lt;font style=&quot;font-size: 10px&quot;&gt;通过命令行参数、环境变量、设置默认值等方式&lt;font style=&quot;font-size: 10px&quot;&gt;初始化全局结构体config的成员&lt;/font&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="60" y="280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-5" value="&lt;font color=&quot;#007fff&quot;&gt;redis-cli.c$main()&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="85" y="180" width="110" height="20" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-6" value="src/redis-cli.c config" style="swimlane;startSize=20;" parent="1" vertex="1">
          <mxGeometry x="-600" y="280" width="560" height="740" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-7" value="&lt;div&gt;char *&lt;b&gt;hostip&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;int &lt;b&gt;hostport&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *hostsocket;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int tls;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;cliSSLconfig sslconfig;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;long repeat;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;long interval;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int dbnum;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int interactive;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int shutdown;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int monitor_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int pubsub_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int latency_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int latency_dist_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int latency_history;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int lru_test_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;long long lru_test_sample_size;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int cluster_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int cluster_reissue_command;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int slave_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int pipe_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int pipe_timeout;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int getrdb_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int stat_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int scan_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int intrinsic_latency_mode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int intrinsic_latency_duration;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *pattern;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *rdb_filename;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int bigkeys;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int memkeys;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;unsigned memkeys_samples;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int hotkeys;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int stdinarg; /* get last arg from stdin. (-x option) */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *auth;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int askpass;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *user;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int output; /* output mode, see OUTPUT_* defines */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int push_output; /* Should we display spontaneous PUSH replies */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;sds mb_delim;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;sds cmd_delim;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char prompt[128];&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *eval;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int eval_ldb;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int eval_ldb_sync;&amp;nbsp; /* Ask for synchronous mode of the Lua debugger. */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int eval_ldb_end;&amp;nbsp; &amp;nbsp;/* Lua debugging session ended. */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int enable_ldb_on_eval; /* Handle manual SCRIPT DEBUG + EVAL commands. */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int last_cmd_type;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int verbose;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int set_errcode;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;clusterManagerCommand cluster_manager_command;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int no_auth_warning;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int resp3;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int in_multi;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int pre_multi_dbnum;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;" parent="h2xVOpv2UwFSZ0rIkVq2-6" vertex="1">
          <mxGeometry y="20" width="560" height="720" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=9;fontColor=#000000;curved=1;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-13" target="h2xVOpv2UwFSZ0rIkVq2-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-13" value="config.xxx = xxx;&lt;br&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 9px&quot;&gt;初始化全局结构体config的成员&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-14" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=9;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-15" target="h2xVOpv2UwFSZ0rIkVq2-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-15" value="firstarg = parseOptions(argc,argv)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;解析命令行参数，将参数值赋值给对应的config成员&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="340" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-16" value="parseEnv()&lt;br&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 8px&quot;&gt;读取环境变量REDISCLI_AUTH、REDISCLI_CLUSTER_YES&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-size: 8px&quot;&gt;将值赋值给对应的config成员&lt;/span&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="400" width="160" height="60" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-21" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-18" target="h2xVOpv2UwFSZ0rIkVq2-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-33" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-18" target="h2xVOpv2UwFSZ0rIkVq2-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-18" value="CLI启动前预处理" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="60" y="520" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-23" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-20" target="h2xVOpv2UwFSZ0rIkVq2-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-20" value="Cluster Manager mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="520" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-25" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-22" target="h2xVOpv2UwFSZ0rIkVq2-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-22" value="Latency mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="580" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-27" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-24" target="h2xVOpv2UwFSZ0rIkVq2-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-24" value="Latency distribution mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="640" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-29" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-26" target="h2xVOpv2UwFSZ0rIkVq2-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-26" value="Slave mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="700" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-31" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-28" target="h2xVOpv2UwFSZ0rIkVq2-30" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-28" value="Get RDB mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="760" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-44" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-30" target="h2xVOpv2UwFSZ0rIkVq2-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-30" value="Pipe mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="820" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-35" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-32" target="h2xVOpv2UwFSZ0rIkVq2-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-54" value="事件&lt;br&gt;回调" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-32" target="h2xVOpv2UwFSZ0rIkVq2-53" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-32" value="signal(SIGPIPE, SIG_IGN)&lt;br&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px&quot;&gt;定义接收到SIGPIPE信号的处理&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="60" y="1200" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-50" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-34" target="h2xVOpv2UwFSZ0rIkVq2-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-58" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-34" target="h2xVOpv2UwFSZ0rIkVq2-57" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-34" value="cliConnect(0)&lt;br&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px&quot;&gt;0指连接或重连 1退出&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="60" y="1280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-39" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-36" target="h2xVOpv2UwFSZ0rIkVq2-38" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-36" value="Stat mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1000" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-41" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-38" target="h2xVOpv2UwFSZ0rIkVq2-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-38" value="Scan mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1060" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-40" value="LRU test mode" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="1120" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-45" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-42" target="h2xVOpv2UwFSZ0rIkVq2-43" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-42" value="config.memkeys" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="880" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-46" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=10;fontColor=#000000;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-43" target="h2xVOpv2UwFSZ0rIkVq2-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-43" value="config.hotkeys" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="940" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-142" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-49" target="h2xVOpv2UwFSZ0rIkVq2-141" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-49" value="repl()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="60" y="2280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-53" value="&lt;font style=&quot;font-size: 10px&quot;&gt;#define&lt;span&gt;&#x9;&lt;/span&gt;SIG_IGN&lt;span&gt;&#x9;&lt;br&gt;&lt;/span&gt;&amp;nbsp;((__sighandler_t)&amp;nbsp; 1)&lt;br&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px&quot;&gt;忽略信号, 为何是忽略？&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="280" y="1200" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-56" value="&lt;font style=&quot;font-size: 8px&quot;&gt;SIGPIPE信号的作用：&lt;br&gt;当服务器close一个连接时，若client端接着发数据。根据TCP协议的规定，会收到一个RST响应，client再往这个服务器发送数据时，系统会发出一个SIGPIPE信号给进程，告诉进程这个连接已经断开了，不要再写了。&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;fontColor=#007FFF;" parent="1" vertex="1">
          <mxGeometry x="440" y="1190" width="260" height="60" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-60" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-57" target="h2xVOpv2UwFSZ0rIkVq2-59" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-120" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-57" target="h2xVOpv2UwFSZ0rIkVq2-119" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-57" value="&lt;font style=&quot;font-size: 10px&quot;&gt;context = redisConnect(&lt;br&gt;config.hostip,config.hostport)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="280" y="1280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-62" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-59" target="h2xVOpv2UwFSZ0rIkVq2-61" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-59" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;REDIS_OPTIONS_SET_TCP(&lt;br style=&quot;font-size: 10px;&quot;&gt;&amp;amp;options, ip, port)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="480" y="1280" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-66" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-61" target="h2xVOpv2UwFSZ0rIkVq2-65" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-61" value="redisConnectWithOptions(&lt;br style=&quot;font-size: 10px;&quot;&gt;&amp;amp;options)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="480" y="1340" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-63" value="src/redis-cli.c redisContext" style="swimlane;startSize=20;" parent="1" vertex="1">
          <mxGeometry x="-600" y="1060" width="560" height="500" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-64" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;const redisContextFuncs *funcs;&amp;nbsp; &amp;nbsp;/* Function table */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int err; /* Error flags, 0 when there is no error */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char errstr[128]; /* String representation of error when applicable */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;redisFD fd;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;int flags;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;char *obuf; /* Write buffer */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;redisReader *reader; /* Protocol reader */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;enum redisConnectionType connection_type;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;struct timeval *connect_timeout;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;struct timeval *command_timeout;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;struct {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; char *host;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; char *source_addr;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; int port;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;} tcp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;struct {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; char *path;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;} unix_sock;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;/* For non-blocking connect */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;struct sockadr *saddr;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;size_t addrlen;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;/* Optional data and corresponding destructor users can use to provide&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; * context to a given redisContext.&amp;nbsp; Not used by hiredis. */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;void *privdata;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;void (*free_privdata)(void *);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;/* Internal context pointer presently used by hiredis to manage&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; * SSL connections. */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;void *privctx;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;/* An optional RESP3 PUSH handler */&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;redisPushFn *push_cb;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;" parent="h2xVOpv2UwFSZ0rIkVq2-63" vertex="1">
          <mxGeometry y="20" width="560" height="480" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-68" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-65" target="h2xVOpv2UwFSZ0rIkVq2-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-65" value="redisContext *c = &lt;b style=&quot;font-size: 10px;&quot;&gt;redisContextInit&lt;/b&gt;()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="680" y="1340" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-70" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-67" target="h2xVOpv2UwFSZ0rIkVq2-69" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-67" value="c-&amp;gt;flags |= REDIS_BLOCK;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="680" y="1400" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-72" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-69" target="h2xVOpv2UwFSZ0rIkVq2-71" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-69" value="redisSetPushCallback(c, redisPushAutoFree)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="680" y="1460" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-74" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-71" target="h2xVOpv2UwFSZ0rIkVq2-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-71" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;c-&amp;gt;privdata = options-&amp;gt;privdata;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;free_privdata = options-&amp;gt;free_privdata;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="640" y="1520" width="240" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-76" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-73" target="h2xVOpv2UwFSZ0rIkVq2-75" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-73" value="redisContextUpdateConnectTimeout(c, options-&amp;gt;connect_timeout)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="640" y="1580" width="240" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-78" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-75" target="h2xVOpv2UwFSZ0rIkVq2-77" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="760" y="1700" />
              <mxPoint x="920" y="1700" />
              <mxPoint x="920" y="1505" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-75" value="redisContextUpdateCommandTimeout(c, options-&amp;gt;command_timeout)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="640" y="1640" width="240" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-80" value="REDIS_CONN_TCP" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-77" target="h2xVOpv2UwFSZ0rIkVq2-79" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1100" y="1505" />
              <mxPoint x="1100" y="1375" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-83" value="REDIS_CONN_UNIX" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-77" target="h2xVOpv2UwFSZ0rIkVq2-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-86" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-77" target="h2xVOpv2UwFSZ0rIkVq2-84" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-87" value="REDIS_CONN_USERFD" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=10;fontColor=#007FFF;" parent="h2xVOpv2UwFSZ0rIkVq2-86" vertex="1" connectable="0">
          <mxGeometry x="0.147" y="4" relative="1" as="geometry">
            <mxPoint y="-21" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-118" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-77" target="h2xVOpv2UwFSZ0rIkVq2-117" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-77" value="options-&amp;gt;type" style="rhombus;whiteSpace=wrap;html=1;fontSize=10;rounded=1;" parent="1" vertex="1">
          <mxGeometry x="960" y="1475" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-89" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;curved=1;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-79" target="h2xVOpv2UwFSZ0rIkVq2-88" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-79" value="&lt;div&gt;&lt;b&gt;redisContextConnectBindTcp&lt;/b&gt;(c,&amp;nbsp;&lt;/div&gt;&lt;div&gt;options-&amp;gt;endpoint.tcp.ip,&lt;/div&gt;&lt;div&gt;options-&amp;gt;endpoint.tcp.port,&amp;nbsp;&lt;/div&gt;&lt;div&gt;options-&amp;gt;connect_timeout,&lt;/div&gt;&lt;div&gt;options-&amp;gt;endpoint.tcp.source_addr)&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1160" y="1340" width="200" height="70" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-81" value="" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1160" y="1482.5" width="200" height="45" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-84" value="" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1160" y="1600" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-91" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-88" target="h2xVOpv2UwFSZ0rIkVq2-90" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-88" value="&lt;div&gt;c-&amp;gt;connection_type = REDIS_CONN_TCP;&lt;/div&gt;&lt;div&gt;c-&amp;gt;tcp.port = port;&lt;/div&gt;&lt;div&gt;c-&amp;gt;tcp.host = hi_strdup(addr);&lt;br&gt;&lt;div&gt;hints.ai_family = AF_INET;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; hints.ai_socktype = SOCK_STREAM&lt;/div&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1342.5" width="200" height="65" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-93" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-90" target="h2xVOpv2UwFSZ0rIkVq2-92" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-90" value="rv = &lt;b&gt;getaddrinfo&lt;/b&gt;(c-&amp;gt;tcp.host,_port,&amp;amp;hints,&amp;amp;servinfo)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1430" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-95" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-92" target="h2xVOpv2UwFSZ0rIkVq2-94" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-92" value="for (p = servinfo; p != NULL; p = p-&amp;gt;ai_next)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1487.5" width="200" height="22.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-97" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-94" target="h2xVOpv2UwFSZ0rIkVq2-96" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-94" value="s = socket(p-&amp;gt;ai_family,p-&amp;gt;ai_socktype,p-&amp;gt;ai_protocol)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;创建套接口，本质是个FD&lt;/font&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1557.5" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-99" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-96" target="h2xVOpv2UwFSZ0rIkVq2-98" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-101" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-96" target="h2xVOpv2UwFSZ0rIkVq2-100" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-96" value="redisSetBlocking(c,0)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;设置非阻塞模式&lt;/font&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1620" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-98" value="flags |= O_NONBLOCK;&lt;br&gt;fcntl(c-&amp;gt;fd, F_SETFL, flags)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1740" y="1620" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-103" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-100" target="h2xVOpv2UwFSZ0rIkVq2-102" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-100" value="memcpy(c-&amp;gt;saddr, p-&amp;gt;ai_addr, p-&amp;gt;ai_addrlen)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1680" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-105" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-102" target="h2xVOpv2UwFSZ0rIkVq2-104" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-102" value="&lt;b&gt;connect&lt;/b&gt;(s,p-&amp;gt;ai_addr,p-&amp;gt;ai_addrlen)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1740" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-107" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-104" target="h2xVOpv2UwFSZ0rIkVq2-106" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-109" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-104" target="h2xVOpv2UwFSZ0rIkVq2-108" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-104" value="redisContextWaitReady(c,timeout_msec)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1800" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-112" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-106" target="h2xVOpv2UwFSZ0rIkVq2-111" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-114" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-106" target="h2xVOpv2UwFSZ0rIkVq2-113" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-106" value="redisSetTcpNoDelay(c)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1860" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-108" value="&lt;div&gt;wfd[0].fd&amp;nbsp; &amp;nbsp; &amp;nbsp;= c-&amp;gt;fd;&lt;/div&gt;&lt;div&gt;wfd[0].events = POLLOUT&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1740" y="1800" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-111" value="&lt;b&gt;setsockopt&lt;/b&gt;(c-&amp;gt;fd, IPPROTO_TCP, TCP_NODELAY, &amp;amp;yes, sizeof(yes))" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1740" y="1860" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-116" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-113" target="h2xVOpv2UwFSZ0rIkVq2-115" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-113" value="&lt;div&gt;c-&amp;gt;flags |= REDIS_CONNECTED;&lt;/div&gt;&lt;div&gt;rv = REDIS_OK;&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1920" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-115" value="freeaddrinfo(servinfo)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;align=center;" parent="1" vertex="1">
          <mxGeometry x="1500" y="1980" width="200" height="42.5" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-117" value="redisContextSetTimeout(c, *options-&amp;gt;command_timeout)" style="whiteSpace=wrap;html=1;fontSize=10;rounded=1;" parent="1" vertex="1">
          <mxGeometry x="920" y="1742.5" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-122" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-119" target="h2xVOpv2UwFSZ0rIkVq2-121" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-132" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-119" target="h2xVOpv2UwFSZ0rIkVq2-131" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-119" value="&lt;font style=&quot;font-size: 10px&quot;&gt;anetKeepAlive(NULL, context-&amp;gt;fd, REDIS_CLI_KEEPALIVE_INTERVAL)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="260" y="1760" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-124" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-121" target="h2xVOpv2UwFSZ0rIkVq2-123" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-121" value="&lt;font style=&quot;font-size: 10px&quot;&gt;setsockopt(fd, SOL_SOCKET, SO_KEEPALIVE, &amp;amp;val, sizeof(val))&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="500" y="1760" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-126" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-123" target="h2xVOpv2UwFSZ0rIkVq2-125" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-123" value="&lt;font style=&quot;font-size: 10px&quot;&gt;setsockopt(fd, IPPROTO_TCP, TCP_KEEPIDLE, &amp;amp;val, sizeof(val))&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="500" y="1820" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-130" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-125" target="h2xVOpv2UwFSZ0rIkVq2-129" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-125" value="&lt;font style=&quot;font-size: 10px&quot;&gt;setsockopt(fd, IPPROTO_TCP, TCP_KEEPINTVL, &amp;amp;val, sizeof(val))&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="500" y="1880" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-129" value="&lt;font style=&quot;font-size: 10px&quot;&gt;setsockopt(fd, IPPROTO_TCP, TCP_KEEPCNT, &amp;amp;val, sizeof(val))&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="500" y="1940" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-134" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-131" target="h2xVOpv2UwFSZ0rIkVq2-133" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-131" value="&lt;font style=&quot;font-size: 10px&quot;&gt;cliAuth(context, config.user, config.auth)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="260" y="2000" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-136" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-133" target="h2xVOpv2UwFSZ0rIkVq2-135" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-133" value="&lt;font style=&quot;font-size: 10px&quot;&gt;cliSelect()&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="260" y="2060" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-138" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-135" target="h2xVOpv2UwFSZ0rIkVq2-137" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-135" value="&lt;font style=&quot;font-size: 10px&quot;&gt;cliSwitchProto()&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="260" y="2120" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-137" value="&lt;font style=&quot;font-size: 10px&quot;&gt;redisSetPushCallback(context, cliPushHandler)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="260" y="2200" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-147" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-141" target="h2xVOpv2UwFSZ0rIkVq2-146" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-141" value="&lt;b&gt;while&lt;/b&gt;：&lt;br&gt;line = &lt;b&gt;linenoise&lt;/b&gt;(context ? config.prompt : &quot;not connected&amp;gt; &quot;)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="260" y="2280" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-144" value="建立基于epoll 的非阻塞的 TCP Socket连接" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;fontColor=#007FFF;" parent="1" vertex="1">
          <mxGeometry x="150" y="1340" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-145" value="读取命令行输入，向服务器发送命令，并等待响应" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;fontColor=#007FFF;" parent="1" vertex="1">
          <mxGeometry x="60" y="2330" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-149" value="" style="edgeStyle=orthogonalEdgeStyle;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=10;fontColor=#007FFF;" parent="1" source="h2xVOpv2UwFSZ0rIkVq2-146" target="h2xVOpv2UwFSZ0rIkVq2-148" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-146" value="&lt;b&gt;issueCommandRepeat&lt;/b&gt;(argc-skipargs, argv+skipargs, repeat)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="360" y="2360" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="h2xVOpv2UwFSZ0rIkVq2-148" value="&lt;b&gt;cliReadReply(0)&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="360" y="2420" width="200" height="40" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="5lwKfsEd2gCy0VJcJqGb" name="服务端">
    <mxGraphModel dx="2849" dy="702" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-114" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-95" target="GsVpoBwgjqSGVhL4LbLS-106">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2900" y="2160" />
              <mxPoint x="2900" y="2220" />
              <mxPoint x="140" y="2220" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-113" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-57" target="GsVpoBwgjqSGVhL4LbLS-61">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1180" y="2030" />
              <mxPoint x="1180" y="1600" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-59" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-53" target="GsVpoBwgjqSGVhL4LbLS-36">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1140" y="1870" />
              <mxPoint x="1140" y="1290" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-60" value="对应的处理函数" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-59">
          <mxGeometry x="-0.9539" y="-4" relative="1" as="geometry">
            <mxPoint x="18" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-77" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-55" target="GsVpoBwgjqSGVhL4LbLS-61">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1180" y="1950" />
              <mxPoint x="1180" y="1600" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-1" value="&lt;h1 style=&quot;font-size: 18px&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;Redis Server 工作原理流程（6.2.6）&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px&quot;&gt;流程中忽略一些不重要的步骤，主要关注 Redis Server epoll 模型请求处理流程、Redis 命令解析分发和执行流程。&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="10" width="760" height="70" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-2" target="GsVpoBwgjqSGVhL4LbLS-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-2" value="int main(int argc, char **argv)&amp;nbsp;&lt;br&gt;服务端初始化" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="40" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-3" value="server.c" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="105" y="90" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-54" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-4" target="GsVpoBwgjqSGVhL4LbLS-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-56" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-4" target="GsVpoBwgjqSGVhL4LbLS-55">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-58" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-4" target="GsVpoBwgjqSGVhL4LbLS-57">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-4" value="客户端事件" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="40" y="1840" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-5" target="GsVpoBwgjqSGVhL4LbLS-9">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="730" y="960" />
              <mxPoint x="730" y="420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-11" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-10">
          <mxGeometry x="0.96" y="-3" relative="1" as="geometry">
            <mxPoint x="-7" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-47" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.75;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-5" target="GsVpoBwgjqSGVhL4LbLS-46">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-5" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; struct timeval tv;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; int j;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; char config_from_stdin = 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;#ifdef REDIS_TEST&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;#endif&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;#ifdef INIT_SETPROCTITLE_REPLACEMENT&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; spt_init(argc, argv);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;#endif&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 设置时区&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; setlocale(LC_COLLATE,&quot;&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; tzset();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 设置OOM处理器&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; zmalloc_set_oom_handler(redisOutOfMemoryHandler);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 设置随机种子&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; srand(time(NULL)^getpid());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; srandom(time(NULL)^getpid());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; gettimeofday(&amp;amp;tv,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; init_genrand64(((long long) tv.tv_sec * 1000000 + tv.tv_usec) ^ getpid());&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; crc64_init();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; umask(server.umask = umask(0777));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; uint8_t hashseed[16];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; getRandomBytes(hashseed,sizeof(hashseed));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; dictSetHashFunctionSeed(hashseed);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; server.sentinel_mode = checkForSentinelMode(argc,argv);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 初始化服务端配置，Redis中的命令对象在这个阶段注册到 redisServer.commands 中的&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // &lt;/b&gt;命令列表详细参考 server.c&amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;struct redisCommand redisCommandTable[] = {}&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;b style=&quot;font-size: 10px;&quot;&gt;initServerConfig&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // ACL权限控制初始化&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; ACLInit();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; moduleInitModulesSystem();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 传输层安全协议初始化&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; tlsInit();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 保存执行路径，用于数据存储和重启恢复&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; server.executable = getAbsolutePath(argv[0]);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; server.exec_argv = zmalloc(sizeof(char*)*(argc+1));&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; server.exec_argv[argc] = NULL;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; for (j = 0; j &amp;lt; argc; j++) server.exec_argv[j] = zstrdup(argv[j]);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 是否是哨兵模式，是的话初始化相关配置&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (server.sentinel_mode) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; initSentinelConfig();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; initSentinel();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; //检查是否要执行RDB检测或AOF检查&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (strstr(argv[0],&quot;redis-check-rdb&quot;) != NULL)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; redis_check_rdb_main(argc,argv,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; else if (strstr(argv[0],&quot;redis-check-aof&quot;) != NULL)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; redis_check_aof_main(argc,argv);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 运行参数解析&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (argc &amp;gt;= 2) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; j = 1; /* First option to parse in argv[] */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sds options = sdsempty();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ... 一些参数解析流程 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; loadServerConfig(server.configfile, config_from_stdin, options);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.sentinel_mode) loadSentinelConfigFromQueue();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sdsfree(options);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (server.sentinel_mode) sentinelCheckConfigFile();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; server.supervised = redisIsSupervised(server.supervised_mode);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; int background = server.daemonize &amp;amp;&amp;amp; !server.supervised;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (background) daemonize();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; ... 一些日志 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; readOOMScoreAdj();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; //1 初始化 Redis Server&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;initServer&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (background || server.pidfile) createPidFile();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (server.set_proc_title) redisSetProcTitle(NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; redisAsciiArt();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; checkTcpBacklogSettings();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; if (&lt;b style=&quot;font-size: 10px;&quot;&gt;!server.sentinel_mode&lt;/b&gt;) {&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt; // 非哨兵模式&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; /* Things not needed when running in Sentinel mode. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_WARNING,&quot;Server initialized&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ... 系统环境检查、一些日志 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; moduleInitModulesSystemLast();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; moduleLoadFromQueue();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ACLLoadUsersAtStartup();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;InitServerLast&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 从磁盘加载数据到内存，即恢复之前的数据&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;loadDataFromDisk&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.&lt;b style=&quot;font-size: 10px;&quot;&gt;cluster_enabled&lt;/b&gt;) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (verifyClusterConfigWithData() == C_ERR) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_WARNING,&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;You can&#39;t have keys in a DB different than DB 0 when in &lt;span style=&quot;background-color: initial;&quot;&gt;Cluster mode. Exiting.&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exit(1);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.ipfd.count &amp;gt; 0 || server.tlsfd.count &amp;gt; 0)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_NOTICE,&quot;Ready to accept connections&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.sofd &amp;gt; 0)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_NOTICE,&quot;The server is now ready to accept connections at %s&quot;, server.unixsocket);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.supervised_mode == SUPERVISED_SYSTEMD) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!server.masterhost) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redisCommunicateSystemd(&quot;STATUS=Ready to accept connections\n&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redisCommunicateSystemd(&lt;br style=&quot;font-size: 10px;&quot;&gt;&quot;STATUS=Ready to accept connections in read-only mode. Waiting for MASTER &amp;lt;-&amp;gt; REPLICA sync\n&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redisCommunicateSystemd(&quot;READY=1\n&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; } else { &lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 哨兵模式&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ACLLoadUsersAtStartup();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; InitServerLast();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sentinelIsRunning();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.supervised_mode == SUPERVISED_SYSTEMD) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redisCommunicateSystemd(&quot;STATUS=Ready to accept connections\n&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redisCommunicateSystemd(&quot;READY=1\n&quot;);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; //最大内存设置太小警告&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;&amp;nbsp; if (server.maxmemory &amp;gt; 0 &amp;amp;&amp;amp; server.maxmemory &amp;lt; 1024*1024) {&lt;/span&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_WARNING,&quot;WARNING: You specified a maxmemory value that is less than 1MB ...&quot;, server.maxmemory);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; redisSetCpuAffinity(server.server_cpulist);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; setOOMScoreAdj(-1);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; // 轮询读取监听到的事件并处理&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;aeMain&lt;/b&gt;(server.el);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; aeDeleteEventLoop(server.el);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; return 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=1;" vertex="1" parent="1">
          <mxGeometry x="280" y="120" width="440" height="1680" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-7" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;这里面主要是&lt;b&gt;关注通信模块&lt;/b&gt;，需要看 Server 端是&lt;br&gt;&lt;b&gt;怎么接收客户端命令&lt;/b&gt;的，以及怎么&lt;b&gt;通过命令找到&lt;br&gt;对应的命令处理函数&lt;/b&gt;的&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="40" y="180" width="240" height="50" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-22" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-8" target="GsVpoBwgjqSGVhL4LbLS-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-8" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;struct &lt;/span&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;redisServer&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;关键字段（此结构体包含了几百个字段）：&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;pid_t pid;&amp;nbsp;&lt;br&gt;pthread_t main_thread_id;&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;// Redis 数据库字段，Redis KV数据全部存在这里&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;redisDb *&lt;b&gt;db&lt;/b&gt;;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 命令列表&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;dict *&lt;b&gt;commands&lt;/b&gt;;&amp;nbsp;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;dict *orig_commands;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 事件循环&lt;/font&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;aeEventLoop&lt;/b&gt; *&lt;b&gt;el&lt;/b&gt;;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int &lt;b&gt;port&lt;/b&gt;;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* TCP listening port */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int tls_port;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* TLS listening port */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int tcp_backlog;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* TCP listen() backlog */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;char *&lt;b&gt;bindaddr&lt;/b&gt;[CONFIG_BINDADDR_MAX]; /* Addresses we should bind to */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int bindaddr_count;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* Number of addresses in server.bindaddr[] */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;char *unixsocket;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* UNIX socket path */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;mode_t unixsocketperm;&amp;nbsp; &amp;nbsp; &amp;nbsp; /* UNIX socket permission */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;socketFds &lt;b&gt;ipfd&lt;/b&gt;;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* TCP socket file descriptors */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;socketFds tlsfd;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* TLS socket file descriptors */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int sofd;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* Unix socket file descriptor */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;socketFds &lt;b&gt;cfd&lt;/b&gt;;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* Cluster bus listening socket */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 活跃的客户端列表&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;list *&lt;b&gt;clients&lt;/b&gt;;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-440" y="120" width="400" height="440" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-13" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-9" target="GsVpoBwgjqSGVhL4LbLS-12">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1210" y="420" />
              <mxPoint x="1210" y="1000" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-14" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-13">
          <mxGeometry x="0.8903" y="-1" relative="1" as="geometry">
            <mxPoint x="11" y="4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-17" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-9" target="GsVpoBwgjqSGVhL4LbLS-15">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1210" y="420" />
              <mxPoint x="1210" y="200" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-18" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-17">
          <mxGeometry x="0.8692" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-28" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-9" target="GsVpoBwgjqSGVhL4LbLS-27">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1210" y="420" />
              <mxPoint x="1210" y="710" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-29" value="2" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-28">
          <mxGeometry x="0.8455" y="2" relative="1" as="geometry">
            <mxPoint x="5" y="2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-9" value="...&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 1 主要是创建 Epoll 文件描述符&lt;/b&gt;&lt;/font&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;server.el = &lt;b style=&quot;font-size: 10px;&quot;&gt;aeCreateEventLoop&lt;/b&gt;(server.maxclients+CONFIG_FDSET_INCR);&lt;br style=&quot;font-size: 10px;&quot;&gt;...&lt;br style=&quot;font-size: 10px;&quot;&gt;server.db = zmalloc(sizeof(redisDb)*server.dbnum);&lt;br style=&quot;font-size: 10px;&quot;&gt;...&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;// Redis Server 支持3种通信方式： TCP、TLS、UnixSocket ，接收客户端命令&lt;br style=&quot;font-size: 10px;&quot;&gt;// 2 TCP， 这里创建 SocketFd&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/b&gt;&lt;/font&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;if (server.port != 0 &amp;amp;&amp;amp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;listenToPort&lt;/b&gt;(server.&lt;b&gt;port&lt;/b&gt;,&amp;amp;server.ipfd) == C_ERR) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; serverLog(LL_WARNING, &quot;Failed listening on port %u (TCP), aborting.&quot;, server.port);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; exit(1);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// 创建redisDb（server.db）并初始化&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;for (j = 0; j &amp;lt; server.dbnum; j++) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].dict = dictCreate(&amp;amp;dbDictType,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].expires = dictCreate(&amp;amp;dbExpiresDictType,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].expires_cursor = 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].blocking_keys = dictCreate(&amp;amp;keylistDictType,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].ready_keys = dictCreate(&amp;amp;objectKeyPointerValueDictType,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].watched_keys = dictCreate(&amp;amp;keylistDictType,NULL);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].id = j;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].avg_ttl = 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; server.db[j].defrag_later = listCreate();&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; listSetFreeMethod(server.db[j].defrag_later,(void (*)(void*))sdsfree);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;// LRU 自动驱逐策略&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;evictionPoolAlloc();&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 为后台任务创建定时事件&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;if (aeCreateTimeEvent(server.el, 1, serverCron, NULL, NULL) == AE_ERR) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; serverPanic(&quot;Can&#39;t create event loop timers.&quot;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; exit(1);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 3 创建事件处理器用于接受新连接，这里展示TCP的实现，TLS暂时忽略&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if (&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;createSocketAcceptHandler&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(&amp;amp;server.&lt;b&gt;ipfd&lt;/b&gt;, &lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;acceptTcpHandler&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;) != C_OK) {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; serverPanic(&quot;Unrecoverable error creating TCP socket accept handler.&quot;);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fillColor=#dae8fc;strokeColor=#6c8ebf;arcSize=2;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="760" y="120" width="440" height="600" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-26" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-12" target="GsVpoBwgjqSGVhL4LbLS-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-12" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;int &lt;b&gt;createSocketAcceptHandler&lt;/b&gt;(socketFds *&lt;b&gt;sfd&lt;/b&gt;, aeFileProc *&lt;b&gt;accept_handler&lt;/b&gt;) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; int j;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; for (j = 0; j &amp;lt; sfd-&amp;gt;count; j++) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 注册 ACCEPT 事件处理器&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;aeCreateFileEvent&lt;/b&gt;(server.el, sfd-&amp;gt;fd[j], AE_READABLE, &lt;b&gt;accept_handler&lt;/b&gt;,NULL) == AE_ERR) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (j = j-1; j &amp;gt;= 0; j--) &lt;b&gt;aeDeleteFileEvent&lt;/b&gt;(server.el, sfd-&amp;gt;fd[j], AE_READABLE);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return C_ERR;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return C_OK;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;" vertex="1" parent="1">
          <mxGeometry x="1240" y="920" width="439.5" height="160" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-20" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-15" target="GsVpoBwgjqSGVhL4LbLS-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-15" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;aeEventLoop *aeCreateEventLoop(int setsize) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; aeEventLoop *eventLoop;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; int i;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; monotonicInit();&amp;nbsp; &amp;nbsp; /* just in case the calling app didn&#39;t initialize */&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if ((eventLoop = zmalloc(sizeof(*eventLoop))) == NULL) goto err;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;events = zmalloc(sizeof(aeFileEvent)*setsize);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;fired = zmalloc(sizeof(aeFiredEvent)*setsize);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (eventLoop-&amp;gt;events == NULL || eventLoop-&amp;gt;fired == NULL) goto err;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;setsize = setsize;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;timeEventHead = NULL;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;timeEventNextId = 0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;stop = 0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;maxfd = -1;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;beforesleep = NULL;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;aftersleep = NULL;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;flags = 0;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;aeApiCreate&lt;/b&gt;(eventLoop) == -1) goto err;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; /* Events with mask == AE_NONE are not set. So let&#39;s initialize the&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* vector with it. */&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; for (i = 0; i &amp;lt; setsize; i++)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;events[i].mask = AE_NONE;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return eventLoop;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;err:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;" vertex="1" parent="1">
          <mxGeometry x="1240" y="120" width="439.5" height="360" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-19" value="&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;aeApiState *&lt;b&gt;state&lt;/b&gt; = zmalloc(sizeof(aeApiState));&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;state-&amp;gt;events = zmalloc(sizeof(struct epoll_event)*eventLoop-&amp;gt;setsize);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 创建 epoll 文件描述符&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;state-&amp;gt;epfd = &lt;b&gt;epoll_create&lt;/b&gt;(1024);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;anetCloexec(state-&amp;gt;epfd);&lt;/div&gt;&lt;div&gt;eventLoop-&amp;gt;&lt;b&gt;apidata&lt;/b&gt; = &lt;b&gt;state&lt;/b&gt;;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1720" y="240" width="439.5" height="120" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-24" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.646;exitDx=0;exitDy=0;endArrow=open;endFill=0;exitPerimeter=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-21" target="GsVpoBwgjqSGVhL4LbLS-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-35" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.002;exitY=0.326;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-21" target="GsVpoBwgjqSGVhL4LbLS-34">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-881" y="210" />
              <mxPoint x="-910" y="210" />
              <mxPoint x="-910" y="380" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-21" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;aeEventLoop&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int maxfd;&amp;nbsp; &amp;nbsp;/* highest file descriptor currently registered */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int setsize; /* max number of file descriptors tracked */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long long timeEventNextId;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 注册的&lt;b&gt;要监听的epoll事件及对应的处理回调&lt;/b&gt;的&lt;b&gt;数组&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;aeFileEvent&lt;/b&gt; *&lt;b&gt;events&lt;/b&gt;; /* Registered events */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 已经触发的事件信息（包括连接客户端的fd 和 事件类型mask）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeFiredEvent *fired; /* Fired events */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeTimeEvent *timeEventHead;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int stop;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;// 内部包含 epoll 的文件描述符和监听到就绪的epoll_event数组, 是 aeApiState 类型，就是通过 epoll_wait() 监听到的就绪事件数据&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void *&lt;b&gt;apidata&lt;/b&gt;;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeBeforeSleepProc *beforesleep;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeBeforeSleepProc *aftersleep;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int flags;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-880" y="120" width="400" height="280" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-23" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;b style=&quot;background-color: initial;&quot;&gt;aeApiState&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// epoll 文件描述符&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int epfd;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 就绪的 epoll_event 事件&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;struct epoll_event *events;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="120" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-33" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-25" target="GsVpoBwgjqSGVhL4LbLS-32">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-25" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;int aeCreateFileEvent(aeEventLoop *eventLoop, int fd, int mask,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; aeFileProc *&lt;b&gt;proc&lt;/b&gt;, void *clientData)&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; aeFileEvent *fe = &amp;amp;eventLoop-&amp;gt;events[fd];&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 将 SocketFd 加入到 Epoll 的监听列表&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;aeApiAddEvent&lt;/b&gt;(&lt;b&gt;eventLoop&lt;/b&gt;, &lt;b&gt;fd&lt;/b&gt;, mask) == -1)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return AE_ERR;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; fe-&amp;gt;mask |= mask;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; if (mask &amp;amp; AE_READABLE) fe-&amp;gt;rfileProc = proc;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; if (mask &amp;amp; AE_WRITABLE) fe-&amp;gt;wfileProc = proc;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; fe-&amp;gt;clientData = clientData;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (fd &amp;gt; eventLoop-&amp;gt;maxfd)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;maxfd = fd;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return AE_OK;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1720" y="900" width="439.5" height="200" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-31" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-27" target="GsVpoBwgjqSGVhL4LbLS-30">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-27" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;int listenToPort(int port, socketFds *sfd) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; int j;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; char **bindaddr = server.bindaddr;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; int bindaddr_count = server.bindaddr_count;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; char *default_bindaddr[2] = {&quot;*&quot;, &quot;-::*&quot;};&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; /* Force binding of 0.0.0.0 if no bind address is specified. */&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; if (server.bindaddr_count == 0) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bindaddr_count = 2;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; bindaddr = default_bindaddr;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; for (j = 0; j &amp;lt; bindaddr_count; j++)&lt;/b&gt; {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; char* addr = bindaddr[j];&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int optional = *addr == &#39;-&#39;;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (optional) addr++;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (strchr(addr,&#39;:&#39;)) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 绑定 IPv6 地址&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sfd-&amp;gt;fd[sfd-&amp;gt;count] = anetTcp6Server(server.neterr,port,addr,server.tcp_backlog);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 绑定 IPv4 地址&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sfd-&amp;gt;fd[sfd-&amp;gt;count] = &lt;b&gt;anetTcpServer&lt;/b&gt;(server.neterr,port,addr,server.tcp_backlog);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (sfd-&amp;gt;fd[sfd-&amp;gt;count] == ANET_ERR) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 创建Socket文件描述符失败处理 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; anetNonBlock(NULL,sfd-&amp;gt;fd[sfd-&amp;gt;count]);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; anetCloexec(sfd-&amp;gt;fd[sfd-&amp;gt;count]);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sfd-&amp;gt;count++;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return C_OK;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;" vertex="1" parent="1">
          <mxGeometry x="1240" y="520" width="439.5" height="380" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-30" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;if ((rv = &lt;b&gt;getaddrinfo&lt;/b&gt;(bindaddr,_port,&amp;amp;hints,&amp;amp;servinfo)) != 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; anetSetError(err, &quot;%s&quot;, gai_strerror(rv));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return ANET_ERR;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;for (p = servinfo; p != NULL; p = p-&amp;gt;ai_next) {&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 创建 SocketFd&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if ((s = &lt;b&gt;socket&lt;/b&gt;(p-&amp;gt;ai_family,p-&amp;gt;ai_socktype,p-&amp;gt;ai_protocol)) == -1)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; continue;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (af == AF_INET6 &amp;amp;&amp;amp; anetV6Only(err,s) == ANET_ERR) goto error;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (anetSetReuseAddr(err,s) == ANET_ERR) goto error;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 内部监听连接 listen(s, backlog)&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;anetListen&lt;/b&gt;(err,s,p-&amp;gt;ai_addr,p-&amp;gt;ai_addrlen,backlog) == ANET_ERR) s = ANET_ERR;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; goto end;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1720" y="620" width="439.5" height="180" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-32" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; aeApiState *state = eventLoop-&amp;gt;apidata;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // epoll_event 事件数组，用于保存要监听的事件&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct epoll_event ee = {0}; /* avoid valgrind warning */&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; int op = eventLoop-&amp;gt;events[fd].mask == AE_NONE ?&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EPOLL_CTL_ADD : EPOLL_CTL_MOD;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ee.events = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; mask |= eventLoop-&amp;gt;events[fd].mask; /* Merge old events */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (mask &amp;amp; &lt;b&gt;AE_READABLE&lt;/b&gt;) ee.events |= &lt;b&gt;EPOLLIN&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (mask &amp;amp; &lt;b&gt;AE_WRITABLE&lt;/b&gt;) ee.events |= &lt;b&gt;EPOLLOUT&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ee.data.fd = fd;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 将前面创建的套接字加入 epoll 监听列表&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;epoll_ctl&lt;/b&gt;(state-&amp;gt;epfd,op,fd,&amp;amp;ee) == -1) return -1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return 0;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="2200" y="900" width="439.5" height="200" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-34" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;b style=&quot;background-color: initial;&quot;&gt;aeFileEvent&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp;&lt;b&gt;记录监听的事件类型已经对应的事件处理器方法, 每种通信事件都有一个 aeFileEvent,&amp;nbsp; 比如 ACCEPT 事件、READ 事件、WRITE 事件&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int mask; /* one of AE_(READABLE|WRITABLE|BARRIER) */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 可读事件处理&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeFileProc *&lt;b&gt;rfileProc&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 可写事件处理&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;aeFileProc *&lt;b&gt;wfileProc&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void *clientData;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="280" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-38" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-36" target="GsVpoBwgjqSGVhL4LbLS-37">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2170" y="1290" />
              <mxPoint x="2170" y="1170" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-39" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-38">
          <mxGeometry x="-0.1017" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-43" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.999;exitY=0.895;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-36" target="GsVpoBwgjqSGVhL4LbLS-42">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2160" y="1392" as="sourcePoint" />
            <Array as="points">
              <mxPoint x="2180" y="1408" />
              <mxPoint x="2180" y="1280" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-65" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.999;exitY=0.895;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-36" target="GsVpoBwgjqSGVhL4LbLS-64">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-36" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// accept 事件处理器，当客户端连接时触发回调&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;void &lt;b&gt;acceptTcpHandler&lt;/b&gt;(aeEventLoop *el, int fd, void *privdata, int mask) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; int cport, cfd, max = MAX_ACCEPTS_PER_CALL;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; char cip[NET_IP_STR_LEN];&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; UNUSED(el);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; UNUSED(mask);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; UNUSED(privdata);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; while(max--) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; //1 接受客户端连接请求，创建与客户端连接的Socket文件&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cfd = &lt;b&gt;anetTcpAccept&lt;/b&gt;(server.neterr, fd, cip, sizeof(cip), &amp;amp;cport);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (cfd == ANET_ERR) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (errno != EWOULDBLOCK)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_WARNING,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Accepting client connection: %s&quot;, server.neterr);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; anetCloexec(cfd);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; serverLog(LL_VERBOSE,&quot;Accepted %s:%d&quot;, cip, cport);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; //2 &lt;/b&gt;连接建立后，封装socket文件创建对接客户端的client对象，并调用连接中配置的accept() 方法（不是 socket的 accept()）, 这里主要关心&lt;b&gt;将这个套接字也加入到&amp;nbsp; epoll 的监听列表&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;acceptCommonHandler&lt;/b&gt;(&lt;b&gt;connCreateAcceptedSocket&lt;/b&gt;(cfd),0,cip);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1720" y="1140" width="439.5" height="300" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-37" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;fd = &lt;b&gt;accept&lt;/b&gt;(s,sa,len);&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;fontSize=10;arcSize=11;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="2200" y="1140" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-45" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-64" target="GsVpoBwgjqSGVhL4LbLS-44">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2410" y="1410" />
              <mxPoint x="2410" y="1660" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-67" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-42" target="GsVpoBwgjqSGVhL4LbLS-66">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-42" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;connection *connCreateAcceptedSocket(int fd) {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; connection *conn = &lt;b style=&quot;font-size: 9px;&quot;&gt;connCreateSocket&lt;/b&gt;();&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;fd = fd;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;state = CONN_STATE_ACCEPTING;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; return conn;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=9;arcSize=11;" vertex="1" parent="1">
          <mxGeometry x="2199.5" y="1240" width="200.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-79" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-44" target="GsVpoBwgjqSGVhL4LbLS-78">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-44" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;return conn-&amp;gt;type-&amp;gt;&lt;b&gt;accept&lt;/b&gt;(conn, &lt;b&gt;accept_handler&lt;/b&gt;);&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=11;" vertex="1" parent="1">
          <mxGeometry x="2439" y="1630" width="440.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-50" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-46" target="GsVpoBwgjqSGVhL4LbLS-49">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-46" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;void &lt;b style=&quot;font-size: 10px;&quot;&gt;aeMain&lt;/b&gt;(aeEventLoop *eventLoop) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;stop = 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; while (!eventLoop-&amp;gt;stop) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b style=&quot;font-size: 10px;&quot;&gt;aeProcessEvents&lt;/b&gt;(eventLoop, AE_ALL_EVENTS|&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AE_CALL_BEFORE_SLEEP|&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AE_CALL_AFTER_SLEEP);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=4;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="760" y="1680" width="440" height="120" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-52" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-49" target="GsVpoBwgjqSGVhL4LbLS-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-49" value="&lt;div style=&quot;font-size: 10px;&quot;&gt;int aeProcessEvents(aeEventLoop *eventLoop, int flags)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; int processed = 0, numevents;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; /* Nothing to do? return ASAP */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (!(flags &amp;amp; AE_TIME_EVENTS) &amp;amp;&amp;amp; !(flags &amp;amp; AE_FILE_EVENTS)) return 0;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; /* Note that we want to call select() even if there are no&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* file events to process as long as we want to process time&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* events, in order to sleep until the next time event is ready&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* to fire. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (eventLoop-&amp;gt;maxfd != -1 ||&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ((flags &amp;amp; AE_TIME_EVENTS) &amp;amp;&amp;amp; !(flags &amp;amp; AE_DONT_WAIT))) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... 计时器相关 ...&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (eventLoop-&amp;gt;beforesleep != NULL &amp;amp;&amp;amp; flags &amp;amp; AE_CALL_BEFORE_SLEEP)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;&lt;b&gt;beforesleep&lt;/b&gt;(eventLoop);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1 调用多路复用API, 读取就绪的事件列表&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; numevents = &lt;b&gt;aeApiPoll&lt;/b&gt;(eventLoop, tvp);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* After sleep callback. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (eventLoop-&amp;gt;aftersleep != NULL &amp;amp;&amp;amp; flags &amp;amp; AE_CALL_AFTER_SLEEP)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;&lt;b&gt;aftersleep&lt;/b&gt;(eventLoop);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;    &amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 遍历就绪的事件，针对处理&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (j = 0; j &amp;lt; numevents; j++)&lt;/b&gt; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; aeFileEvent *fe = &amp;amp;eventLoop-&amp;gt;events[eventLoop-&amp;gt;fired[j].fd];&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int mask = eventLoop-&amp;gt;fired[j].mask;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int fd = eventLoop-&amp;gt;fired[j].fd;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int fired = 0; /* Number of events fired for current fd. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int invert = fe-&amp;gt;mask &amp;amp; AE_BARRIER;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* Note the &quot;fe-&amp;gt;mask &amp;amp; mask &amp;amp; ...&quot; code: maybe an already&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* processed event removed an element that fired and we still&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* didn&#39;t processed, so we check if the event is still valid.&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Fire the readable event if the call sequence is not&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* inverted. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;!invert &amp;amp;&amp;amp; fe-&amp;gt;mask &amp;amp; mask &amp;amp; AE_READABLE&lt;/b&gt;) {&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#007fff&quot;&gt;// 就是 EPOLLIN&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fe-&amp;gt;&lt;b&gt;rfileProc&lt;/b&gt;(eventLoop,fd,fe-&amp;gt;clientData,mask);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fired++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fe = &amp;amp;eventLoop-&amp;gt;events[fd]; /* Refresh in case of resize. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* Fire the writable event. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;fe-&amp;gt;mask &amp;amp; mask &amp;amp; AE_WRITABLE&lt;/b&gt;) { &lt;font color=&quot;#007fff&quot;&gt;// 就是 EPOLLOUT&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (!fired || fe-&amp;gt;wfileProc != fe-&amp;gt;rfileProc) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fe-&amp;gt;&lt;b&gt;wfileProc&lt;/b&gt;(eventLoop,fd,fe-&amp;gt;clientData,mask);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fired++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* If we have to invert the call, fire the readable event now&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* after the writable one. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;invert&lt;/b&gt;) {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fe = &amp;amp;eventLoop-&amp;gt;events[fd]; /* Refresh in case of resize. */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if ((fe-&amp;gt;mask &amp;amp; mask &amp;amp; &lt;b&gt;AE_READABLE&lt;/b&gt;) &amp;amp;&amp;amp;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (!fired || fe-&amp;gt;wfileProc != fe-&amp;gt;rfileProc))&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fe-&amp;gt;&lt;b&gt;rfileProc&lt;/b&gt;(eventLoop,fd,fe-&amp;gt;clientData,mask);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fired++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; processed++;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; /* Check time events */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; if (flags &amp;amp; AE_TIME_EVENTS)&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; processed += processTimeEvents(eventLoop);&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; return processed; /* return the number of processed file/time events */&lt;/div&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;}&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;arcSize=2;fontSize=10;" vertex="1" parent="1">
          <mxGeometry x="1240" y="1680" width="440" height="880" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-51" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;retval = &lt;b&gt;epoll_wait&lt;/b&gt;(state-&amp;gt;epfd,state-&amp;gt;events,eventLoop-&amp;gt;setsize,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tvp ? (tvp-&amp;gt;tv_sec*1000 + (tvp-&amp;gt;tv_usec + 999)/1000) : -1);&lt;/div&gt;&lt;div&gt;&lt;div&gt;if (retval &amp;gt; 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int j;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; numevents = retval;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (j = 0; j &amp;lt; numevents; j++) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int mask = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; struct epoll_event *e = state-&amp;gt;events+j;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// epoll 事件类型转换为Redis定义的事件类型&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e-&amp;gt;events &amp;amp; &lt;b&gt;EPOLLIN&lt;/b&gt;) mask |= &lt;b&gt;AE_READABLE&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e-&amp;gt;events &amp;amp; &lt;b&gt;EPOLLOUT&lt;/b&gt;) mask |= &lt;b&gt;AE_WRITABLE&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e-&amp;gt;events &amp;amp; &lt;b&gt;EPOLLERR&lt;/b&gt;) mask |= &lt;b&gt;AE_WRITABLE&lt;/b&gt;|&lt;b&gt;AE_READABLE&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (e-&amp;gt;events &amp;amp; &lt;b&gt;EPOLLHUP&lt;/b&gt;) mask |= &lt;b&gt;AE_WRITABLE&lt;/b&gt;|&lt;b&gt;AE_READABLE&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;fired[j].fd = e-&amp;gt;data.fd;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; eventLoop-&amp;gt;fired[j].mask = mask;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;return numevents;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=5;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="1720" y="1960" width="439.5" height="240" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-53" value="连接事件 ACCEPT" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="280" y="1840" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-55" value="客户端读事件 READ" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="280" y="1920" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-57" value="客户端写事件 WRITE" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="280" y="2000" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-85" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-61" target="GsVpoBwgjqSGVhL4LbLS-84">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2180" y="1600" />
              <mxPoint x="2180" y="1860" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-86" value="..." style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-85">
          <mxGeometry x="0.51" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-61" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 客户端READ、WRITE事件处理器入口，内部根据事件类型选择调用 conn.read_handler 或 conn.write_handler&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;static void &lt;b&gt;connSocketEventHandler&lt;/b&gt;(struct aeEventLoop *el, int fd, void *clientData, int mask) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; int invert = conn-&amp;gt;flags &amp;amp; CONN_FLAG_WRITE_BARRIER;&lt;/div&gt;&lt;div&gt;&amp;nbsp; int call_write = (mask &amp;amp; AE_WRITABLE) &amp;amp;&amp;amp; conn-&amp;gt;write_handler;&lt;/div&gt;&lt;div&gt;&amp;nbsp; int call_read = (mask &amp;amp; AE_READABLE) &amp;amp;&amp;amp; conn-&amp;gt;read_handler;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; if (!invert &amp;amp;&amp;amp; call_read) {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (!&lt;b&gt;callHandler&lt;/b&gt;(conn, conn-&amp;gt;&lt;b&gt;read_handler&lt;/b&gt;)) return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; if (call_write) {&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (!&lt;b&gt;callHandler&lt;/b&gt;(conn, conn-&amp;gt;&lt;b&gt;write_handler&lt;/b&gt;)) return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; /* If we have to invert the call, fire the readable event now&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; * after the writable one. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; if (invert &amp;amp;&amp;amp; call_read) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (!&lt;b&gt;callHandler&lt;/b&gt;(conn, conn-&amp;gt;read_handler)) return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1720" y="1480" width="439.5" height="240" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-62" value="&lt;b&gt;networking.c&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1889.75" y="1110" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-63" value="&lt;b&gt;connection.c&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1889.75" y="1450" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-72" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-64" target="GsVpoBwgjqSGVhL4LbLS-71">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2410" y="1410" />
              <mxPoint x="2410" y="1420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-64" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 连接对象状态检查&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 最大连接数检查&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;if ((c = &lt;b&gt;createClient&lt;/b&gt;(conn)) == NULL) {...}&lt;br&gt;if (&lt;b&gt;connAccept&lt;/b&gt;(conn,&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b&gt;clientAcceptHandler&lt;/b&gt;) == C_ERR) {...}&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2200" y="1360" width="200" height="100" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-69" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-66" target="GsVpoBwgjqSGVhL4LbLS-68">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-66" value="&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;connection *connCreateSocket() {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; connection *conn = zcalloc(sizeof(connection));&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;type = &amp;amp;&lt;span style=&quot;font-size: 9px;&quot;&gt;CT_Socket&lt;/span&gt;;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;fd = -1;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; return conn;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=9;arcSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2440" y="1240" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-75" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-68" target="GsVpoBwgjqSGVhL4LbLS-73">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-68" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;ConnectionType &lt;b&gt;CT_Socket&lt;/b&gt; = {&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;ae_handler&lt;/b&gt; = &lt;b&gt;connSocketEventHandler&lt;/b&gt;,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .close = connSocketClose,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .write = connSocketWrite,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .read = connSocketRead,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;accept&lt;/b&gt; = &lt;b&gt;connSocketAccept&lt;/b&gt;,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .connect = connSocketConnect,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;// 用于注册可写事件处理函数的函数&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b style=&quot;font-size: 9px;&quot;&gt;set_write_handler&lt;/b&gt; = &lt;b style=&quot;font-size: 9px;&quot;&gt;connSocketSetWriteHandler&lt;/b&gt;,&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;// 用于注册可读事件处理函数的函数&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .&lt;b&gt;set_read_handler&lt;/b&gt; = &lt;b&gt;connSocketSetReadHandler&lt;/b&gt;,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .get_last_error = connSocketGetLastError,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .blocking_connect = connSocketBlockingConnect,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .sync_write = connSocketSyncWrite,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .sync_read = connSocketSyncRead,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .sync_readline = connSocketSyncReadLine,&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;&amp;nbsp; &amp;nbsp; .get_type = connSocketGetType&lt;/div&gt;&lt;div style=&quot;font-size: 9px;&quot;&gt;};&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=9;arcSize=2;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="2639.5" y="1140" width="240" height="200" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-70" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;connection&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;对接客户端的连接对象（封装与客户端连接的socket文件描述符）&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;ConnectionType *type;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;ConnectionState state;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;short int flags;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;short int refs;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int last_errno;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;void *private_data;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;ConnectionCallbackFunc conn_handler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;ConnectionCallbackFunc write_handler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;ConnectionCallbackFunc read_handler;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int fd;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-440" y="600" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-74" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-71" target="GsVpoBwgjqSGVhL4LbLS-73">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-91" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=-0.002;exitY=0.627;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;exitPerimeter=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-71" target="GsVpoBwgjqSGVhL4LbLS-84">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-71" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;client *createClient(connection *conn) {&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; client *c = zmalloc(sizeof(client));&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;if (conn) {&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;connNonBlock(conn);&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 非阻塞&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; connEnableTcpNoDelay(conn);&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// NoDelay&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (server.tcpkeepalive)&amp;nbsp; &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;//KeepAlive&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; connKeepAlive(conn,server.tcpkeepalive);&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;//1 内部调用&amp;nbsp;conn-&amp;gt;type-&amp;gt;set_read_handler(conn, func) 函数，即&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;connSocketSetReadHandler&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;connSetReadHandler&lt;/b&gt;(conn, &lt;b&gt;readQueryFromClient&lt;/b&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; connSetPrivateData(conn, c);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ... 初始化 conn 其他字段 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=4;" vertex="1" parent="1">
          <mxGeometry x="2440" y="1360" width="440.5" height="200" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-76" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-73" target="GsVpoBwgjqSGVhL4LbLS-25">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3381" y="1460" />
              <mxPoint x="3381" y="1110" />
              <mxPoint x="1700" y="1110" />
              <mxPoint x="1700" y="1050" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-73" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;static int &lt;b&gt;connSocketSetReadHandler&lt;/b&gt;(connection *conn, ConnectionCallbackFunc func) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;&lt;b&gt;read_handler&lt;/b&gt; = &lt;b&gt;func&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!conn-&amp;gt;read_handler)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; aeDeleteFileEvent(server.el,conn-&amp;gt;fd,AE_READABLE);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;// 即将连接到客户端的socket加入到 epoll 的监听列表，监听读写事件，并使用&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;conn-&amp;gt;type-&amp;gt;ae_handler 处理， 即 connSocketEventHandler 函数&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (&lt;b&gt;aeCreateFileEvent&lt;/b&gt;(server.el,conn-&amp;gt;fd,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;AE_READABLE&lt;/b&gt;,conn-&amp;gt;type-&amp;gt;&lt;b&gt;ae_handler&lt;/b&gt;,conn) == AE_ERR) return C_ERR;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return C_OK;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=4;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="2920" y="1380" width="440.5" height="160" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-83" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-78" target="GsVpoBwgjqSGVhL4LbLS-82">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-78" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;static int connSocketAccept(connection *conn, ConnectionCallbackFunc accept_handler) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int ret = C_OK;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (conn-&amp;gt;state != CONN_STATE_ACCEPTING) return C_ERR;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; conn-&amp;gt;state = &lt;b&gt;CONN_STATE_CONNECTED&lt;/b&gt;;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; connIncrRefs(conn);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!&lt;b&gt;callHandler&lt;/b&gt;(conn, &lt;b&gt;accept_handler&lt;/b&gt;)) ret = C_ERR;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; connDecrRefs(conn);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return ret;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=4;" vertex="1" parent="1">
          <mxGeometry x="2920" y="1580" width="440.5" height="160" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-80" value="connection.h" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="2614.25" y="1600" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-81" value="connection.c" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="3095.25" y="1550" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-82" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;void clientAcceptHandler(connection *conn) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;client *c = connGetPrivateData(conn);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // TODO&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b&gt;moduleFireServerEvent&lt;/b&gt;(REDISMODULE_EVENT_CLIENT_CHANGE,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; REDISMODULE_SUBEVENT_CLIENT_CHANGE_CONNECTED,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; c);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=4;" vertex="1" parent="1">
          <mxGeometry x="3400" y="1610" width="440.5" height="100" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-88" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-84" target="GsVpoBwgjqSGVhL4LbLS-87">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-84" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;void &lt;b&gt;readQueryFromClient&lt;/b&gt;(connection *conn) {&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;qblen = sdslen(c-&amp;gt;querybuf);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (c-&amp;gt;querybuf_peak &amp;lt; qblen) c-&amp;gt;querybuf_peak = qblen;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;querybuf = sdsMakeRoomFor(c-&amp;gt;querybuf, readlen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; nread = &lt;b&gt;connRead&lt;/b&gt;(c-&amp;gt;conn, c-&amp;gt;querybuf+qblen, readlen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b&gt;processInputBuffer&lt;/b&gt;(c);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=4;" vertex="1" parent="1">
          <mxGeometry x="2200" y="1800" width="440.5" height="120" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-90" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-87" target="GsVpoBwgjqSGVhL4LbLS-89">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-87" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;processCommandAndResetClient(c)&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;fontSize=10;arcSize=10;" vertex="1" parent="1">
          <mxGeometry x="2679.5" y="1830" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-94" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-89" target="GsVpoBwgjqSGVhL4LbLS-93">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3140" y="1860" />
              <mxPoint x="3140" y="1940" />
              <mxPoint x="2180" y="1940" />
              <mxPoint x="2180" y="2160" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-89" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;processCommand&lt;/b&gt;(c)&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;命令处理入口，函数有点长，最后一步是执行命令&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;fontSize=10;arcSize=10;fillColor=#e3c800;fontColor=#000000;strokeColor=#B09500;" vertex="1" parent="1">
          <mxGeometry x="2920" y="1830" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-92" value="&lt;b&gt;server.c&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="2985" y="1800" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-96" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-93" target="GsVpoBwgjqSGVhL4LbLS-95">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-97" value="3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-96">
          <mxGeometry x="0.2099" y="-4" relative="1" as="geometry">
            <mxPoint x="-3" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-102" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-93" target="GsVpoBwgjqSGVhL4LbLS-101">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2650" y="2060" />
              <mxPoint x="2650" y="2000" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-103" value="1" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="GsVpoBwgjqSGVhL4LbLS-102">
          <mxGeometry x="0.6879" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-93" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;moduleCallCommandFilters(c);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;... quit 命令处理 ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 1 命令对象查找，根据命令名从 server.commands 中查找对应的命令对象， 每个Redis命令都有一个 redisCommand 对象&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;c-&amp;gt;cmd = c-&amp;gt;lastcmd = &lt;b&gt;lookupCommand&lt;/b&gt;(c-&amp;gt;argv[0]-&amp;gt;ptr);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 解析命令类型 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 身份认证 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... ACL权限校验 ...&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 如果是集群模式，获取一个节点 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 内存OOM检查 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 如果磁盘持久化异常，拒绝执行命令 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 主从&amp;nbsp;min-slaves-to-write 配置检查 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;... 发布订阅命令检查 ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;...&amp;nbsp;&lt;br&gt;... Lua脚本命令检查 ...&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 最后一步执行命令&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;if (c-&amp;gt;flags &amp;amp; CLIENT_MULTI &amp;amp;&amp;amp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;cmd-&amp;gt;proc != execCommand &amp;amp;&amp;amp; c-&amp;gt;cmd-&amp;gt;proc != discardCommand &amp;amp;&amp;amp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;cmd-&amp;gt;proc != multiCommand &amp;amp;&amp;amp; c-&amp;gt;cmd-&amp;gt;proc != watchCommand &amp;amp;&amp;amp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;cmd-&amp;gt;proc != resetCommand)&lt;/div&gt;&lt;div&gt;{ &lt;font color=&quot;#007fff&quot;&gt;//2&lt;b&gt;&amp;nbsp;事务命令（Redis中的事务强调多个命令的原子性执行）&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; queueMultiCommand(c);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;addReply&lt;/b&gt;(c,shared.queued);&lt;/div&gt;&lt;div&gt;} else { &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;//3 单个命令&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;call&lt;/b&gt;(c,CMD_CALL_FULL);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; c-&amp;gt;woff = server.master_repl_offset;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (listLength(server.ready_keys))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handleClientsBlockedOnKeys();&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="2199.5" y="1960" width="440.5" height="400" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-95" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;struct redisCommand *real_cmd = c-&amp;gt;cmd;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;// 这个是真正的执行命令&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;c-&amp;gt;cmd-&amp;gt;&lt;b&gt;proc&lt;/b&gt;(c);&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=2;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2680" y="2120" width="200.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-100" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-98" target="GsVpoBwgjqSGVhL4LbLS-99">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-104" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-98" target="GsVpoBwgjqSGVhL4LbLS-70">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-98" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;client&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;对接客户端的client&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;connection *conn;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;redisDb *db;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;sds querybuf;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;...&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;// 从客户端请求解析的命令对象&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;struct redisCommand *&lt;b&gt;cmd&lt;/b&gt;, *lastcmd;&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="-440" y="880" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-99" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;struct&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;redisCommand&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;Redis 命令对象，每个Redis命令都有一个此对象实例&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;char *name;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;redisCommandProc *&lt;b&gt;proc&lt;/b&gt;;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int arity;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;char *sflags;&amp;nbsp; &amp;nbsp;/* Flags as string representation, one char per flag. */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;uint64_t flags; /* The actual flags, obtained from the &#39;sflags&#39; field. */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;redisGetKeysProc *getkeys_proc;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int firstkey; /* The first argument that&#39;s a key (0 = no keys) */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int lastkey;&amp;nbsp; /* The last argument that&#39;s a key */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int keystep;&amp;nbsp; /* The step between first and last key */&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;long long microseconds, calls, rejected_calls, failed_calls;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;int id;&amp;nbsp;&lt;/p&gt;&lt;hr style=&quot;font-size: 11px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=11;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="-880" y="880" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-101" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;struct redisCommand *&lt;b&gt;lookupCommand&lt;/b&gt;(sds name) {&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; // 从 server.commands 中查找对应的命令对象，redisServer.initServerConfig() 阶段将命令从&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;redisCommandTable[]&lt;/b&gt;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;注册到 server.&lt;b&gt;commands&lt;/b&gt; 中的&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;dictFetchValue&lt;/b&gt;(server.&lt;b&gt;commands&lt;/b&gt;, name);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;fontSize=10;arcSize=11;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="2680" y="1960" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-105" value="Redis-6.2.6命令注册表中注册了224个命令（参考server.c redisCommandTable[]）：&lt;br&gt;这里列举几个常用的命令的名称和执行方法（proc字段）&lt;br&gt;struct redisCommand redisCommandTable[] = {&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;{&quot;&lt;b&gt;get&lt;/b&gt;&quot;,&lt;b&gt;getCommand&lt;/b&gt;,2,&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;read-only fast @string&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;0,NULL,1,1,1,0,0,0},&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;{&quot;&lt;b&gt;set&lt;/b&gt;&quot;,&lt;b&gt;setCommand&lt;/b&gt;,-3,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;write use-memory @string&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;0,NULL,1,1,1,0,0,0},&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; {&quot;&lt;b&gt;incr&lt;/b&gt;&quot;,&lt;b&gt;incrCommand&lt;/b&gt;,2,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;write use-memory fast @string&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;0,NULL,1,1,1,0,0,0},&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;}" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1320" y="880" width="470" height="210" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-108" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-106" target="GsVpoBwgjqSGVhL4LbLS-107">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-110" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-106" target="GsVpoBwgjqSGVhL4LbLS-109">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-112" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-106" target="GsVpoBwgjqSGVhL4LbLS-111">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-116" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-106" target="GsVpoBwgjqSGVhL4LbLS-115">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-106" value="常用命令的执行方法" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="40" y="2260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-118" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-107" target="GsVpoBwgjqSGVhL4LbLS-117">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-107" value="&lt;b&gt;getCommand&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;get 命令的执行方法&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="280" y="2260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-121" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-109" target="GsVpoBwgjqSGVhL4LbLS-120">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-109" value="&lt;b&gt;setCommand&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;set 命令的执行方法&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="280" y="2360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-124" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GsVpoBwgjqSGVhL4LbLS-111" target="GsVpoBwgjqSGVhL4LbLS-123">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-111" value="&lt;b&gt;incrCommand&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="280" y="2460" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-115" value="&lt;b&gt;... 其他200个命令的proc函数 ...&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="280" y="2560" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-117" value="&lt;b&gt;getGenericCommand(c);&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="520" y="2260" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-119" value="t_string.c" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="585" y="2230" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-120" value="setGenericCommand(c,flags,c-&amp;gt;argv[1],c-&amp;gt;argv[2],expire,unit,NULL,NULL);" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="520" y="2360" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-122" value="t_string.c" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="585" y="2330" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-123" value="&lt;b&gt;incrDecrCommand(c,1);&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="520" y="2460" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GsVpoBwgjqSGVhL4LbLS-125" value="t_string.c" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="585" y="2430" width="70" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

<mxfile host="Electron" modified="2025-07-13T09:28:19.596Z" agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36" etag="CCl_zHKYkSKQRp7UXruV" version="21.6.5" type="device">
  <diagram name="第 1 页" id="tW_zB-ySnpfeUQwZRUiv">
    <mxGraphModel dx="5194" dy="1034" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-8" value="&lt;font style=&quot;font-size: 11px;&quot; color=&quot;#007fff&quot;&gt;&lt;b&gt;Engineer2思考阶段：&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/b&gt;&amp;nbsp; &amp;nbsp; 整体过程和上面类似，系统提示词信息包括角色基本信息、&lt;/font&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;行动计划中命令的数据结构描述、可用命令、计划命令的案例、Engineer2行为指导&lt;/font&gt;&lt;font style=&quot;font-size: 11px;&quot; color=&quot;#007fff&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; 可用的工具（用于生成计划命令，也体现了软件工程师角色的能力）：&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;tools: list[str] = [&lt;/font&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Plan&quot;,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;# &lt;b&gt;包含一系列为了完成目标的任务，并不会由 MetaGPT 直接执行，而是用于指导 LLM 下一阶段生成新的计划命令,&lt;/b&gt; &lt;b&gt;多个任务可能会在多个循环轮次中执行&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;# 计划命令的执行结果每次都会作为提示词附加到 LLM 请求中，用于推动计划的流程&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;# Plan.append_task 命令会生成迭代计划&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Editor&quot;,&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;# 用于文件读写编辑工具，开发程序需要读写文件&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;RoleZero&quot;,&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Terminal:run_command&quot;,&amp;nbsp; # 用于执行终端命令，比如程序开发完毕后执行测试等&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Browser:goto,scroll&quot;,&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;/span&gt;&lt;/span&gt;# 用于浏览网页&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;git_create_pull&quot;,&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;     &lt;/span&gt;&lt;/span&gt;# 用于创建 Git 仓库 PR&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;SearchEnhancedQA&quot;,&amp;nbsp; &amp;nbsp; #&amp;nbsp;通过搜索引擎回答问题和搜索信息&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Engineer2&quot;,&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;CodeReview&quot;,&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;# 用于审查代码（通过 PR 地址或文件）&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ImageGetter&quot;,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 用于获取图片&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Deployer&quot;,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 用于应用的本地部署&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; ]&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; 注意这些工具中有些工具命令内部也需要调用 LLM 生成内容，比如 Engineer2.write_new_code 命令信息中只包含简短的描述，需要 LLM 结合上下文生成代码，然后写到本地源码文件。&lt;/div&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;Engineer2行动阶段：&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Terminal.run_command&#39;, &#39;args&#39;: {&#39;cmd&#39;: &#39;mkdir -p 2048_game_1752214338 &amp;amp;&amp;amp; cp -r /home/arvin/mywork/ai/github/MetaGPT/template/react_template/* 2048_game_1752214338/ &amp;amp;&amp;amp; cd 2048_game_1752214338 &amp;amp;&amp;amp; pwd &amp;amp;&amp;amp; tree&#39;}}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;]&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;# LLM 发现没有模板&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Terminal.run_command&#39;, &#39;args&#39;: {&#39;cmd&#39;: &#39;mkdir -p 2048_game_1752214338 &amp;amp;&amp;amp; cd 2048_game_1752214338 &amp;amp;&amp;amp; npm init vite@latest . -- --template react &amp;amp;&amp;amp; npm install &amp;amp;&amp;amp; npm install @mui/material @emotion/react @emotion/styled @mui/icons-material tailwindcss postcss autoprefixer &amp;amp;&amp;amp; npx tailwindcss init -p&#39;}}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;]&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;# LLM 查看项目当前的情况&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Editor.read&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/src/App.jsx&#39;}},&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Editor.read&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/index.html&#39;}}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;]&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;b&gt;# 制定的开发计划&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/b&gt;&lt;/font&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.&lt;b&gt;append_task&lt;/b&gt;&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;1&#39;, &#39;dependent_task_ids&#39;: [], &#39;instruction&#39;: &#39;重写index.html文件，设置游戏标题为2048 Game&#39;, &#39;assignee&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.append_task&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;2&#39;, &#39;dependent_task_ids&#39;: [&#39;1&#39;], &#39;instruction&#39;: &#39;重写App.jsx文件，移除模板内容，添加游戏主框架&#39;, &#39;assignee&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.append_task&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;3&#39;, &#39;dependent_task_ids&#39;: [&#39;2&#39;], &#39;instruction&#39;: &#39;创建GameBoard.jsx组件，实现2048游戏逻辑和UI&#39;, &#39;assignee&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.append_task&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;4&#39;, &#39;dependent_task_ids&#39;: [&#39;3&#39;], &#39;instruction&#39;: &#39;创建ScoreBoard.jsx组件，实现计分系统&#39;, &#39;assignee&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.append_task&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;5&#39;, &#39;dependent_task_ids&#39;: [&#39;4&#39;], &#39;instruction&#39;: &#39;添加重新开始按钮功能&#39;, &#39;assignee&#39;: &#39;Alex&#39;}}&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255);&quot;&gt;]&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 127, 255); font-size: 11px;&quot;&gt;这个行动计划的生成指导思想（怎么想到使用什么框架组件、怎么拆分项目结构）：&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#cc0066&quot; style=&quot;font-size: 11px;&quot;&gt;？？？&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#cc0066&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#3333ff&quot; style=&quot;font-size: 11px;&quot;&gt;上面的 Plan.append_task 添加的任务指导 LLM 生成下一阶段的计划命令，比如上面 &lt;b&gt;task_id = 1：&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;[&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Editor.write&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/index.html&#39;, &#39;content&#39;: &#39;&amp;lt;!doctype html&amp;gt;\n&amp;lt;html lang=&quot;en&quot;&amp;gt;\n&amp;nbsp; &amp;lt;head&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;meta charset=&quot;UTF-8&quot; /&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;title&amp;gt;2048 Game&amp;lt;/title&amp;gt;\n&amp;nbsp; &amp;lt;/head&amp;gt;\n&amp;nbsp; &amp;lt;body&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;div id=&quot;root&quot;&amp;gt;&amp;lt;/div&amp;gt;\n&amp;nbsp; &amp;nbsp; &amp;lt;script type=&quot;module&quot; src=&quot;/src/main.jsx&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;nbsp; &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;]&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;task2&lt;/b&gt;：&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;div&gt;[&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Engineer2.write_new_code&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/src/App.jsx&#39;, &#39;file_description&#39;: &#39;2048游戏主框架，包含游戏容器和基本布局&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}}&lt;/div&gt;&lt;div&gt;]&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;task3：&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;[&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Engineer2.write_new_code&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/src/GameBoard.jsx&#39;, &#39;file_description&#39;: &#39;2048游戏主逻辑组件，包含游戏状态管理、键盘事件处理和渲染游戏板&#39;}},&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;{&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;]&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;b&gt;task4：&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 11px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;[&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Engineer2.write_new_code&#39;, &#39;args&#39;: {&#39;path&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/src/ScoreBoard.jsx&#39;, &#39;file_description&#39;: &#39;计分板组件，显示当前游戏分数&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;]&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;task5：&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div&gt;[&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}},&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Terminal.run_command&#39;, &#39;args&#39;: {&#39;cmd&#39;: &#39;npm run build&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Deployer.deploy_to_public&#39;, &#39;args&#39;: {&#39;dist_dir&#39;: &#39;/home/arvin/mywork/ai/github/MetaGPT/workspace/2048_game_1752214338/dist&#39;}},&amp;nbsp;&lt;br&gt;&amp;nbsp; # 修改自己的计划任务列表中所有任务的状态为完成，然后调用父类的 _end() 方法&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;&lt;b&gt;end&lt;/b&gt;&#39;}&lt;/div&gt;&lt;div&gt;]&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1600" width="2550" height="1130" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" parent="1" source="u3U1gaW8uxqCsaqYNjzV-6" target="EQPCou5D6iKQjcQxNRSE-30" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3900" y="1800" />
              <mxPoint x="3900" y="1220" />
              <mxPoint x="1220" y="1220" />
              <mxPoint x="1220" y="165" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-1" value="&lt;h1 style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;MetaGPT &lt;/span&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;(v0.8.2)&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/h1&gt;&lt;div&gt;这里研究输入一个Idea是怎么自动拆分任务、生成工作流程、最终输出结果的。&lt;/div&gt;&lt;div&gt;MetaGPT 本身只是对状态、流程进行管理，任务拆分和任务流程处理主要还是看系统提示词质量写的怎么样。&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="480" height="100" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-4" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-2" target="EQPCou5D6iKQjcQxNRSE-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-33" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-2" target="EQPCou5D6iKQjcQxNRSE-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-2" value="项目入口文件：&lt;b&gt;software_company.py&lt;/b&gt;&lt;br&gt;最外层是使用 Typer 封装的 CLI 应用&lt;b&gt;&amp;nbsp;&lt;br&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-3" value="&lt;b&gt;如果是初始化配置则复制配置文件&lt;/b&gt;&lt;br&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;复制的配置文件默认存放在 ~/.metagpt/config2.yaml，默认只包含LLM基本配置&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-8" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-35" target="EQPCou5D6iKQjcQxNRSE-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-5" value="&lt;b&gt;generate_repo(...)&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="280" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-10" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-7" target="EQPCou5D6iKQjcQxNRSE-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-7" value="2.根据命令传参更新配置" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="320" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-12" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-9" target="EQPCou5D6iKQjcQxNRSE-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="740" y="450" />
              <mxPoint x="740" y="250" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-9" value="3.使用配置根据 recover_path 选择是&lt;b&gt;新建软件团队&lt;/b&gt;，还是&lt;b&gt;恢复之前的软件团队&lt;/b&gt;，这里只看新建" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="420" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-14" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;fillColor=#dae8fc;strokeColor=#330033;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-11" target="EQPCou5D6iKQjcQxNRSE-13" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-11" value="1. &lt;b&gt;新建 Team 对象&lt;/b&gt;&lt;br&gt;通过 Context 传递配置信息" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-16" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;fillColor=#dae8fc;strokeColor=#330033;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-13" target="EQPCou5D6iKQjcQxNRSE-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-13" value="2. &lt;b&gt;团队组建&lt;/b&gt;（雇佣角色），包括新增 &lt;b&gt;项目Leader&lt;/b&gt;、&lt;b&gt;产品经理&lt;/b&gt;、&lt;b&gt;架构师&lt;/b&gt;、&lt;b&gt;程序员&lt;/b&gt;、&lt;b&gt;数据分析师&lt;/b&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;就是向 Team.env 中添加了一组角色，每个角色实体是一个 Agent&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="320" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-18" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;fillColor=#dae8fc;strokeColor=#330033;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-15" target="EQPCou5D6iKQjcQxNRSE-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-15" value="3. &lt;b&gt;团队投资&lt;/b&gt;&lt;br&gt;看上去是防止不计成本地执行，通过参数 investment 和 n_round 控制&lt;br&gt;&lt;font color=&quot;#cc0066&quot;&gt;TODO: ?&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="420" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-20" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-17" target="EQPCou5D6iKQjcQxNRSE-19" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="980" y="550" />
              <mxPoint x="980" y="150" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-17" value="4. &lt;b&gt;异步执行项目开发&lt;/b&gt;&lt;br&gt;asyncio.run(company.&lt;b&gt;run&lt;/b&gt;(&lt;br&gt;n_round=n_round, idea=idea))" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="760" y="520" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-23" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-19" target="EQPCou5D6iKQjcQxNRSE-22" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-31" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-19" target="EQPCou5D6iKQjcQxNRSE-30" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-19" value="self.&lt;b&gt;run_project&lt;/b&gt;(idea=idea, send_to=send_to)&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;执行项目开发&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1000" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-21" value="team.py" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1065" y="90" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-25" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-22" target="EQPCou5D6iKQjcQxNRSE-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Y08ov66wE5B-TrQS3yJb-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="EQPCou5D6iKQjcQxNRSE-22" target="Y08ov66wE5B-TrQS3yJb-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1200" y="720.0000000000002" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-22" value="&lt;div&gt;while &lt;b&gt;n_round&lt;/b&gt; &amp;gt; 0:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if self.env.is_idle:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(&quot;All roles are idle.&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; n_round -= 1&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 校验花费是否超出预算&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.&lt;b&gt;_check_balance&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 异步执行所有角色处理收到的消息&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; await self.env.&lt;b&gt;run&lt;/b&gt;()&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1000" y="740" width="200" height="120" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-27" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-24" target="EQPCou5D6iKQjcQxNRSE-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-24" value="self.env.&lt;b&gt;archive&lt;/b&gt;(auto_archive)" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1000" y="920" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-8" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-26" target="LW6XK796A9zfm586ZYFp-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-26" value="return self.env.history" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1020" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-44" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-28" target="EQPCou5D6iKQjcQxNRSE-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-28" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;Team(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;model_config&lt;/b&gt; = ConfigDict(arbitrary_types_allowed=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;env&lt;/b&gt;: Optional[Environment] = None&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;investment&lt;/b&gt;: float = Field(default=10.0)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 项目需求描述&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;idea&lt;/b&gt;: str = Field(default=&quot;&quot;)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 默认使用另一种环境类型（MGXEnv）&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;use_mgx&lt;/b&gt;: bool = Field(default=True)&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="120" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-29" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 10px;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;Message(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;id&lt;/b&gt;: str = Field(default=&quot;&quot;, validate_default=True)&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;content&lt;/b&gt;: str&amp;nbsp; # natural language for user or agent&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;instruct_content&lt;/b&gt;: Optional[BaseModel] = Field(default=None, validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 消息类型：system / user / assistant&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;role&lt;/b&gt;: str = &quot;user&quot;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;cause_by&lt;/b&gt;: str = Field(default=&quot;&quot;, validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;# 消息来源&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;sent_from&lt;/b&gt;: str = Field(default=&quot;&quot;, validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;send_to&lt;/b&gt;: set[str] = Field(default={MESSAGE_ROUTE_TO_ALL}, validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# metadata for `content` and `instruct_content`&lt;/font&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;b&gt;metadata&lt;/b&gt;: Dict[str, Any] = Field(default_factory=dict)&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-440" y="320" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-10" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-30" target="LW6XK796A9zfm586ZYFp-9" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1450" y="150" />
              <mxPoint x="1450" y="400" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-30" value="self.&lt;b&gt;env&lt;/b&gt;.&lt;b&gt;publish_message&lt;/b&gt;(&lt;br&gt;Message(content=idea))&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;将项目需求封装为消息（Message）分发给收件人，分发流程参考自 RFC113，&lt;br&gt;首次启动是不存在角色实体的&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1240" y="120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-34" value="&lt;font color=&quot;#007fff&quot; style=&quot;&quot;&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;命令行参数&lt;/b&gt;：&lt;br&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;idea: 项目需求描述&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;b style=&quot;font-size: 10px;&quot;&gt;命令行选项&lt;/b&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;：&lt;/span&gt;&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--investment&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FLOAT&amp;nbsp; &amp;nbsp; Dollar amount to invest in the AI company. [default: 3.0]&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--n-round&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;INTEGER&amp;nbsp; Number of rounds for the simulation. [default: 5]&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--code-review&amp;nbsp; &amp;nbsp; &amp;nbsp; --no-code-review&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Whether to use code review. [default: code-review]&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--run-tests&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --no-run-tests&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Whether to enable QA for adding &amp;amp; running tests. [default: no-run-tests]&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--implement&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--no-implement&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Enable or disable code implementation. [default: implement]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--project-name&amp;nbsp; &amp;nbsp; &amp;nbsp;TEXT&amp;nbsp; &amp;nbsp; &amp;nbsp;Unique project name, such as &#39;game_2048&#39;.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--inc&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--no-inc&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Incremental mode. Use it to coop with existing repo. [default: no-inc]&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--project-path&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TEXT&amp;nbsp; &amp;nbsp; &amp;nbsp;Specify the directory path of the old version project to fulfill the incremental requirements.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--reqa-file&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TEXT&amp;nbsp; &amp;nbsp; &amp;nbsp;Specify the source file name for rewriting the quality assurance code.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--max-auto-summarize-code&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; INTEGER&amp;nbsp; The maximum number of times the &#39;SummarizeCode&#39; action is automatically invoked,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;with -1 indicating unlimited. This parameter is used for debugging the&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10px; background-color: initial;&quot;&gt;workflow.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10px; background-color: initial;&quot;&gt;[default: 0]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--recover-path&amp;nbsp; &amp;nbsp; &amp;nbsp;TEXT&amp;nbsp; &amp;nbsp; &amp;nbsp;recover the project from existing serialized storage [default: None]&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--init-config&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --no-init-config&amp;nbsp; &amp;nbsp; &amp;nbsp; Initialize the configuration file for MetaGPT. [default: no-init-config]&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;--help&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Show this message and exit.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry y="320" width="630" height="270" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-43" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-32" target="EQPCou5D6iKQjcQxNRSE-42" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-45" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-32" target="EQPCou5D6iKQjcQxNRSE-38" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-2" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;rounded=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="EQPCou5D6iKQjcQxNRSE-32" target="LW6XK796A9zfm586ZYFp-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-1340" y="440" />
              <mxPoint x="-1340" y="1420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-32" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Environment(ExtEnv)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;环境，承载一批角色，角色可以向环境发布消息，可以被其他角色观察到&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 校验模型的配置&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;model_config = ConfigDict(arbitrary_types_allowed=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;desc: str = Field(default=&quot;&quot;)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 团队中的角色，角色名 -&amp;gt; 角色实例&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;roles&lt;/b&gt;: dict[str, SerializeAsAny[BaseRole]] = Field(default_factory=dict, validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 上面一组角色对应的对象实体（Agent），每种角色可能有多个对象实体&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;member_addrs&lt;/b&gt;: Dict[BaseRole, Set] = Field(default_factory=dict, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;# 历史消息&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;history&lt;/b&gt;: Memory = Field(default_factory=Memory)&amp;nbsp; # For debug&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;context&lt;/b&gt;: Context = Field(default_factory=Context, exclude=True)&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-880" y="320" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-36" value="" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-5" target="EQPCou5D6iKQjcQxNRSE-35" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="480" y="250" as="sourcePoint" />
            <mxPoint x="620" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-35" value="1.从配置文件加载默认配置 Config&lt;br&gt;config2.py&amp;nbsp;config = Config.default()&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;会从 METAGPT_ROOT 和 CONFIG_ROOT 中加载配置文件，合并配置信息，后者覆盖前者，配置缓存在 &lt;b&gt;_CONFIG_CACHE&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="520" y="220" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-37" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;注意事项：&lt;br&gt;1. 源码启动应该使用&amp;nbsp;&amp;nbsp;pip install -r requirements.txt 安装依赖，官方给的&amp;nbsp;pip install --upgrade metagpt 仅仅是面对使用者而非开发者，&lt;br&gt;相当于将 metagpt 作为一个依赖进行安装，源码启动会发现某些包不会被安装；&lt;br&gt;2.&amp;nbsp;MetaGPT官方提到3篇论文，可能包含了MetaGPT设计的指导思想（TODO）。&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="520" y="10" width="610" height="70" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-38" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Context(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;model_config&lt;/b&gt; = ConfigDict(arbitrary_types_allowed=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;kwargs: AttrDict = AttrDict()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;config&lt;/b&gt;: Config = Field(default_factory=Config.default)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;cost_manager&lt;/b&gt;: CostManager = CostManager()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;_llm&lt;/b&gt;: Optional[BaseLLM] = None&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1320" y="120" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-41" style="edgeStyle=orthogonalEdgeStyle;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=block;endFill=1;rounded=1;" parent="1" source="EQPCou5D6iKQjcQxNRSE-40" target="EQPCou5D6iKQjcQxNRSE-32" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-40" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;MGXEnv(Environment, SerializationMixin)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;MGX(MetaGPT X)环境，Pydantic 会将父类的字段添加到当前类中&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;#&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;direct_chat_roles: set[str] = set()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 是否是公开通话&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;is_public_chat&lt;/b&gt;: bool = True&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-880" y="600" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="EQPCou5D6iKQjcQxNRSE-42" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ExtEnv(BaseEnvironment, BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;model_config = ConfigDict(arbitrary_types_allowed=True)&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;action_space&lt;/b&gt;: spaces.Space[ActType] = Field(default_factory=spaces.Space, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;#&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;observation_space: spaces.Space[ObsType] = Field(default_factory=spaces.Space, exclude=True)&lt;br&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-880" y="120" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-10" target="yp5kwfwndyGii9iQgIIt-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;TeamLeader(RoleZero)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = TEAMLEADER_NAME&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;Team Leader&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;Manage a team to assist users&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 提示词&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;thought_guidance&lt;/b&gt;: str = TL_THOUGHT_GUIDANCE&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# TeamLeader only reacts once each time, but may encounter errors or need to ask human, thus allowing 2 more turns&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;max_react_loop&lt;/b&gt;: int = 3&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;tools&lt;/b&gt;: list[str] = [&quot;Plan&quot;, &quot;RoleZero&quot;, &quot;TeamLeader&quot;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;experience_retriever: Annotated[ExpRetriever, Field(exclude=True)] = &lt;br&gt;&amp;nbsp; &amp;nbsp; SimpleExpRetriever()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;use_summary: bool = False&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1320" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-3" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;ProductManager(RoleZero)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;Alice&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;Product Manager&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;Create a Product Requirement Document or market research/competitive &lt;br&gt;&amp;nbsp; &amp;nbsp; product research.&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;constraints: str = &quot;utilize the same language as the user requirements for seamless&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; communication&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;instruction: str = PRODUCT_MANAGER_INSTRUCTION&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;tools&lt;/b&gt;: list[str] = [&quot;RoleZero&quot;, Browser.__name__, Editor.__name__, &lt;br&gt;&amp;nbsp; &amp;nbsp; SearchEnhancedQA.__name__]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;todo_action: str = any_to_name(WritePRD)&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2200" y="1320" width="400" height="200" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-4" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Architect(RoleZero)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;Bob&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;Architect&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;design a concise, usable, complete software system. output the system design.&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;constraints: str = (&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;make sure the architecture is simple enough and use&amp;nbsp; appropriate open source &quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;libraries. Use same language as user requirement&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;terminal: Terminal = Field(default_factory=Terminal, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;instruction: str = ARCHITECT_INSTRUCTION&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;tools&lt;/b&gt;: list[str] = [&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor:write,read,similarity_search&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;RoleZero&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Terminal:run_command&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;]&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2640" y="1320" width="400" height="240" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-5" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Engineer2(RoleZero)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;Alex&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;Engineer&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;Take on game, app, web development and deployment.&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;instruction: str = ENGINEER2_INSTRUCTION&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;terminal: Terminal = Field(default_factory=Terminal, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;deployer: Deployer = Field(default_factory=Deployer, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;tools: list[str] = [&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Plan&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;RoleZero&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Terminal:run_command&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Browser:goto,scroll&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;git_create_pull&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;SearchEnhancedQA&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Engineer2&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;CodeReview&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;ImageGetter&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Deployer&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# SWE Agent parameter&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;run_eval: bool = False&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;output_diff: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;max_react_loop: int = 40&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="1560" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-6" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;DataAnalyst(RoleZero)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;David&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;DataAnalyst&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;Take on any data-related tasks, such as data analysis, machine learning, deep learning, web browsing, web scraping, web searching, terminal operation, document QA &amp;amp; analysis, etc.&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;instruction: str = ROLE_INSTRUCTION + EXTRA_INSTRUCTION&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;task_type_desc: str = TASK_TYPE_DESC&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;tools&lt;/b&gt;: list[str] = [&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Plan&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;DataAnalyst&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;RoleZero&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Browser&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor:write,read,similarity_search&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;SearchEnhancedQA&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;custom_tools: list[str] = [&quot;web scraping&quot;, &quot;Terminal&quot;, &quot;Editor:write,read,similarity_search&quot;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;custom_tool_recommender: ToolRecommender = None&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;experience_retriever: Annotated[ExpRetriever, Field(exclude=True)] = &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;KeywordExpRetriever()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;use_reflection: bool = True&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;write_code: WriteAnalysisCode = Field(default_factory=WriteAnalysisCode, &lt;br&gt;&amp;nbsp; &amp;nbsp; exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;execute_code: ExecuteNbCode = Field(default_factory=ExecuteNbCode, exclude=True)&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2200" y="1560" width="400" height="360" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-7" value="@serialize_decorator 装饰器中执行&lt;br&gt;Team.&lt;b&gt;serialize&lt;/b&gt;()" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=center;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1000" y="1120" width="200" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-15" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="LW6XK796A9zfm586ZYFp-9" target="LW6XK796A9zfm586ZYFp-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-9" value="&lt;div&gt;def &lt;b&gt;publish_message&lt;/b&gt;(self, message: Message, user_defined_recipient: str = &quot;&quot;, publicer: str = &quot;&quot;) -&amp;gt; bool:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;让项目Leader接受消息分发&quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 用于多模态消息，提取消息中的图片路径，附加到消息的元数据列表&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; message = self.attach_images(message)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tl = self.get_role(TEAMLEADER_NAME)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;b style=&quot;border-color: var(--border-color); color: rgb(0, 127, 255);&quot;&gt;&amp;nbsp; &amp;nbsp; # 1 用户直接指定消息接收者（可能有多个）的话直接发给对应的角色&lt;/b&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if &lt;b&gt;user_defined_recipient&lt;/b&gt;: &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for role_name in message.send_to:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if self.get_role(role_name).is_idle:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 用户向某个角色开启一个新的直接对话期望得到该角色的直接回复，包括团队Leader在内的其他角色不应该参与&lt;/font&gt;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;        &lt;/span&gt;&lt;/span&gt;# 若该角色当前非空闲状态，则表示用户正在协助该角色处理当前工作，此种情况下，我们按常规流程处理该角色的响应消息&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.&lt;b&gt;direct_chat_roles&lt;/b&gt;.add(role_name)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.&lt;b&gt;_publish_message&lt;/b&gt;(message)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; # # bypass team leader, team leader only needs to know but not to react (commented out because TL doesn&#39;t understand the message well in actual experiments)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # tl.rc.memory.add(self.move_message_info_to_content(message))&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 2&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; elif &lt;b&gt;message.sent_from in self.direct_chat_roles&lt;/b&gt;:&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; # if chat is not public, direct chat response from a certain role to human user, team leader and other roles in the env should not be involved, no need to publish&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.direct_chat_roles.remove(message.sent_from)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if self.is_public_chat:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self._publish_message(message)&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;# 3&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; elif &lt;b&gt;publicer == tl.profile&lt;/b&gt;:&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if message.send_to == {&quot;no one&quot;}:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # skip the dummy message from team leader&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # message processed by team leader can be published now&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self._publish_message(message)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;# 4 every regular message goes through team leader&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;else&lt;/b&gt;:&lt;span style=&quot;color: rgb(0, 127, 255); background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; message.send_to.add(tl.name)&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; # 消息额外发给TL&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.&lt;b&gt;_publish_message&lt;/b&gt;(message)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.&lt;b&gt;history&lt;/b&gt;.add(message)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return True&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1480" y="120" width="440" height="560" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-19" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="LW6XK796A9zfm586ZYFp-11" target="LW6XK796A9zfm586ZYFp-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-11" value="项目需求消息&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;比如：“Generate 2048 Game”&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="LW6XK796A9zfm586ZYFp-12" target="3rQLUAUrCV1BORr8YIZg-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-12" value="TeamLeader （Mike）" style="ellipse;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="440" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-24" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#007FFF;" parent="1" source="LW6XK796A9zfm586ZYFp-14" target="LW6XK796A9zfm586ZYFp-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-14" value="&lt;div&gt;def &lt;b&gt;_publish_message&lt;/b&gt;(self, message: Message, peekable: bool = True) -&amp;gt; bool:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if self.&lt;b&gt;is_public_chat&lt;/b&gt;:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; message.&lt;b&gt;send_to&lt;/b&gt;.add(&lt;b&gt;MESSAGE_ROUTE_TO_ALL&lt;/b&gt;) &lt;font color=&quot;#007fff&quot;&gt;# 如果是公开的消息，额外发给 &amp;lt;all&amp;gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 解析消息来源和发送到的目标角色信息，然后附加到消息头部 content&lt;/font&gt;&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # f&quot;[Message] from {sent_from or &#39;User&#39;} to {send_to}: {converted_msg.content}&quot;&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; message = self.move_message_info_to_content(message)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return super().&lt;b&gt;publish_message&lt;/b&gt;(message, peekable)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="1960" y="120" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-17" value="&lt;b style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;消息路由规则：&lt;br style=&quot;font-size: 10px;&quot;&gt;# send_to={&amp;lt;all&amp;gt;，Mike} -&amp;gt; all; send_to={Alice} -&amp;gt; Alice; send_to={Alice, &amp;lt;all&amp;gt;} -&amp;gt; all.&lt;br&gt;即&lt;br&gt;如果 send_to 包含 &amp;lt;all&amp;gt; 则发给所有角色（保存到角色的上下文消息缓冲 msg_buffer）&lt;br&gt;如果 send_to 仅包含指定的一个或多个人，则将消息发给指定的人&lt;br&gt;&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1960" y="240" width="420" height="70" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-20" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="LW6XK796A9zfm586ZYFp-18" target="LW6XK796A9zfm586ZYFp-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="LW6XK796A9zfm586ZYFp-18" target="3rQLUAUrCV1BORr8YIZg-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-18" value="ENV消息路由规则" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="240" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-21" value="mgx_env.py" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1655" y="90" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-19" style="rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="LW6XK796A9zfm586ZYFp-23" target="u3U1gaW8uxqCsaqYNjzV-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-23" value="&lt;font color=&quot;#007fff&quot;&gt;# Environment$publish_message&lt;br&gt;&lt;/font&gt;&lt;div&gt;def &lt;b&gt;publish_message&lt;/b&gt;(self, message: Message, peekable: bool = True) -&amp;gt; bool:&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &amp;nbsp; &quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;将消息分发给接收者。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; 根据RFC 116第2.2.1章设计的消息路由结构（该系统整体设计已在RFC 113中规划），&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; 消息中的路由信息仅负责指定消息接收者，而不关心接收者的物理位置。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; 如何将消息路由到接收者是由RFC 113设计的传输框架解决的问题。&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#cc0066&quot;&gt;&amp;nbsp; &amp;nbsp; 不清楚这个 RFC 113 116 到底是什么文档并没有搜到&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; logger.debug(f&quot;publish_message: {message.dump()}&quot;)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; found = False&lt;/div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 根据RFC 113第2.2.3.2章的路由功能规划&lt;br&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;# 遍历环境中所有角色和角色实例（某个人）集合，判断是否应该发给当前遍历的接收者&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for role, addrs in self.member_addrs.items():&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if is_send_to(message, addrs):&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; role.&lt;b&gt;put_message&lt;/b&gt;(message) &lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 保存到角色上下文的 Buffer&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; found = True&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if not found:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.warning(f&quot;Message no recipients: {message.dump()}&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.&lt;b&gt;history&lt;/b&gt;.add(message)&amp;nbsp; # For debug&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return True&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;fillColor=#dae8fc;strokeColor=#6c8ebf;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="2440" y="120" width="440" height="280" as="geometry" />
        </mxCell>
        <mxCell id="LW6XK796A9zfm586ZYFp-25" value="base_env.py" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2615" y="90" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-1" value="&lt;font color=&quot;#007fff&quot;&gt;user: [Message] from User to&lt;br&gt;&amp;nbsp;Mike: Create a 2048 game&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="240" y="1355" width="180" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=open;endFill=0;" parent="1" source="yp5kwfwndyGii9iQgIIt-3" target="ZME7ZmMjrQza0RQvAqgv-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-9" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.003;exitY=0.626;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;endArrow=open;endFill=0;" parent="1" source="yp5kwfwndyGii9iQgIIt-3" target="CbrTG_Ll-EKlDJ2bcavH-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-3" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Role(BaseRole, SerializationMixin, ContextMixin, BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;model_config = ConfigDict(arbitrary_types_allowed=True, extra=&quot;allow&quot;)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;constraints: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;desc: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;is_human: bool = False&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;enable_memory: bool = (&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; True&amp;nbsp; # Stateless, atomic roles, or roles that use external storage can disable this to save memory.&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;role_id: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;states: list[str] = []&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;actions: list[SerializeAsAny[Action]] = Field(default=[], validate_default=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;rc&lt;/b&gt;: RoleContext = Field(default_factory=RoleContext)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;addresses: set[str] = set()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 计划器&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;planner&lt;/b&gt;: Planner = Field(default_factory=Planner)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;recovered&lt;/b&gt;: bool = False&amp;nbsp; # to tag if a recovered role&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;latest_observed_msg: Optional[Message] = None&amp;nbsp; # record the latest observed message when interrupted&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;observe_all_msg_from_buffer: bool = False&amp;nbsp; # whether to save all msgs from buffer to memory for role&#39;s awareness&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;__hash__ = object.__hash__&amp;nbsp; # support Role as hashable type in `Environment.members`&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;def publish_message(self, msg)&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="120" width="400" height="440" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-4" value="ProductManager&lt;br&gt;（Alice）" style="ellipse;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="440" y="1520" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-6" value="Architect&lt;br&gt;（Bob）" style="ellipse;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="440" y="1640" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yp5kwfwndyGii9iQgIIt-8" target="Wtnd7zrlogxwDdDhndEJ-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-8" value="Engineer2&lt;br&gt;（Alex）" style="ellipse;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="440" y="1880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="yp5kwfwndyGii9iQgIIt-9" value="DataAnalyst&lt;br&gt;（David）" style="ellipse;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="440" y="2000" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Y08ov66wE5B-TrQS3yJb-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Y08ov66wE5B-TrQS3yJb-1" target="Y08ov66wE5B-TrQS3yJb-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Y08ov66wE5B-TrQS3yJb-1" value="&lt;div&gt;async def &lt;b&gt;run&lt;/b&gt;(self, k=1):&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; for _ in range(k):&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; futures = []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;for&lt;/b&gt; role in self.&lt;b&gt;roles&lt;/b&gt;.values():&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if role.is_idle:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; continue&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; future = &lt;b&gt;role&lt;/b&gt;.&lt;b&gt;run&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; futures.append(future)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if futures:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await asyncio.gather(*futures)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(f&quot;is idle: {self.is_idle}&quot;)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1240" y="720" width="200" height="160" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="Y08ov66wE5B-TrQS3yJb-5" target="ZME7ZmMjrQza0RQvAqgv-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.75;exitDx=0;exitDy=0;" parent="1" source="Y08ov66wE5B-TrQS3yJb-5" target="ZME7ZmMjrQza0RQvAqgv-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.998;exitY=0.902;exitDx=0;exitDy=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="Y08ov66wE5B-TrQS3yJb-5" target="EQPCou5D6iKQjcQxNRSE-30" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1930" y="1045" />
              <mxPoint x="1930" y="700" />
              <mxPoint x="1220" y="700" />
              <mxPoint x="1220" y="165" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Y08ov66wE5B-TrQS3yJb-5" value="&lt;div&gt;@role_raise_decorator&lt;/div&gt;&lt;div&gt;async def &lt;b&gt;run&lt;/b&gt;(self, with_message=None) -&amp;gt; Message | None:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;&lt;b&gt;观察，并根据观察结果思考和行动&lt;/b&gt;&quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if with_message:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg = None&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if isinstance(with_message, str):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg = Message(content=with_message)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elif isinstance(with_message, Message):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg = with_message&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elif isinstance(with_message, list):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg = Message(content=&quot;\n&quot;.join(with_message))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if not msg.cause_by:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg.cause_by = UserRequirement&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.put_message(msg)&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;# 1 从接收到的消息中提取当前Role感兴趣的消息&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if not await self.&lt;b&gt;_observe&lt;/b&gt;():&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # If there is no new information, suspend and wait&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;&quot;&gt;&lt;font color=&quot;#330033&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(f&quot;{self._setting}: no news. waiting.&quot;)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;# 2 行动，_react() 返回值是 AIMessage&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rsp = await self.&lt;b&gt;react&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # Reset the next action to be taken.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.set_todo(None)&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 3 调用当前角色 rc.env.publish_message 将 AIMessage 分发处理&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; #&amp;nbsp; &amp;nbsp; &amp;nbsp;AIMessage 从后面看就是角色自己的任务完成的消息&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.&lt;b&gt;publish_message&lt;/b&gt;(rsp)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return rsp&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="1480" y="720" width="440" height="360" as="geometry" />
        </mxCell>
        <mxCell id="Y08ov66wE5B-TrQS3yJb-7" value="role.py" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1670" y="690" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-1" value="&lt;font color=&quot;#007fff&quot;&gt;// &lt;b&gt;观察操作&lt;/b&gt;，其实就是从消息缓冲中弹出所有接收到的消息，然后&lt;b&gt;过滤&lt;/b&gt;出当前Role感兴趣的消息并&lt;b&gt;存储到RoleContext Memory&lt;/b&gt;&lt;/font&gt;&lt;br&gt;async def _observe(self) -&amp;gt; int:&lt;br&gt;&amp;nbsp; &amp;nbsp; ..." style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=8;" parent="1" vertex="1">
          <mxGeometry x="1960" y="720" width="200" height="80" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-3" value="&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b&gt;关于Role感兴趣的消息指：&lt;/b&gt;&lt;br&gt;&lt;b&gt;1. 直接发给当前Role的消息, 不包括 &amp;lt;all&amp;gt;&lt;/b&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; 比如上面 send_to={&amp;lt;all&amp;gt;, Mike}, 仅仅Mike会感兴趣&lt;br&gt;&lt;b&gt;2. 当前角色监听的消息，cause_by in rc.watch&lt;br&gt;&lt;/b&gt;&amp;nbsp; &amp;nbsp; 角色监听的消息可以去角色的初始化方法中查看，&lt;br&gt;&amp;nbsp; &amp;nbsp; 比如：&lt;br&gt;&amp;nbsp; &amp;nbsp; PM 监听 &lt;b&gt;UserRequirement&lt;/b&gt;、&lt;b&gt;PrepareDocuments&lt;/b&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2170" y="705" width="260" height="110" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-8" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="ZME7ZmMjrQza0RQvAqgv-4" target="ZME7ZmMjrQza0RQvAqgv-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-4" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RoleContext(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;model_config = ConfigDict(arbitrary_types_allowed=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;env&lt;/b&gt;: BaseEnvironment = Field(default=None, exclude=True)&amp;nbsp; # # avoid circular import&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;msg_buffer&lt;/b&gt;: MessageQueue = Field(&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; default_factory=MessageQueue, exclude=True&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;)&amp;nbsp; # Message Buffer with Asynchronous Updates&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;memory&lt;/b&gt;: Memory = Field(default_factory=Memory)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# long_term_memory: LongTermMemory = Field(default_factory=LongTermMemory)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;working_memory&lt;/b&gt;: Memory = Field(default_factory=Memory)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;state&lt;/b&gt;: int = Field(default=-1)&amp;nbsp; # -1 indicates initial or termination state where todo is None&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;todo&lt;/b&gt;: Action = Field(default=None, exclude=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;watch&lt;/b&gt;: set[str] = Field(default_factory=set)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;news&lt;/b&gt;: list[Type[Message]] = Field(default=[], exclude=True)&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;# TODO not used&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;ignore_id: bool = False&lt;/font&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;react_mode&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: RoleReactMode = (&lt;/span&gt;&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;# 三种模式：react by_order plan_and_act&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;react_mode&lt;/b&gt;: RoleReactMode = (&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; RoleReactMode.REACT&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;)&amp;nbsp; # see `Role._set_react_mode` for definitions of the following two attributes&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;max_react_loop&lt;/b&gt;: int = 1&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2200" y="120" width="400" height="300" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-7" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Memory(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;storage&lt;/b&gt;: list[SerializeAsAny[Message]] = []&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;index&lt;/b&gt;: DefaultDict[str, list[SerializeAsAny[Message]]] = Field(default_factory=lambda: defaultdict(list))&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;ignore_id&lt;/b&gt;: bool = False&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2640" y="120" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="ZME7ZmMjrQza0RQvAqgv-9" target="ZME7ZmMjrQza0RQvAqgv-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-9" value="&lt;font color=&quot;#007fff&quot;&gt;// &lt;b&gt;行动，三种模式（两种处理流程）&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;div&gt;async def react(self) -&amp;gt; Message:&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; if self.rc.react_mode == RoleReactMode.&lt;b&gt;REACT&lt;/b&gt; or self.rc.react_mode == RoleReactMode.&lt;b&gt;BY_ORDER&lt;/b&gt;: &lt;font color=&quot;#007fff&quot;&gt;# 默认&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rsp = await self.&lt;b&gt;_react&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; elif self.rc.react_mode == RoleReactMode.&lt;b&gt;PLAN_AND_ACT&lt;/b&gt;:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rsp = await self.&lt;b&gt;_plan_and_act&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; raise ValueError(f&quot;Unsupported react mode: {self.rc.react_mode}&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self._set_state(state=-1)&amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;# current reaction is complete, reset state to -1 and todo back to None&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if isinstance(rsp, AIMessage):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#007fff&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rsp.&lt;b&gt;with_agent&lt;/b&gt;(self._setting)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return rsp&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=3;" parent="1" vertex="1">
          <mxGeometry x="1960" y="850" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1.003;exitY=0.144;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="ZME7ZmMjrQza0RQvAqgv-11" target="3rQLUAUrCV1BORr8YIZg-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.997;exitY=0.469;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="ZME7ZmMjrQza0RQvAqgv-11" target="3rQLUAUrCV1BORr8YIZg-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.616;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="ZME7ZmMjrQza0RQvAqgv-11" target="CbrTG_Ll-EKlDJ2bcavH-4" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="2900" y="1003" />
              <mxPoint x="2900" y="1800" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-11" value="&lt;span style=&quot;background-color: initial;&quot;&gt;async def &lt;b&gt;_react&lt;/b&gt;(self) -&amp;gt; Message:&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self._set_state(0)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 快速思考可以解决的问题不需要再执行“思考-行动”的循环&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 像项目开发属于复杂任务，会认定为 Task 类型，quick_rsp 为空&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; quick_rsp, _ = await self.&lt;b&gt;_quick_think&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if quick_rsp:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return quick_rsp&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 思考 再行动 循环，处理复杂任务（比如 Task）&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; actions_taken = 0&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt;# 行动计数&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rsp = AIMessage(content=&quot;No actions taken yet&quot;, cause_by=Action)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 对象初始化时会将角色属性 max_react_loop 赋值给 rc 属性的 max_react_loop&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 不同角色可能有不同的轮数，比如 Engineer2 作为主要干活的角色，默认最多可以执行40轮&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; while actions_taken &amp;lt; self.rc.max_react_loop:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 每次行动前重新从消息缓冲中弹出所有接收到的消息保存到 Memory&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await self.&lt;b&gt;_observe&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 思考, 注意基本每个角色都有重写 _think()&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;has_todo&lt;/b&gt; = await self.&lt;b&gt;_think&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if not has_todo:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 行动&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.debug(f&quot;{self._setting}: {self.rc.state=}, will do {self.rc.todo}&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rsp = await self.&lt;b&gt;_act&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; actions_taken += 1&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 后置检查，如果超出行动轮数限制，终端打印信息询问能否继续&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if self.rc.max_react_loop &amp;gt;= 10 and actions_taken &amp;gt;= self.rc.max_react_loop:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.warning(f&quot;reached max_react_loop: {actions_taken}&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; human_rsp = await self.ask_human(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;I have reached my max action rounds, do you want me to continue? Yes or no&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if &quot;yes&quot; in human_rsp.lower():&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; actions_taken = 0&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return rsp&amp;nbsp;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2440" y="720" width="440" height="460" as="geometry" />
        </mxCell>
        <mxCell id="ZME7ZmMjrQza0RQvAqgv-13" value="role_zero.py" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2615" y="690" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-2" value="&lt;div&gt;async def &lt;b&gt;_quick_think&lt;/b&gt;(self) -&amp;gt; Tuple[Message, str]:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;answer&lt;/b&gt; = &quot;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rsp_msg = None&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if self.rc.news[-1].cause_by != any_to_str(UserRequirement):&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # Agent 自己不会生成 quick questions, 减少 LLM 调用&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return rsp_msg, &quot;&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;# 1 从 Memory 取出最近的消息（包括用户消息、Agent生成的消息, 附加 QUICK_THINK_PROMPT, 然后请求 LLM&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b&gt;context&lt;/b&gt; = self.llm.format_msg(memory + [UserMessage(content=&lt;b&gt;QUICK_THINK_PROMPT&lt;/b&gt;)])&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; async with ThoughtReporter() as reporter:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await reporter.async_report({&quot;type&quot;: &quot;classify&quot;})&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 额外添加 quick 问题的系统提示词，请求 LLM&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; intent_result = await self.&lt;b&gt;llm&lt;/b&gt;.&lt;b&gt;aask&lt;/b&gt;(context, &lt;b&gt;system_msgs&lt;/b&gt;=[self.format_quick_system_prompt()])&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;# 2 根据 LLM 响应做进一步处理&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if &quot;&lt;b&gt;QUICK&lt;/b&gt;&quot; in intent_result or &quot;&lt;b&gt;AMBIGUOUS&lt;/b&gt;&quot; in intent_result:&amp;nbsp; # llm call with the original context&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; async with ThoughtReporter(enable_llm_stream=True) as reporter:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await reporter.async_report({&quot;type&quot;: &quot;quick&quot;})&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; answer = await self.llm.&lt;b&gt;aask&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.llm.format_msg(memory),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; system_msgs=[&lt;b&gt;QUICK_RESPONSE_SYSTEM_PROMPT&lt;/b&gt;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp; .format(role_info=self._get_prefix())],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # If the answer contains the substring &#39;[Message] from A to B:&#39;, remove it.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pattern = r&quot;\[Message\] from .+? to .+?:\s*&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; answer = re.sub(pattern, &quot;&quot;, answer, count=1)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if &quot;command_name&quot; in answer:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#007fff&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # an actual TASK intent misclassified as QUICK, correct it here, FIXME: a better way is to classify it correctly in the first place&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; answer = &quot;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; intent_result = &quot;&lt;b&gt;TASK&lt;/b&gt;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; elif &quot;&lt;b&gt;SEARCH&lt;/b&gt;&quot; in intent_result:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; query = &quot;\n&quot;.join(str(msg) for msg in memory)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; answer = await SearchEnhancedQA().run(query)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if answer:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.rc.memory.&lt;b&gt;add&lt;/b&gt;(AIMessage(content=answer, cause_by=QUICK_THINK_TAG))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await self.&lt;b&gt;reply_to_human&lt;/b&gt;(content=answer)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rsp_msg = AIMessage(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content=answer,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sent_from=self.name,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cause_by=QUICK_THINK_TAG,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return rsp_msg, intent_result&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2960" y="120" width="440" height="600" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-4" value="&lt;font style=&quot;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;&lt;b style=&quot;&quot;&gt;context 内容：&lt;/b&gt;&lt;br&gt;[{&#39;role&#39;: &#39;user&#39;, &#39;content&#39;: &#39;[Message] from User to Mike: Create a 2048 game&#39;}, &lt;br&gt;{&#39;role&#39;: &#39;user&#39;, &#39;content&#39;: &quot;\n# Instruction\nDetermine the previous message&#39;s intent.\n&lt;br&gt;Respond with a concise thought, then provide the appropriate response category: QUICK, SEARCH, TASK, or AMBIGUOUS.\n\n&lt;br&gt;# Format\nThought: [Your thought here]\n&lt;br&gt;Response Category: [QUICK/SEARCH/TASK/AMBIGUOUS]\n\n&lt;br&gt;# Response:\n&quot;}]&lt;br&gt;&lt;br&gt;&lt;b style=&quot;&quot;&gt;system_msgs 内容&lt;/b&gt;大概是&lt;b style=&quot;&quot;&gt;：&lt;/b&gt;&lt;br&gt;包含角色信息；&lt;br&gt;要求根据角色定位生成在请求范畴内合理的响应；&lt;br&gt;然后定义了响应的分类：&lt;br&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;b&gt;QUICK&lt;/b&gt;：&lt;br&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;用于可以直接回答的简单问题或请求。&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;SEARCH&lt;/b&gt;：&lt;br&gt;&amp;nbsp; &amp;nbsp; 用于需要获取最新或详细信息的查询。&lt;br&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;TASK&lt;/b&gt;：&lt;br&gt;&amp;nbsp; &amp;nbsp; 用于设计工具使用、&lt;/font&gt;&lt;font style=&quot;font-size: 10px;&quot; color=&quot;#007fff&quot;&gt;计算机操作、多步骤或详细说明的请求。例如软件开发、项目规划，或任何需要使用工具完成的任务。&lt;/font&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;div style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;b&gt;AMBIGUOUS&lt;/b&gt;（模糊不清）：&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;适用于含义不清、缺乏足够细节或超出系统能力范围的请求。&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 10px;&quot;&gt;在将请求归类为 TASK 之前：&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;&lt;/font&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; 考虑用户是否已提供足够的信息来执行该任务。如果请求很复杂但缺少关键细节或所提文件的内容或路径，则应归类为 AMBIGUOUS。&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&amp;nbsp; &amp;nbsp; 如果请求是一个“如何做”的问题，且只是询问一般计划、方法或策略，则应归类为 QUICK。&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;像 “Generate 2048 game” 这种请求根据系统提示词可以判断是 TASK 类型。&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3410" y="120" width="630" height="370" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-5" value="&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;# 思考的过程是让LLM按照提示词生成行动计划&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;async def &lt;b&gt;_think&lt;/b&gt;(self) -&amp;gt; bool:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;Useful in &#39;react&#39; mode. Use LLM to decide whether and what to do next.&quot;&quot;&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 如果设置使用固定的 SOP 流程 (默认 False)&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if self.use_fixed_sop:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return await super()._think()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp;# 不使用固定的流程（默认走这个思考流程）&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; ### 0. Preparation ###&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if not self.rc.&lt;b&gt;todo&lt;/b&gt;: &lt;font color=&quot;#007fff&quot;&gt;# 好像是之前 _quick_think() 写入的&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return False&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if not self.&lt;b&gt;planner&lt;/b&gt;.plan.goal:&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 设置计划目标&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.planner.plan.&lt;b&gt;goal&lt;/b&gt; = self.get_memories()[-1].content&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 根据 goal 检测响应应该使用的自然语言，比如汉语、英语&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; detect_language_prompt = &lt;b&gt;DETECT_LANGUAGE_PROMPT&lt;/b&gt;.format(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; requirement=self.planner.plan.goal)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.&lt;b&gt;respond_language&lt;/b&gt; = await self.&lt;b&gt;llm&lt;/b&gt;.&lt;b&gt;aask&lt;/b&gt;(detect_language_prompt)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; ### 1. Experience ###&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 调用各角色自己的 experience_retriever 寻回历史经验&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; example = self.&lt;b&gt;_retrieve_experience&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; ### 2. Plan Status ###&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 获取行动计划状态，包括项目目标、任务列表及每个任务的完成状态、下一步应该交给谁&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; plan_status, current_task = self.&lt;b&gt;_get_plan_status&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; ### 3. Tool/Command Info ###&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tools = await self.tool_recommender.&lt;b&gt;recommend_tools&lt;/b&gt;()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tool_info = json.dumps({tool.name: tool.schemas for tool in tools})&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 下面就是汇上面的信息和历史信息，生成系统提示词和用户提示词然后请求 LLM&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ### Role Instruction ###&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; instruction = self.instruction.strip()&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;system_prompt&lt;/b&gt; = self.system_prompt.format(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; role_info=self._get_prefix(),&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; task_type_desc=self.task_type_desc,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; available_commands=tool_info,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; example=example,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; instruction=&lt;b&gt;instruction&lt;/b&gt;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ### Make Decision Dynamically ###&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;prompt&lt;/b&gt; = self.cmd_prompt.format(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; current_state=self.cmd_prompt_current_state,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plan_status=plan_status,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; current_task=&lt;b&gt;current_task&lt;/b&gt;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; respond_language=self.respond_language,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; ### Recent Observation ###&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memory = self.rc.memory.get(self.memory_k)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memory = await self.parse_browser_actions(memory)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memory = await self.parse_editor_result(memory)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;memory&lt;/b&gt; = self.parse_images(memory)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; req = self.llm.format_msg(memory + [UserMessage(content=prompt)])&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;b&gt;state_data&lt;/b&gt; = dict(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; plan_status=plan_status,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; current_task=current_task,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; instruction=instruction,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; )&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; async with ThoughtReporter(enable_llm_stream=True) as reporter:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; await reporter.async_report({&quot;type&quot;: &quot;react&quot;})&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # 根据上面的提示词，这一步其实就是生成行动计划&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.command_rsp = await self.&lt;b&gt;llm_cached_aask&lt;/b&gt;(req=&lt;b&gt;req&lt;/b&gt;, system_msgs=[&lt;b&gt;system_prompt&lt;/b&gt;], &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state_data=&lt;b&gt;state_data&lt;/b&gt;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.&lt;b&gt;command_rsp&lt;/b&gt; = await self._check_duplicates(req, self.command_rsp)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return True&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2960" y="760" width="440" height="840" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-7" value="除 TeamLeader 外&lt;br style=&quot;font-size: 10px;&quot;&gt;的其他人，仅存储消息到消息缓冲，但是他们对这个消息并不感兴趣&lt;br&gt;不会处理" style="ellipse;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="440" y="1400" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-12" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="3rQLUAUrCV1BORr8YIZg-9" target="3rQLUAUrCV1BORr8YIZg-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-9" value="思考（_think）&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;生成角色自己的行动计划&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="640" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-14" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="u3U1gaW8uxqCsaqYNjzV-21" target="u3U1gaW8uxqCsaqYNjzV-15" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="330" y="1550" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1180" y="1320" />
              <mxPoint x="1180" y="1500" />
              <mxPoint x="220" y="1500" />
              <mxPoint x="220" y="1560" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-23" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="3rQLUAUrCV1BORr8YIZg-11" target="u3U1gaW8uxqCsaqYNjzV-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-11" value="行动（_act）&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;执行计划中的任务命令（&lt;/font&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;记录Task&lt;/font&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;、&lt;b style=&quot;&quot;&gt;向 Engineer2 发送消息&lt;/b&gt;）&lt;/font&gt;&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="840" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3rQLUAUrCV1BORr8YIZg-15" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;DETECT_LANGUAGE_PROMPT &lt;/b&gt;用于检测 LLM 响应应该使用的自然语言类型。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#007fff&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3410" y="760" width="380" height="70" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-1" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;经验寻回其实就是提供了一些案例 （比如 TeamLeader&amp;nbsp; SimpleExpRetriever 的经验案例&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp;TL_EXAMPLE&lt;/b&gt;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;），让各种角色参考历史经验生成自己的行动计划和回复数据格式；&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;比如 TeamLeader 就是拆分任务分发给其他角色，比如让产品经理设计需求文档PRD、然后让架构师设计软件架构、然后让工程师实现，&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;以及推动团队各角色任务流转，回答用户关于项目进度的询问&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3410" y="990" width="790" height="50" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-3" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;command_name&quot;: &quot;Plan.append_task&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;args&quot;: {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;task_id&quot;: &quot;1&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;dependent_task_ids&quot;: [],&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;instruction&quot;: &quot;Use Vite, React, MUI, Tailwind CSS for the program. And create a product requirement document (PRD). &quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;assignee&quot;: &quot;Alice&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;行动计划的命令的字典列表，比如：&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;div&gt;[&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;command_name&quot;: &quot;Plan.append_task&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;args&quot;: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;task_id&quot;: &quot;1&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;dependent_task_ids&quot;: [],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;instruction&quot;: &quot;Create a 2048 game using Vite, React, MUI, and Tailwind CSS. The game should include core gameplay mechanics (tile movement, merging, scoring) and a responsive UI. Deploy the web app after completion.&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;assignee&quot;: &quot;Alex&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;command_name&quot;: &quot;TeamLeader.publish_message&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;args&quot;: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;content&quot;: &quot;Create a 2048 game using Vite, React, MUI, and Tailwind CSS. The game should include core gameplay mechanics (tile movement, merging, scoring) and a responsive UI. Deploy the web app after completion.&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;send_to&quot;: &quot;&lt;b&gt;Alex&lt;/b&gt;&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;command_name&quot;: &quot;RoleZero.reply_to_human&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;args&quot;: {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;content&quot;: &quot;I have assigned the task to Alex, our Engineer. He will develop the 2048 game using Vite, React, MUI, and Tailwind CSS, and deploy it once completed.&quot;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; },&lt;/div&gt;&lt;div&gt;&amp;nbsp; { &quot;command_name&quot;: &quot;end&quot; }&lt;/div&gt;&lt;div&gt;]&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="3440" y="1170" width="1030" height="450" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-2" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-4" target="u3U1gaW8uxqCsaqYNjzV-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3420" y="1800" />
              <mxPoint x="3420" y="1680" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-5" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-4" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="3440" y="1420" as="targetPoint" />
            <Array as="points">
              <mxPoint x="3410" y="1720" />
              <mxPoint x="3410" y="1420" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-7" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-4" target="u3U1gaW8uxqCsaqYNjzV-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-10" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-4" target="u3U1gaW8uxqCsaqYNjzV-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-4" value="&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;# 思考过程让LLM生成的行动计划就是一组任务（命令），参考 TL_EXAMPLE 等提示&lt;/font&gt;&lt;/div&gt;&lt;div&gt;async def &lt;b&gt;_act&lt;/b&gt;(self) -&amp;gt; Message:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if self.use_fixed_sop:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return await super()._act()&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 将行动计划中的那组命令转换为字典列表&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; commands, ok, self.command_rsp = await self.&lt;b&gt;_parse_commands&lt;/b&gt;(self.&lt;b&gt;command_rsp&lt;/b&gt;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.rc.memory.add(AIMessage(content=self.command_rsp))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if not ok:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; error_msg = commands&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.rc.memory.add(UserMessage(content=error_msg, cause_by=RunCommand))&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return error_msg&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; logger.info(f&quot;Commands: \n{commands}&quot;)&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 遍历执行计划中的命令，即执行对应的方法&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 比如右边的案例：&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 1. 在角色TL的计划中追加任务&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 2. 执行TL角色的 publish_message()&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 3. 执行 reply_to_human&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; outputs = await self.&lt;b&gt;_run_commands&lt;/b&gt;(commands)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; logger.info(f&quot;Commands outputs: \n{outputs}&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.rc.memory.add(UserMessage(content=outputs, cause_by=RunCommand))&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return &lt;b&gt;AIMessage&lt;/b&gt;(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content=f&quot;I have finished the task, please mark my task as finished. Outputs: {outputs}&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sent_from=self.name,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cause_by=RunCommand,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; )&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=2;" parent="1" vertex="1">
          <mxGeometry x="2960" y="1640" width="440" height="320" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;" parent="1" source="CbrTG_Ll-EKlDJ2bcavH-8" target="u3U1gaW8uxqCsaqYNjzV-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-8" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Planner(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;plan&lt;/b&gt;: Plan&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;working_memory&lt;/b&gt;: Memory = Field(default_factory=Memory)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;auto_run&lt;/b&gt;: bool = False&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2200" y="440" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-11" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=1;" parent="1" source="LW6XK796A9zfm586ZYFp-1" target="CbrTG_Ll-EKlDJ2bcavH-10" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-1560" y="880" as="sourcePoint" />
            <mxPoint x="-1560" y="560" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CbrTG_Ll-EKlDJ2bcavH-10" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;RoleZero(Role)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;name: str = &quot;Zero&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;profile: str = &quot;RoleZero&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;goal: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;system_msg: Optional[list[str]] = None&amp;nbsp; # Use None to conform to the default value at llm.aask&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;system_prompt: str = SYSTEM_PROMPT&amp;nbsp; # Use None to conform to the default value at llm.aask&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;cmd_prompt: str = CMD_PROMPT&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;cmd_prompt_current_state: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;instruction: str = ROLE_INSTRUCTION&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;task_type_desc: Optional[str] = None&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# React Mode&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;react_mode: Literal[&quot;react&quot;] = &quot;react&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;max_react_loop: int = 50&amp;nbsp; # used for react mode&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# Tools&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;tools: list[str] = []&amp;nbsp; # Use special symbol [&quot;&amp;lt;all&amp;gt;&quot;] to indicate use of all registered tools&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;tool_recommender: Optional[ToolRecommender] = None&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;tool_execution_map: Annotated[dict[str, Callable], Field(exclude=True)] = {}&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;special_tool_commands: list[str] = [&quot;Plan.finish_current_task&quot;, &quot;end&quot;, &quot;Terminal.run_command&quot;, &quot;RoleZero.ask_human&quot;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# List of exclusive tool commands.&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# If multiple instances of these commands appear, only the first occurrence will be retained.&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;exclusive_tool_commands: list[str] = [&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor.edit_file_by_replace&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor.insert_content_at_line&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor.append_file&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Editor.open_file&quot;,&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;]&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# Equipped with three basic tools by default for optional use&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;editor: Editor = Editor(enable_auto_lint=True)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;browser: Browser = Browser()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# Experience&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;experience_retriever: Annotated[ExpRetriever, Field(exclude=True)] = DummyExpRetriever()&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;# Others&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;observe_all_msg_from_buffer: bool = True&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;command_rsp: str = &quot;&quot;&amp;nbsp; # the raw string containing the commands&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;commands: list[dict] = []&amp;nbsp; # commands to be executed&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;memory_k: int = 200&amp;nbsp; # number of memories (messages) to use as historical context&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;use_fixed_sop: bool = False&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;respond_language: str = &quot;&quot;&amp;nbsp; # Language for responding humans and publishing messages.&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;use_summary: bool = True&amp;nbsp; # whether to summarize at the end&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-1760" y="600" width="400" height="680" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-1" value="Plan.append_task:&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 创建一个任务对象，加入到&lt;b&gt;角色的计划任务列表 tasks、task_map (task_id: task)&lt;br&gt;&lt;/b&gt;&amp;nbsp; &amp;nbsp; # &lt;b&gt;注意这里的任务并不是要 MetaGPT 直接执行的，而是用于指导下一阶段生成计划任务（命令）&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; self.tasks.append(new_task)&amp;nbsp;&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; self.task_map[new_task.task_id] = new_task&lt;/b&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=6;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="3440" y="1640" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-3" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center;&quot;&gt;&lt;b&gt;Plan(BaseModel)&lt;/b&gt;&lt;br style=&quot;font-size: 10px;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;goal&lt;/b&gt;: str&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;context: str = &quot;&quot;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;font color=&quot;#007fff&quot;&gt;# 计划任务列表&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;tasks&lt;/b&gt;: list[Task] = []&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;&lt;b&gt;task_map&lt;/b&gt;: dict[str, Task] = {}&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px;&quot;&gt;current_task_id: str = &quot;&quot;&lt;/p&gt;&lt;hr style=&quot;font-size: 10px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 10px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=10;fontFamily=Helvetica;html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="-2640" y="440" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-6" value="TeamLeader.publish_message:&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; # 将消息发给下一个角色&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;if msg.cause_by != QUICK_THINK_TAG:&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; msg.send_to = send_to&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.rc.env.&lt;b&gt;publish_message&lt;/b&gt;(msg, publicer=self.profile)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=6;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="3440" y="1760" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-9" value="RoleZero.reply_to_human:&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; &amp;nbsp; # 只是返回一个字符串，后面和其他命令的返回值一起通过 AIMessage 返回&lt;br&gt;&amp;nbsp; &amp;nbsp; # &quot;SUCCESS, human has received your reply. Refrain from resending duplicate messages.&amp;nbsp; If you no longer need to take action, use the command ‘end’ to stop.&quot;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=10;align=left;arcSize=6;" parent="1" vertex="1">
          <mxGeometry x="3440" y="1880" width="440" height="80" as="geometry" />
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-3" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="u3U1gaW8uxqCsaqYNjzV-11" target="xXTJKvGBfzGbbb0bBJTi-1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-11" value="&lt;span style=&quot;font-size: 11px;&quot;&gt;将 Engineer2 开发&lt;br&gt;加入到计划任务管理中&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;实现任务流程及状态管理，详细看 Plan 类&lt;/font&gt;&lt;br&gt;&lt;/span&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1040" y="1400" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-2" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="u3U1gaW8uxqCsaqYNjzV-15" target="yp5kwfwndyGii9iQgIIt-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-15" value="ENV消息路由规则" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="240" y="1520" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-20" style="rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" source="u3U1gaW8uxqCsaqYNjzV-18" target="ZME7ZmMjrQza0RQvAqgv-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-18" value="上下文消息缓冲&lt;br&gt;msg_buffer" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="2280" y="440" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-22" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="3rQLUAUrCV1BORr8YIZg-11" target="u3U1gaW8uxqCsaqYNjzV-21" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="960" y="1320" as="sourcePoint" />
            <mxPoint x="1100" y="1400" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="u3U1gaW8uxqCsaqYNjzV-21" value="&lt;font style=&quot;font-size: 11px;&quot;&gt;发送 Message 给&lt;br&gt;Engineer2，让其开发&lt;br&gt;&lt;font style=&quot;font-size: 11px;&quot; color=&quot;#007fff&quot;&gt;send_to=Alex&lt;/font&gt;&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1040" y="1280" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-1" value="&lt;font style=&quot;font-size: 11px;&quot; color=&quot;#007fff&quot;&gt;思考阶段：&lt;br style=&quot;font-size: 11px;&quot;&gt;1.&amp;nbsp;根据目标检测响应应该使用的自然语言&lt;br style=&quot;font-size: 11px;&quot;&gt;2.&amp;nbsp;汇总目标信息、响应语言、历史信息、角色信息等生成系统提示词和用户提示词，然后制定行动计划。&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; 行动计划包含一组命令，可用计划命令具体参考各个角色类的工具定义（tools）。&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; 以 TeamLeader 为例：&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 系统提示词包含：TeamLeader角色描述、团队成员、成员角色描述、行动计划中命令的数据结构描述、计划命令的案例、TeamLeader行为指导&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 可用的工具：tools: list[str] = [&quot;Plan&quot;, &quot;RoleZero&quot;, &quot;TeamLeader&quot;]&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;行动阶段：&lt;br style=&quot;font-size: 11px;&quot;&gt;1. 执行思考阶段生成的行动计划命令（Command）&lt;br style=&quot;font-size: 11px;&quot;&gt;&amp;nbsp; &amp;nbsp; 以 TeamLeader 为例：&lt;br&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&#39;command_name&#39;: &#39;&lt;b&gt;Plan.append_task&lt;/b&gt;&#39;, &#39;args&#39;: {&#39;task_id&#39;: &#39;1&#39;, &#39;dependent_task_ids&#39;: [], &#39;instruction&#39;: &#39;Create a 2048 game using Vite, React, MUI, and Tailwind CSS.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; The game should include core gameplay mechanics (tile movement, merging, scoring) and a responsive UI. Deploy the web app after completion.&#39;, &#39;assignee&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&#39;command_name&#39;: &#39;&lt;b&gt;TeamLeader.publish_message&lt;/b&gt;&#39;, &#39;args&#39;: {&#39;content&#39;: &#39;Create a 2048 game using Vite, React, MUI, and Tailwind CSS. &lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; The game should include core gameplay mechanics (tile movement, merging, scoring) and a responsive UI. Deploy the web app after completion.&#39;, &#39;send_to&#39;: &#39;Alex&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&#39;command_name&#39;: &#39;&lt;b&gt;RoleZero.reply_to_human&lt;/b&gt;&#39;, &#39;args&#39;: {&#39;content&#39;: &#39;I have assigned the task to Alex, our Engineer. He will develop the 2048 game using Vite, React, MUI, and Tailwind CSS, and deploy it once completed.&#39;}},&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&#39;command_name&#39;: &#39;end&#39;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; ]&lt;/div&gt;&lt;/font&gt;&lt;font style=&quot;&quot; color=&quot;#007fff&quot;&gt;&lt;br&gt;&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="1400" y="1280" width="1120" height="290" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-6" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="Wtnd7zrlogxwDdDhndEJ-3" target="Wtnd7zrlogxwDdDhndEJ-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="xXTJKvGBfzGbbb0bBJTi-6" target="u3U1gaW8uxqCsaqYNjzV-11">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1200" y="1800" />
              <mxPoint x="1200" y="1468" />
              <mxPoint x="1150" y="1468" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-11" value="修改TL计划列表中任务状态" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="xXTJKvGBfzGbbb0bBJTi-4">
          <mxGeometry x="-0.7207" y="-2" relative="1" as="geometry">
            <mxPoint x="38" y="20" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-3" value="&lt;div&gt;思考（_think）&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;生成角色自己的行动计划&lt;/font&gt;&lt;br&gt;&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="640" y="1880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="OfNNOcR5e2gZgqRE5rpM-1" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="OfNNOcR5e2gZgqRE5rpM-3" target="Wtnd7zrlogxwDdDhndEJ-3" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1180" y="1920" />
              <mxPoint x="1180" y="1980" />
              <mxPoint x="600" y="1980" />
              <mxPoint x="600" y="1920" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="OfNNOcR5e2gZgqRE5rpM-2" value="多轮 ReAct 循环&lt;br style=&quot;font-size: 10px;&quot;&gt;直到 _think 计划为空 或 超出循环次数限制&lt;br style=&quot;font-size: 10px;&quot;&gt;（max_react_loop）" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=10;" parent="OfNNOcR5e2gZgqRE5rpM-1" vertex="1" connectable="0">
          <mxGeometry x="0.0077" y="2" relative="1" as="geometry">
            <mxPoint x="23" y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="OfNNOcR5e2gZgqRE5rpM-4" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="Wtnd7zrlogxwDdDhndEJ-5" target="OfNNOcR5e2gZgqRE5rpM-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-5" value="行动（_act）&lt;br style=&quot;font-size: 11px;&quot;&gt;&lt;font color=&quot;#007fff&quot; style=&quot;font-size: 10px;&quot;&gt;执行计划中的任务命令（创建项目工程目录、代码实现、部署等等）&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;fontSize=11;" parent="1" vertex="1">
          <mxGeometry x="840" y="1880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Wtnd7zrlogxwDdDhndEJ-7" value="这里测试出乎意料的&lt;br style=&quot;font-size: 10px;&quot;&gt;是竟然直接发给了工程师" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="835" y="1360" width="130" height="40" as="geometry" />
        </mxCell>
        <mxCell id="OfNNOcR5e2gZgqRE5rpM-3" value="同样包括分配任务&lt;br style=&quot;font-size: 10px;&quot;&gt;（只不过是发给己）；&lt;br style=&quot;font-size: 10px;&quot;&gt;将任务加入到自己的计划任务管理；&lt;br style=&quot;font-size: 10px;&quot;&gt;等任务完成发送 AIMessage" style="ellipse;whiteSpace=wrap;html=1;fontSize=10;" parent="1" vertex="1">
          <mxGeometry x="1040" y="1880" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-1" value="&lt;font style=&quot;font-size: 10px;&quot;&gt;等到TL的计划任务&lt;br&gt;完成，TL发送 AIMessage&lt;br&gt;&lt;font color=&quot;#3333ff&quot;&gt;结束TL自己的计划&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1240" y="1400" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Wtnd7zrlogxwDdDhndEJ-3" target="xXTJKvGBfzGbbb0bBJTi-6">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="760" y="1920" as="sourcePoint" />
            <mxPoint x="1142" y="1468" as="targetPoint" />
            <Array as="points">
              <mxPoint x="800" y="1920" />
              <mxPoint x="800" y="1800" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-10" value="没有更多计划" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="xXTJKvGBfzGbbb0bBJTi-9">
          <mxGeometry x="-0.6479" y="-4" relative="1" as="geometry">
            <mxPoint x="-4" y="-20" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-6" value="发送AIMessage&lt;br&gt;&lt;font color=&quot;#007fff&quot;&gt;表示TL分配给自己的任务已完成&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;fontSize=11;" vertex="1" parent="1">
          <mxGeometry x="1040" y="1760" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="xXTJKvGBfzGbbb0bBJTi-13" value="&lt;font color=&quot;#007fff&quot;&gt;&lt;b&gt;TeamLeader 收到 Engineer2 的 AIMessage 后直到项目已经开发且部署，生成用户提示任务：&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;[&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;Plan.finish_current_task&#39;, &#39;args&#39;: {}},&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;RoleZero.reply_to_human&#39;, &#39;args&#39;: {&#39;content&#39;: &#39;2048小游戏已经开发完成并成功部署！您可以访问 http://127.0.0.1:8000/index.html 来体验游戏。游戏包含了所有要求的功能：基本游戏逻辑、计分系统和重新开始功能。&#39;}},&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;&amp;nbsp; {&#39;command_name&#39;: &#39;end&#39;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#007fff&quot;&gt;]&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1400" y="2760" width="1290" height="110" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
